<!-- HTML header for doxygen 1.8.9.1-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: PixelValue Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">Compute Library
   &#160;<span id="projectnumber">18.11</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('classarm__compute_1_1_pixel_value.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-attribs">Data Fields</a>  </div>
  <div class="headertitle">
<div class="title">PixelValue Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>Class describing the value of a pixel for any image format.  
 <a href="classarm__compute_1_1_pixel_value.xhtml#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="_pixel_value_8h_source.xhtml">PixelValue.h</a>&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a6c754430610a785d5cb27e3b0ac396b8"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_pixel_value.xhtml#a6c754430610a785d5cb27e3b0ac396b8">PixelValue</a> ()</td></tr>
<tr class="memdesc:a6c754430610a785d5cb27e3b0ac396b8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Default constructor: value initialized to 0.  <a href="#a6c754430610a785d5cb27e3b0ac396b8">More...</a><br /></td></tr>
<tr class="separator:a6c754430610a785d5cb27e3b0ac396b8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aeee8c50430251df2909cb16bd435a0b9"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_pixel_value.xhtml#aeee8c50430251df2909cb16bd435a0b9">PixelValue</a> (uint8_t v)</td></tr>
<tr class="memdesc:aeee8c50430251df2909cb16bd435a0b9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Initialize the union with a U8 pixel value.  <a href="#aeee8c50430251df2909cb16bd435a0b9">More...</a><br /></td></tr>
<tr class="separator:aeee8c50430251df2909cb16bd435a0b9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a013dcabbedc5e470addaefe209c1d970"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_pixel_value.xhtml#a013dcabbedc5e470addaefe209c1d970">PixelValue</a> (uint16_t v)</td></tr>
<tr class="memdesc:a013dcabbedc5e470addaefe209c1d970"><td class="mdescLeft">&#160;</td><td class="mdescRight">Initialize the union with a U16 pixel value.  <a href="#a013dcabbedc5e470addaefe209c1d970">More...</a><br /></td></tr>
<tr class="separator:a013dcabbedc5e470addaefe209c1d970"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a759f09965687c6aea87dc4df7dd6f6b8"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_pixel_value.xhtml#a759f09965687c6aea87dc4df7dd6f6b8">PixelValue</a> (int16_t v)</td></tr>
<tr class="memdesc:a759f09965687c6aea87dc4df7dd6f6b8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Initialize the union with a S16 pixel value.  <a href="#a759f09965687c6aea87dc4df7dd6f6b8">More...</a><br /></td></tr>
<tr class="separator:a759f09965687c6aea87dc4df7dd6f6b8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac04b0e04c1556f01d22c34af2afa564f"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_pixel_value.xhtml#ac04b0e04c1556f01d22c34af2afa564f">PixelValue</a> (uint32_t v)</td></tr>
<tr class="memdesc:ac04b0e04c1556f01d22c34af2afa564f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Initialize the union with a U32 pixel value.  <a href="#ac04b0e04c1556f01d22c34af2afa564f">More...</a><br /></td></tr>
<tr class="separator:ac04b0e04c1556f01d22c34af2afa564f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9deb64fff1a3515aa4bcd6f21dd3c4c0"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_pixel_value.xhtml#a9deb64fff1a3515aa4bcd6f21dd3c4c0">PixelValue</a> (int32_t v)</td></tr>
<tr class="memdesc:a9deb64fff1a3515aa4bcd6f21dd3c4c0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Initialize the union with a S32 pixel value.  <a href="#a9deb64fff1a3515aa4bcd6f21dd3c4c0">More...</a><br /></td></tr>
<tr class="separator:a9deb64fff1a3515aa4bcd6f21dd3c4c0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac172f9f54700f67f512eb0ab043d3c25"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_pixel_value.xhtml#ac172f9f54700f67f512eb0ab043d3c25">PixelValue</a> (uint64_t v)</td></tr>
<tr class="memdesc:ac172f9f54700f67f512eb0ab043d3c25"><td class="mdescLeft">&#160;</td><td class="mdescRight">Initialize the union with a U64 pixel value.  <a href="#ac172f9f54700f67f512eb0ab043d3c25">More...</a><br /></td></tr>
<tr class="separator:ac172f9f54700f67f512eb0ab043d3c25"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a06640bfee0fe6a6d4d8026b93e5a51b4"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_pixel_value.xhtml#a06640bfee0fe6a6d4d8026b93e5a51b4">PixelValue</a> (int64_t v)</td></tr>
<tr class="memdesc:a06640bfee0fe6a6d4d8026b93e5a51b4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Initialize the union with a S64 pixel value.  <a href="#a06640bfee0fe6a6d4d8026b93e5a51b4">More...</a><br /></td></tr>
<tr class="separator:a06640bfee0fe6a6d4d8026b93e5a51b4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3bc8ecbe2fec0390ab16c094a5b0f476"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_pixel_value.xhtml#a3bc8ecbe2fec0390ab16c094a5b0f476">PixelValue</a> (<a class="el" href="namespacearm__compute.xhtml#a73e2825fd61d349c5ca2f5313e3c8ea1">half</a> v)</td></tr>
<tr class="memdesc:a3bc8ecbe2fec0390ab16c094a5b0f476"><td class="mdescLeft">&#160;</td><td class="mdescRight">Initialize the union with a F16 pixel value.  <a href="#a3bc8ecbe2fec0390ab16c094a5b0f476">More...</a><br /></td></tr>
<tr class="separator:a3bc8ecbe2fec0390ab16c094a5b0f476"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a90103a4ef4ab615848bb3afce5b97be1"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_pixel_value.xhtml#a90103a4ef4ab615848bb3afce5b97be1">PixelValue</a> (float v)</td></tr>
<tr class="memdesc:a90103a4ef4ab615848bb3afce5b97be1"><td class="mdescLeft">&#160;</td><td class="mdescRight">Initialize the union with a F32 pixel value.  <a href="#a90103a4ef4ab615848bb3afce5b97be1">More...</a><br /></td></tr>
<tr class="separator:a90103a4ef4ab615848bb3afce5b97be1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4adb7aa7ddf961dc4344cf857fecc62c"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_pixel_value.xhtml#a4adb7aa7ddf961dc4344cf857fecc62c">PixelValue</a> (double v)</td></tr>
<tr class="memdesc:a4adb7aa7ddf961dc4344cf857fecc62c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Initialize the union with a F64 pixel value.  <a href="#a4adb7aa7ddf961dc4344cf857fecc62c">More...</a><br /></td></tr>
<tr class="separator:a4adb7aa7ddf961dc4344cf857fecc62c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a66c4c1f8b1962d71162d7ac0b3ef65bc"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_pixel_value.xhtml#a66c4c1f8b1962d71162d7ac0b3ef65bc">get</a> (uint8_t &amp;v) const</td></tr>
<tr class="memdesc:a66c4c1f8b1962d71162d7ac0b3ef65bc"><td class="mdescLeft">&#160;</td><td class="mdescRight">Interpret the pixel value as a U8.  <a href="#a66c4c1f8b1962d71162d7ac0b3ef65bc">More...</a><br /></td></tr>
<tr class="separator:a66c4c1f8b1962d71162d7ac0b3ef65bc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5a167d63f02bc4988e688f34a32b599b"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_pixel_value.xhtml#a5a167d63f02bc4988e688f34a32b599b">get</a> (int8_t &amp;v) const</td></tr>
<tr class="memdesc:a5a167d63f02bc4988e688f34a32b599b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Interpret the pixel value as a S8.  <a href="#a5a167d63f02bc4988e688f34a32b599b">More...</a><br /></td></tr>
<tr class="separator:a5a167d63f02bc4988e688f34a32b599b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2fc59f298e3c9452086f525479458400"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_pixel_value.xhtml#a2fc59f298e3c9452086f525479458400">get</a> (uint16_t &amp;v) const</td></tr>
<tr class="memdesc:a2fc59f298e3c9452086f525479458400"><td class="mdescLeft">&#160;</td><td class="mdescRight">Interpret the pixel value as a U16.  <a href="#a2fc59f298e3c9452086f525479458400">More...</a><br /></td></tr>
<tr class="separator:a2fc59f298e3c9452086f525479458400"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adc9730a5794778778c9290d824169856"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_pixel_value.xhtml#adc9730a5794778778c9290d824169856">get</a> (int16_t &amp;v) const</td></tr>
<tr class="memdesc:adc9730a5794778778c9290d824169856"><td class="mdescLeft">&#160;</td><td class="mdescRight">Interpret the pixel value as a S16.  <a href="#adc9730a5794778778c9290d824169856">More...</a><br /></td></tr>
<tr class="separator:adc9730a5794778778c9290d824169856"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a951fd574457b3c1d973bab27852497bf"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_pixel_value.xhtml#a951fd574457b3c1d973bab27852497bf">get</a> (uint32_t &amp;v) const</td></tr>
<tr class="memdesc:a951fd574457b3c1d973bab27852497bf"><td class="mdescLeft">&#160;</td><td class="mdescRight">Interpret the pixel value as a U32.  <a href="#a951fd574457b3c1d973bab27852497bf">More...</a><br /></td></tr>
<tr class="separator:a951fd574457b3c1d973bab27852497bf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab70f4f8cb3cdca635ea5b663efdf58e4"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_pixel_value.xhtml#ab70f4f8cb3cdca635ea5b663efdf58e4">get</a> (int32_t &amp;v) const</td></tr>
<tr class="memdesc:ab70f4f8cb3cdca635ea5b663efdf58e4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Interpret the pixel value as a S32.  <a href="#ab70f4f8cb3cdca635ea5b663efdf58e4">More...</a><br /></td></tr>
<tr class="separator:ab70f4f8cb3cdca635ea5b663efdf58e4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa6891658c7f836b24e81a909e262a0b5"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_pixel_value.xhtml#aa6891658c7f836b24e81a909e262a0b5">get</a> (uint64_t &amp;v) const</td></tr>
<tr class="memdesc:aa6891658c7f836b24e81a909e262a0b5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Interpret the pixel value as a U64.  <a href="#aa6891658c7f836b24e81a909e262a0b5">More...</a><br /></td></tr>
<tr class="separator:aa6891658c7f836b24e81a909e262a0b5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac9e6a107a838475befb127d19810819b"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_pixel_value.xhtml#ac9e6a107a838475befb127d19810819b">get</a> (int64_t &amp;v) const</td></tr>
<tr class="memdesc:ac9e6a107a838475befb127d19810819b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Interpret the pixel value as a S64.  <a href="#ac9e6a107a838475befb127d19810819b">More...</a><br /></td></tr>
<tr class="separator:ac9e6a107a838475befb127d19810819b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a094ed5eee19e2d210859e3e0a2c2ec77"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_pixel_value.xhtml#a094ed5eee19e2d210859e3e0a2c2ec77">get</a> (<a class="el" href="namespacearm__compute.xhtml#a73e2825fd61d349c5ca2f5313e3c8ea1">half</a> &amp;v) const</td></tr>
<tr class="memdesc:a094ed5eee19e2d210859e3e0a2c2ec77"><td class="mdescLeft">&#160;</td><td class="mdescRight">Interpret the pixel value as a F16.  <a href="#a094ed5eee19e2d210859e3e0a2c2ec77">More...</a><br /></td></tr>
<tr class="separator:a094ed5eee19e2d210859e3e0a2c2ec77"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a43fd30dcf0471d3194662a798cab5b07"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_pixel_value.xhtml#a43fd30dcf0471d3194662a798cab5b07">get</a> (float &amp;v) const</td></tr>
<tr class="memdesc:a43fd30dcf0471d3194662a798cab5b07"><td class="mdescLeft">&#160;</td><td class="mdescRight">Interpret the pixel value as a F32.  <a href="#a43fd30dcf0471d3194662a798cab5b07">More...</a><br /></td></tr>
<tr class="separator:a43fd30dcf0471d3194662a798cab5b07"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a62291388fe2e02f95e0934f08d5a7064"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_pixel_value.xhtml#a62291388fe2e02f95e0934f08d5a7064">get</a> (double &amp;v) const</td></tr>
<tr class="memdesc:a62291388fe2e02f95e0934f08d5a7064"><td class="mdescLeft">&#160;</td><td class="mdescRight">Interpret the pixel value as a double.  <a href="#a62291388fe2e02f95e0934f08d5a7064">More...</a><br /></td></tr>
<tr class="separator:a62291388fe2e02f95e0934f08d5a7064"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afe5b3274209fa0f482c22a244de2773d"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:afe5b3274209fa0f482c22a244de2773d"><td class="memTemplItemLeft" align="right" valign="top">T&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_pixel_value.xhtml#afe5b3274209fa0f482c22a244de2773d">get</a> () const</td></tr>
<tr class="memdesc:afe5b3274209fa0f482c22a244de2773d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the pixel value.  <a href="#afe5b3274209fa0f482c22a244de2773d">More...</a><br /></td></tr>
<tr class="separator:afe5b3274209fa0f482c22a244de2773d"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-attribs"></a>
Data Fields</h2></td></tr>
<tr class="memitem:a3e79b9ee2384b30bb1a1bb85155bb803"><td class="memItemLeft" >union {</td></tr>
<tr class="memitem:a91ee3b6e2425e78feef03fb5c69d63e5"><td class="memItemLeft" >&#160;&#160;&#160;uint64_t&#160;&#160;&#160;<a class="el" href="classarm__compute_1_1_pixel_value.xhtml#a91ee3b6e2425e78feef03fb5c69d63e5">u64</a></td></tr>
<tr class="memdesc:a91ee3b6e2425e78feef03fb5c69d63e5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Single channel U64.  <a href="#a91ee3b6e2425e78feef03fb5c69d63e5">More...</a><br /></td></tr>
<tr class="separator:a91ee3b6e2425e78feef03fb5c69d63e5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae66ed2ec20c2115ff9970c73168fc0df"><td class="memItemLeft" >&#160;&#160;&#160;int64_t&#160;&#160;&#160;<a class="el" href="classarm__compute_1_1_pixel_value.xhtml#ae66ed2ec20c2115ff9970c73168fc0df">s64</a></td></tr>
<tr class="memdesc:ae66ed2ec20c2115ff9970c73168fc0df"><td class="mdescLeft">&#160;</td><td class="mdescRight">Single channel S64.  <a href="#ae66ed2ec20c2115ff9970c73168fc0df">More...</a><br /></td></tr>
<tr class="separator:ae66ed2ec20c2115ff9970c73168fc0df"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afe42472c55e7e5df52b8aaca94d0fa7e"><td class="memItemLeft" >&#160;&#160;&#160;uint8_t&#160;&#160;&#160;<a class="el" href="classarm__compute_1_1_pixel_value.xhtml#afe42472c55e7e5df52b8aaca94d0fa7e">rgb</a> [3]</td></tr>
<tr class="memdesc:afe42472c55e7e5df52b8aaca94d0fa7e"><td class="mdescLeft">&#160;</td><td class="mdescRight">3 channels: RGB888  <a href="#afe42472c55e7e5df52b8aaca94d0fa7e">More...</a><br /></td></tr>
<tr class="separator:afe42472c55e7e5df52b8aaca94d0fa7e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9d55760e9791473bc0c71da0fc648ee0"><td class="memItemLeft" >&#160;&#160;&#160;uint8_t&#160;&#160;&#160;<a class="el" href="classarm__compute_1_1_pixel_value.xhtml#a9d55760e9791473bc0c71da0fc648ee0">yuv</a> [3]</td></tr>
<tr class="memdesc:a9d55760e9791473bc0c71da0fc648ee0"><td class="mdescLeft">&#160;</td><td class="mdescRight">3 channels: Any YUV format  <a href="#a9d55760e9791473bc0c71da0fc648ee0">More...</a><br /></td></tr>
<tr class="separator:a9d55760e9791473bc0c71da0fc648ee0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac24a28b797176d8a1e73d27f64c058d2"><td class="memItemLeft" >&#160;&#160;&#160;uint8_t&#160;&#160;&#160;<a class="el" href="classarm__compute_1_1_pixel_value.xhtml#ac24a28b797176d8a1e73d27f64c058d2">rgbx</a> [4]</td></tr>
<tr class="memdesc:ac24a28b797176d8a1e73d27f64c058d2"><td class="mdescLeft">&#160;</td><td class="mdescRight">4 channels: RGBX8888  <a href="#ac24a28b797176d8a1e73d27f64c058d2">More...</a><br /></td></tr>
<tr class="separator:ac24a28b797176d8a1e73d27f64c058d2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4a511caf994d6ffbbd9180293c53fd38"><td class="memItemLeft" >&#160;&#160;&#160;double&#160;&#160;&#160;<a class="el" href="classarm__compute_1_1_pixel_value.xhtml#a4a511caf994d6ffbbd9180293c53fd38">f64</a></td></tr>
<tr class="memdesc:a4a511caf994d6ffbbd9180293c53fd38"><td class="mdescLeft">&#160;</td><td class="mdescRight">Single channel double.  <a href="#a4a511caf994d6ffbbd9180293c53fd38">More...</a><br /></td></tr>
<tr class="separator:a4a511caf994d6ffbbd9180293c53fd38"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7d886905c667c4e8e91251b6a3a98f39"><td class="memItemLeft" >&#160;&#160;&#160;float&#160;&#160;&#160;<a class="el" href="classarm__compute_1_1_pixel_value.xhtml#a7d886905c667c4e8e91251b6a3a98f39">f32</a></td></tr>
<tr class="memdesc:a7d886905c667c4e8e91251b6a3a98f39"><td class="mdescLeft">&#160;</td><td class="mdescRight">Single channel float 32.  <a href="#a7d886905c667c4e8e91251b6a3a98f39">More...</a><br /></td></tr>
<tr class="separator:a7d886905c667c4e8e91251b6a3a98f39"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4222b84bae684380152759cada8601c5"><td class="memItemLeft" >&#160;&#160;&#160;<a class="el" href="namespacearm__compute.xhtml#a73e2825fd61d349c5ca2f5313e3c8ea1">half</a>&#160;&#160;&#160;<a class="el" href="classarm__compute_1_1_pixel_value.xhtml#a4222b84bae684380152759cada8601c5">f16</a></td></tr>
<tr class="memdesc:a4222b84bae684380152759cada8601c5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Single channel F16.  <a href="#a4222b84bae684380152759cada8601c5">More...</a><br /></td></tr>
<tr class="separator:a4222b84bae684380152759cada8601c5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0084c9e8c5778849f41d9de5df9c0f85"><td class="memItemLeft" >&#160;&#160;&#160;uint8_t&#160;&#160;&#160;<a class="el" href="classarm__compute_1_1_pixel_value.xhtml#a0084c9e8c5778849f41d9de5df9c0f85">u8</a></td></tr>
<tr class="memdesc:a0084c9e8c5778849f41d9de5df9c0f85"><td class="mdescLeft">&#160;</td><td class="mdescRight">Single channel U8.  <a href="#a0084c9e8c5778849f41d9de5df9c0f85">More...</a><br /></td></tr>
<tr class="separator:a0084c9e8c5778849f41d9de5df9c0f85"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acf0eb502f72832af26e62c69457bd1b6"><td class="memItemLeft" >&#160;&#160;&#160;int8_t&#160;&#160;&#160;<a class="el" href="classarm__compute_1_1_pixel_value.xhtml#acf0eb502f72832af26e62c69457bd1b6">s8</a></td></tr>
<tr class="memdesc:acf0eb502f72832af26e62c69457bd1b6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Single channel S8.  <a href="#acf0eb502f72832af26e62c69457bd1b6">More...</a><br /></td></tr>
<tr class="separator:acf0eb502f72832af26e62c69457bd1b6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1234f83efa812e259523c91799614a3c"><td class="memItemLeft" >&#160;&#160;&#160;uint16_t&#160;&#160;&#160;<a class="el" href="classarm__compute_1_1_pixel_value.xhtml#a1234f83efa812e259523c91799614a3c">u16</a></td></tr>
<tr class="memdesc:a1234f83efa812e259523c91799614a3c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Single channel U16.  <a href="#a1234f83efa812e259523c91799614a3c">More...</a><br /></td></tr>
<tr class="separator:a1234f83efa812e259523c91799614a3c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adbbcd82ccbf61d179ba87ee5fe1bb7d8"><td class="memItemLeft" >&#160;&#160;&#160;int16_t&#160;&#160;&#160;<a class="el" href="classarm__compute_1_1_pixel_value.xhtml#adbbcd82ccbf61d179ba87ee5fe1bb7d8">s16</a></td></tr>
<tr class="memdesc:adbbcd82ccbf61d179ba87ee5fe1bb7d8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Single channel S16.  <a href="#adbbcd82ccbf61d179ba87ee5fe1bb7d8">More...</a><br /></td></tr>
<tr class="separator:adbbcd82ccbf61d179ba87ee5fe1bb7d8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae65af0c4a8ee050043fe4b575f0a26a0"><td class="memItemLeft" >&#160;&#160;&#160;uint32_t&#160;&#160;&#160;<a class="el" href="classarm__compute_1_1_pixel_value.xhtml#ae65af0c4a8ee050043fe4b575f0a26a0">u32</a></td></tr>
<tr class="memdesc:ae65af0c4a8ee050043fe4b575f0a26a0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Single channel U32.  <a href="#ae65af0c4a8ee050043fe4b575f0a26a0">More...</a><br /></td></tr>
<tr class="separator:ae65af0c4a8ee050043fe4b575f0a26a0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acd1420e45b5486795a46cf1a5943a0ff"><td class="memItemLeft" >&#160;&#160;&#160;int32_t&#160;&#160;&#160;<a class="el" href="classarm__compute_1_1_pixel_value.xhtml#acd1420e45b5486795a46cf1a5943a0ff">s32</a></td></tr>
<tr class="memdesc:acd1420e45b5486795a46cf1a5943a0ff"><td class="mdescLeft">&#160;</td><td class="mdescRight">Single channel S32.  <a href="#acd1420e45b5486795a46cf1a5943a0ff">More...</a><br /></td></tr>
<tr class="separator:acd1420e45b5486795a46cf1a5943a0ff"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3e79b9ee2384b30bb1a1bb85155bb803"><td class="memItemLeft" valign="top">}&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1_pixel_value.xhtml#a3e79b9ee2384b30bb1a1bb85155bb803">value</a></td></tr>
<tr class="memdesc:a3e79b9ee2384b30bb1a1bb85155bb803"><td class="mdescLeft">&#160;</td><td class="mdescRight">Union which describes the value of a pixel for any image format.  <a href="#a3e79b9ee2384b30bb1a1bb85155bb803">More...</a><br /></td></tr>
<tr class="separator:a3e79b9ee2384b30bb1a1bb85155bb803"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>Class describing the value of a pixel for any image format. </p>

<p class="definition">Definition at line <a class="el" href="_pixel_value_8h_source.xhtml#l00034">34</a> of file <a class="el" href="_pixel_value_8h_source.xhtml">PixelValue.h</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="a6c754430610a785d5cb27e3b0ac396b8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6c754430610a785d5cb27e3b0ac396b8">&#9670;&nbsp;</a></span>PixelValue() <span class="overload">[1/11]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_pixel_value.xhtml">PixelValue</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Default constructor: value initialized to 0. </p>

<p class="definition">Definition at line <a class="el" href="_pixel_value_8h_source.xhtml#l00038">38</a> of file <a class="el" href="_pixel_value_8h_source.xhtml">PixelValue.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;        : <a class="code" href="classarm__compute_1_1_pixel_value.xhtml#a3e79b9ee2384b30bb1a1bb85155bb803">value</a>{ uint64_t(0) }</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;    {</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;    }</div><div class="ttc" id="classarm__compute_1_1_pixel_value_xhtml_a3e79b9ee2384b30bb1a1bb85155bb803"><div class="ttname"><a href="classarm__compute_1_1_pixel_value.xhtml#a3e79b9ee2384b30bb1a1bb85155bb803">arm_compute::PixelValue::value</a></div><div class="ttdeci">union arm_compute::PixelValue::@0 value</div><div class="ttdoc">Union which describes the value of a pixel for any image format. </div></div>
</div><!-- fragment -->
</div>
</div>
<a id="aeee8c50430251df2909cb16bd435a0b9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aeee8c50430251df2909cb16bd435a0b9">&#9670;&nbsp;</a></span>PixelValue() <span class="overload">[2/11]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_pixel_value.xhtml">PixelValue</a> </td>
          <td>(</td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>v</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Initialize the union with a U8 pixel value. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">v</td><td>U8 value. </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="_pixel_value_8h_source.xhtml#l00046">46</a> of file <a class="el" href="_pixel_value_8h_source.xhtml">PixelValue.h</a>.</p>

<p class="reference">References <a class="el" href="classarm__compute_1_1_pixel_value.xhtml#a3e79b9ee2384b30bb1a1bb85155bb803">PixelValue::value</a>.</p>
<div class="fragment"><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;        : <a class="code" href="classarm__compute_1_1_pixel_value.xhtml#a6c754430610a785d5cb27e3b0ac396b8">PixelValue</a>()</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;    {</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;        <a class="code" href="classarm__compute_1_1_pixel_value.xhtml#a3e79b9ee2384b30bb1a1bb85155bb803">value</a>.u8 = v;</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;    }</div><div class="ttc" id="classarm__compute_1_1_pixel_value_xhtml_a6c754430610a785d5cb27e3b0ac396b8"><div class="ttname"><a href="classarm__compute_1_1_pixel_value.xhtml#a6c754430610a785d5cb27e3b0ac396b8">arm_compute::PixelValue::PixelValue</a></div><div class="ttdeci">PixelValue()</div><div class="ttdoc">Default constructor: value initialized to 0. </div><div class="ttdef"><b>Definition:</b> <a href="_pixel_value_8h_source.xhtml#l00038">PixelValue.h:38</a></div></div>
<div class="ttc" id="classarm__compute_1_1_pixel_value_xhtml_a3e79b9ee2384b30bb1a1bb85155bb803"><div class="ttname"><a href="classarm__compute_1_1_pixel_value.xhtml#a3e79b9ee2384b30bb1a1bb85155bb803">arm_compute::PixelValue::value</a></div><div class="ttdeci">union arm_compute::PixelValue::@0 value</div><div class="ttdoc">Union which describes the value of a pixel for any image format. </div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a013dcabbedc5e470addaefe209c1d970"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a013dcabbedc5e470addaefe209c1d970">&#9670;&nbsp;</a></span>PixelValue() <span class="overload">[3/11]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_pixel_value.xhtml">PixelValue</a> </td>
          <td>(</td>
          <td class="paramtype">uint16_t&#160;</td>
          <td class="paramname"><em>v</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Initialize the union with a U16 pixel value. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">v</td><td>U16 value. </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="_pixel_value_8h_source.xhtml#l00055">55</a> of file <a class="el" href="_pixel_value_8h_source.xhtml">PixelValue.h</a>.</p>

<p class="reference">References <a class="el" href="classarm__compute_1_1_pixel_value.xhtml#a3e79b9ee2384b30bb1a1bb85155bb803">PixelValue::value</a>.</p>
<div class="fragment"><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;        : <a class="code" href="classarm__compute_1_1_pixel_value.xhtml#a6c754430610a785d5cb27e3b0ac396b8">PixelValue</a>()</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;    {</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;        <a class="code" href="classarm__compute_1_1_pixel_value.xhtml#a3e79b9ee2384b30bb1a1bb85155bb803">value</a>.u16 = v;</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;    }</div><div class="ttc" id="classarm__compute_1_1_pixel_value_xhtml_a6c754430610a785d5cb27e3b0ac396b8"><div class="ttname"><a href="classarm__compute_1_1_pixel_value.xhtml#a6c754430610a785d5cb27e3b0ac396b8">arm_compute::PixelValue::PixelValue</a></div><div class="ttdeci">PixelValue()</div><div class="ttdoc">Default constructor: value initialized to 0. </div><div class="ttdef"><b>Definition:</b> <a href="_pixel_value_8h_source.xhtml#l00038">PixelValue.h:38</a></div></div>
<div class="ttc" id="classarm__compute_1_1_pixel_value_xhtml_a3e79b9ee2384b30bb1a1bb85155bb803"><div class="ttname"><a href="classarm__compute_1_1_pixel_value.xhtml#a3e79b9ee2384b30bb1a1bb85155bb803">arm_compute::PixelValue::value</a></div><div class="ttdeci">union arm_compute::PixelValue::@0 value</div><div class="ttdoc">Union which describes the value of a pixel for any image format. </div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a759f09965687c6aea87dc4df7dd6f6b8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a759f09965687c6aea87dc4df7dd6f6b8">&#9670;&nbsp;</a></span>PixelValue() <span class="overload">[4/11]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_pixel_value.xhtml">PixelValue</a> </td>
          <td>(</td>
          <td class="paramtype">int16_t&#160;</td>
          <td class="paramname"><em>v</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Initialize the union with a S16 pixel value. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">v</td><td>S16 value. </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="_pixel_value_8h_source.xhtml#l00064">64</a> of file <a class="el" href="_pixel_value_8h_source.xhtml">PixelValue.h</a>.</p>

<p class="reference">References <a class="el" href="classarm__compute_1_1_pixel_value.xhtml#a3e79b9ee2384b30bb1a1bb85155bb803">PixelValue::value</a>.</p>
<div class="fragment"><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;        : <a class="code" href="classarm__compute_1_1_pixel_value.xhtml#a6c754430610a785d5cb27e3b0ac396b8">PixelValue</a>()</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;    {</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;        <a class="code" href="classarm__compute_1_1_pixel_value.xhtml#a3e79b9ee2384b30bb1a1bb85155bb803">value</a>.s16 = v;</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;    }</div><div class="ttc" id="classarm__compute_1_1_pixel_value_xhtml_a6c754430610a785d5cb27e3b0ac396b8"><div class="ttname"><a href="classarm__compute_1_1_pixel_value.xhtml#a6c754430610a785d5cb27e3b0ac396b8">arm_compute::PixelValue::PixelValue</a></div><div class="ttdeci">PixelValue()</div><div class="ttdoc">Default constructor: value initialized to 0. </div><div class="ttdef"><b>Definition:</b> <a href="_pixel_value_8h_source.xhtml#l00038">PixelValue.h:38</a></div></div>
<div class="ttc" id="classarm__compute_1_1_pixel_value_xhtml_a3e79b9ee2384b30bb1a1bb85155bb803"><div class="ttname"><a href="classarm__compute_1_1_pixel_value.xhtml#a3e79b9ee2384b30bb1a1bb85155bb803">arm_compute::PixelValue::value</a></div><div class="ttdeci">union arm_compute::PixelValue::@0 value</div><div class="ttdoc">Union which describes the value of a pixel for any image format. </div></div>
</div><!-- fragment -->
</div>
</div>
<a id="ac04b0e04c1556f01d22c34af2afa564f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac04b0e04c1556f01d22c34af2afa564f">&#9670;&nbsp;</a></span>PixelValue() <span class="overload">[5/11]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_pixel_value.xhtml">PixelValue</a> </td>
          <td>(</td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>v</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Initialize the union with a U32 pixel value. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">v</td><td>U32 value. </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="_pixel_value_8h_source.xhtml#l00073">73</a> of file <a class="el" href="_pixel_value_8h_source.xhtml">PixelValue.h</a>.</p>

<p class="reference">References <a class="el" href="classarm__compute_1_1_pixel_value.xhtml#a3e79b9ee2384b30bb1a1bb85155bb803">PixelValue::value</a>.</p>
<div class="fragment"><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;        : <a class="code" href="classarm__compute_1_1_pixel_value.xhtml#a6c754430610a785d5cb27e3b0ac396b8">PixelValue</a>()</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;    {</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;        <a class="code" href="classarm__compute_1_1_pixel_value.xhtml#a3e79b9ee2384b30bb1a1bb85155bb803">value</a>.u32 = v;</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;    }</div><div class="ttc" id="classarm__compute_1_1_pixel_value_xhtml_a6c754430610a785d5cb27e3b0ac396b8"><div class="ttname"><a href="classarm__compute_1_1_pixel_value.xhtml#a6c754430610a785d5cb27e3b0ac396b8">arm_compute::PixelValue::PixelValue</a></div><div class="ttdeci">PixelValue()</div><div class="ttdoc">Default constructor: value initialized to 0. </div><div class="ttdef"><b>Definition:</b> <a href="_pixel_value_8h_source.xhtml#l00038">PixelValue.h:38</a></div></div>
<div class="ttc" id="classarm__compute_1_1_pixel_value_xhtml_a3e79b9ee2384b30bb1a1bb85155bb803"><div class="ttname"><a href="classarm__compute_1_1_pixel_value.xhtml#a3e79b9ee2384b30bb1a1bb85155bb803">arm_compute::PixelValue::value</a></div><div class="ttdeci">union arm_compute::PixelValue::@0 value</div><div class="ttdoc">Union which describes the value of a pixel for any image format. </div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a9deb64fff1a3515aa4bcd6f21dd3c4c0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9deb64fff1a3515aa4bcd6f21dd3c4c0">&#9670;&nbsp;</a></span>PixelValue() <span class="overload">[6/11]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_pixel_value.xhtml">PixelValue</a> </td>
          <td>(</td>
          <td class="paramtype">int32_t&#160;</td>
          <td class="paramname"><em>v</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Initialize the union with a S32 pixel value. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">v</td><td>S32 value. </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="_pixel_value_8h_source.xhtml#l00082">82</a> of file <a class="el" href="_pixel_value_8h_source.xhtml">PixelValue.h</a>.</p>

<p class="reference">References <a class="el" href="classarm__compute_1_1_pixel_value.xhtml#a3e79b9ee2384b30bb1a1bb85155bb803">PixelValue::value</a>.</p>
<div class="fragment"><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;        : <a class="code" href="classarm__compute_1_1_pixel_value.xhtml#a6c754430610a785d5cb27e3b0ac396b8">PixelValue</a>()</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;    {</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;        <a class="code" href="classarm__compute_1_1_pixel_value.xhtml#a3e79b9ee2384b30bb1a1bb85155bb803">value</a>.s32 = v;</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;    }</div><div class="ttc" id="classarm__compute_1_1_pixel_value_xhtml_a6c754430610a785d5cb27e3b0ac396b8"><div class="ttname"><a href="classarm__compute_1_1_pixel_value.xhtml#a6c754430610a785d5cb27e3b0ac396b8">arm_compute::PixelValue::PixelValue</a></div><div class="ttdeci">PixelValue()</div><div class="ttdoc">Default constructor: value initialized to 0. </div><div class="ttdef"><b>Definition:</b> <a href="_pixel_value_8h_source.xhtml#l00038">PixelValue.h:38</a></div></div>
<div class="ttc" id="classarm__compute_1_1_pixel_value_xhtml_a3e79b9ee2384b30bb1a1bb85155bb803"><div class="ttname"><a href="classarm__compute_1_1_pixel_value.xhtml#a3e79b9ee2384b30bb1a1bb85155bb803">arm_compute::PixelValue::value</a></div><div class="ttdeci">union arm_compute::PixelValue::@0 value</div><div class="ttdoc">Union which describes the value of a pixel for any image format. </div></div>
</div><!-- fragment -->
</div>
</div>
<a id="ac172f9f54700f67f512eb0ab043d3c25"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac172f9f54700f67f512eb0ab043d3c25">&#9670;&nbsp;</a></span>PixelValue() <span class="overload">[7/11]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_pixel_value.xhtml">PixelValue</a> </td>
          <td>(</td>
          <td class="paramtype">uint64_t&#160;</td>
          <td class="paramname"><em>v</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Initialize the union with a U64 pixel value. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">v</td><td>U64 value. </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="_pixel_value_8h_source.xhtml#l00092">92</a> of file <a class="el" href="_pixel_value_8h_source.xhtml">PixelValue.h</a>.</p>

<p class="reference">References <a class="el" href="classarm__compute_1_1_pixel_value.xhtml#a3e79b9ee2384b30bb1a1bb85155bb803">PixelValue::value</a>.</p>
<div class="fragment"><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;        : <a class="code" href="classarm__compute_1_1_pixel_value.xhtml#a6c754430610a785d5cb27e3b0ac396b8">PixelValue</a>()</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;    {</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;        <a class="code" href="classarm__compute_1_1_pixel_value.xhtml#a3e79b9ee2384b30bb1a1bb85155bb803">value</a>.u64 = v;</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;    }</div><div class="ttc" id="classarm__compute_1_1_pixel_value_xhtml_a6c754430610a785d5cb27e3b0ac396b8"><div class="ttname"><a href="classarm__compute_1_1_pixel_value.xhtml#a6c754430610a785d5cb27e3b0ac396b8">arm_compute::PixelValue::PixelValue</a></div><div class="ttdeci">PixelValue()</div><div class="ttdoc">Default constructor: value initialized to 0. </div><div class="ttdef"><b>Definition:</b> <a href="_pixel_value_8h_source.xhtml#l00038">PixelValue.h:38</a></div></div>
<div class="ttc" id="classarm__compute_1_1_pixel_value_xhtml_a3e79b9ee2384b30bb1a1bb85155bb803"><div class="ttname"><a href="classarm__compute_1_1_pixel_value.xhtml#a3e79b9ee2384b30bb1a1bb85155bb803">arm_compute::PixelValue::value</a></div><div class="ttdeci">union arm_compute::PixelValue::@0 value</div><div class="ttdoc">Union which describes the value of a pixel for any image format. </div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a06640bfee0fe6a6d4d8026b93e5a51b4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a06640bfee0fe6a6d4d8026b93e5a51b4">&#9670;&nbsp;</a></span>PixelValue() <span class="overload">[8/11]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_pixel_value.xhtml">PixelValue</a> </td>
          <td>(</td>
          <td class="paramtype">int64_t&#160;</td>
          <td class="paramname"><em>v</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Initialize the union with a S64 pixel value. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">v</td><td>S64 value. </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="_pixel_value_8h_source.xhtml#l00101">101</a> of file <a class="el" href="_pixel_value_8h_source.xhtml">PixelValue.h</a>.</p>

<p class="reference">References <a class="el" href="classarm__compute_1_1_pixel_value.xhtml#a3e79b9ee2384b30bb1a1bb85155bb803">PixelValue::value</a>.</p>
<div class="fragment"><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;        : <a class="code" href="classarm__compute_1_1_pixel_value.xhtml#a6c754430610a785d5cb27e3b0ac396b8">PixelValue</a>()</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;    {</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;        <a class="code" href="classarm__compute_1_1_pixel_value.xhtml#a3e79b9ee2384b30bb1a1bb85155bb803">value</a>.s64 = v;</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;    }</div><div class="ttc" id="classarm__compute_1_1_pixel_value_xhtml_a6c754430610a785d5cb27e3b0ac396b8"><div class="ttname"><a href="classarm__compute_1_1_pixel_value.xhtml#a6c754430610a785d5cb27e3b0ac396b8">arm_compute::PixelValue::PixelValue</a></div><div class="ttdeci">PixelValue()</div><div class="ttdoc">Default constructor: value initialized to 0. </div><div class="ttdef"><b>Definition:</b> <a href="_pixel_value_8h_source.xhtml#l00038">PixelValue.h:38</a></div></div>
<div class="ttc" id="classarm__compute_1_1_pixel_value_xhtml_a3e79b9ee2384b30bb1a1bb85155bb803"><div class="ttname"><a href="classarm__compute_1_1_pixel_value.xhtml#a3e79b9ee2384b30bb1a1bb85155bb803">arm_compute::PixelValue::value</a></div><div class="ttdeci">union arm_compute::PixelValue::@0 value</div><div class="ttdoc">Union which describes the value of a pixel for any image format. </div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a3bc8ecbe2fec0390ab16c094a5b0f476"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3bc8ecbe2fec0390ab16c094a5b0f476">&#9670;&nbsp;</a></span>PixelValue() <span class="overload">[9/11]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_pixel_value.xhtml">PixelValue</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespacearm__compute.xhtml#a73e2825fd61d349c5ca2f5313e3c8ea1">half</a>&#160;</td>
          <td class="paramname"><em>v</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Initialize the union with a F16 pixel value. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">v</td><td>F16 value. </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="_pixel_value_8h_source.xhtml#l00110">110</a> of file <a class="el" href="_pixel_value_8h_source.xhtml">PixelValue.h</a>.</p>

<p class="reference">References <a class="el" href="classarm__compute_1_1_pixel_value.xhtml#a3e79b9ee2384b30bb1a1bb85155bb803">PixelValue::value</a>.</p>
<div class="fragment"><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;        : <a class="code" href="classarm__compute_1_1_pixel_value.xhtml#a6c754430610a785d5cb27e3b0ac396b8">PixelValue</a>()</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;    {</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;        <a class="code" href="classarm__compute_1_1_pixel_value.xhtml#a3e79b9ee2384b30bb1a1bb85155bb803">value</a>.f16 = v;</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;    }</div><div class="ttc" id="classarm__compute_1_1_pixel_value_xhtml_a6c754430610a785d5cb27e3b0ac396b8"><div class="ttname"><a href="classarm__compute_1_1_pixel_value.xhtml#a6c754430610a785d5cb27e3b0ac396b8">arm_compute::PixelValue::PixelValue</a></div><div class="ttdeci">PixelValue()</div><div class="ttdoc">Default constructor: value initialized to 0. </div><div class="ttdef"><b>Definition:</b> <a href="_pixel_value_8h_source.xhtml#l00038">PixelValue.h:38</a></div></div>
<div class="ttc" id="classarm__compute_1_1_pixel_value_xhtml_a3e79b9ee2384b30bb1a1bb85155bb803"><div class="ttname"><a href="classarm__compute_1_1_pixel_value.xhtml#a3e79b9ee2384b30bb1a1bb85155bb803">arm_compute::PixelValue::value</a></div><div class="ttdeci">union arm_compute::PixelValue::@0 value</div><div class="ttdoc">Union which describes the value of a pixel for any image format. </div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a90103a4ef4ab615848bb3afce5b97be1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a90103a4ef4ab615848bb3afce5b97be1">&#9670;&nbsp;</a></span>PixelValue() <span class="overload">[10/11]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_pixel_value.xhtml">PixelValue</a> </td>
          <td>(</td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>v</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Initialize the union with a F32 pixel value. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">v</td><td>F32 value. </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="_pixel_value_8h_source.xhtml#l00119">119</a> of file <a class="el" href="_pixel_value_8h_source.xhtml">PixelValue.h</a>.</p>

<p class="reference">References <a class="el" href="classarm__compute_1_1_pixel_value.xhtml#a3e79b9ee2384b30bb1a1bb85155bb803">PixelValue::value</a>.</p>
<div class="fragment"><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;        : <a class="code" href="classarm__compute_1_1_pixel_value.xhtml#a6c754430610a785d5cb27e3b0ac396b8">PixelValue</a>()</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;    {</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;        <a class="code" href="classarm__compute_1_1_pixel_value.xhtml#a3e79b9ee2384b30bb1a1bb85155bb803">value</a>.f32 = v;</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;    }</div><div class="ttc" id="classarm__compute_1_1_pixel_value_xhtml_a6c754430610a785d5cb27e3b0ac396b8"><div class="ttname"><a href="classarm__compute_1_1_pixel_value.xhtml#a6c754430610a785d5cb27e3b0ac396b8">arm_compute::PixelValue::PixelValue</a></div><div class="ttdeci">PixelValue()</div><div class="ttdoc">Default constructor: value initialized to 0. </div><div class="ttdef"><b>Definition:</b> <a href="_pixel_value_8h_source.xhtml#l00038">PixelValue.h:38</a></div></div>
<div class="ttc" id="classarm__compute_1_1_pixel_value_xhtml_a3e79b9ee2384b30bb1a1bb85155bb803"><div class="ttname"><a href="classarm__compute_1_1_pixel_value.xhtml#a3e79b9ee2384b30bb1a1bb85155bb803">arm_compute::PixelValue::value</a></div><div class="ttdeci">union arm_compute::PixelValue::@0 value</div><div class="ttdoc">Union which describes the value of a pixel for any image format. </div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a4adb7aa7ddf961dc4344cf857fecc62c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4adb7aa7ddf961dc4344cf857fecc62c">&#9670;&nbsp;</a></span>PixelValue() <span class="overload">[11/11]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_pixel_value.xhtml">PixelValue</a> </td>
          <td>(</td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>v</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Initialize the union with a F64 pixel value. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">v</td><td>F64 value. </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="_pixel_value_8h_source.xhtml#l00128">128</a> of file <a class="el" href="_pixel_value_8h_source.xhtml">PixelValue.h</a>.</p>

<p class="reference">References <a class="el" href="classarm__compute_1_1_pixel_value.xhtml#a3e79b9ee2384b30bb1a1bb85155bb803">PixelValue::value</a>.</p>
<div class="fragment"><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;        : <a class="code" href="classarm__compute_1_1_pixel_value.xhtml#a6c754430610a785d5cb27e3b0ac396b8">PixelValue</a>()</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;    {</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;        <a class="code" href="classarm__compute_1_1_pixel_value.xhtml#a3e79b9ee2384b30bb1a1bb85155bb803">value</a>.f64 = v;</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;    }</div><div class="ttc" id="classarm__compute_1_1_pixel_value_xhtml_a6c754430610a785d5cb27e3b0ac396b8"><div class="ttname"><a href="classarm__compute_1_1_pixel_value.xhtml#a6c754430610a785d5cb27e3b0ac396b8">arm_compute::PixelValue::PixelValue</a></div><div class="ttdeci">PixelValue()</div><div class="ttdoc">Default constructor: value initialized to 0. </div><div class="ttdef"><b>Definition:</b> <a href="_pixel_value_8h_source.xhtml#l00038">PixelValue.h:38</a></div></div>
<div class="ttc" id="classarm__compute_1_1_pixel_value_xhtml_a3e79b9ee2384b30bb1a1bb85155bb803"><div class="ttname"><a href="classarm__compute_1_1_pixel_value.xhtml#a3e79b9ee2384b30bb1a1bb85155bb803">arm_compute::PixelValue::value</a></div><div class="ttdeci">union arm_compute::PixelValue::@0 value</div><div class="ttdoc">Union which describes the value of a pixel for any image format. </div></div>
</div><!-- fragment -->
</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="a66c4c1f8b1962d71162d7ac0b3ef65bc"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a66c4c1f8b1962d71162d7ac0b3ef65bc">&#9670;&nbsp;</a></span>get() <span class="overload">[1/12]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void get </td>
          <td>(</td>
          <td class="paramtype">uint8_t &amp;&#160;</td>
          <td class="paramname"><em>v</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Interpret the pixel value as a U8. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[out]</td><td class="paramname">v</td><td>Returned value </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="_pixel_value_8h_source.xhtml#l00157">157</a> of file <a class="el" href="_pixel_value_8h_source.xhtml">PixelValue.h</a>.</p>

<p class="reference">References <a class="el" href="classarm__compute_1_1_pixel_value.xhtml#a3e79b9ee2384b30bb1a1bb85155bb803">PixelValue::value</a>.</p>

<p class="reference">Referenced by <a class="el" href="_graph_utils_8cpp_source.xhtml#l00532">RandomAccessor::access_tensor()</a>, <a class="el" href="_n_e_fill_inner_border_kernel_8cpp_source.xhtml#l00064">NEFillInnerBorderKernel::run()</a>, and <a class="el" href="_n_e_fill_border_kernel_8cpp_source.xhtml#l00128">NEFillBorderKernel::run()</a>.</p>
<div class="fragment"><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;    {</div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;        v = <a class="code" href="classarm__compute_1_1_pixel_value.xhtml#a3e79b9ee2384b30bb1a1bb85155bb803">value</a>.u8;</div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;    }</div><div class="ttc" id="classarm__compute_1_1_pixel_value_xhtml_a3e79b9ee2384b30bb1a1bb85155bb803"><div class="ttname"><a href="classarm__compute_1_1_pixel_value.xhtml#a3e79b9ee2384b30bb1a1bb85155bb803">arm_compute::PixelValue::value</a></div><div class="ttdeci">union arm_compute::PixelValue::@0 value</div><div class="ttdoc">Union which describes the value of a pixel for any image format. </div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a5a167d63f02bc4988e688f34a32b599b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5a167d63f02bc4988e688f34a32b599b">&#9670;&nbsp;</a></span>get() <span class="overload">[2/12]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void get </td>
          <td>(</td>
          <td class="paramtype">int8_t &amp;&#160;</td>
          <td class="paramname"><em>v</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Interpret the pixel value as a S8. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[out]</td><td class="paramname">v</td><td>Returned value </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="_pixel_value_8h_source.xhtml#l00165">165</a> of file <a class="el" href="_pixel_value_8h_source.xhtml">PixelValue.h</a>.</p>

<p class="reference">References <a class="el" href="classarm__compute_1_1_pixel_value.xhtml#a3e79b9ee2384b30bb1a1bb85155bb803">PixelValue::value</a>.</p>
<div class="fragment"><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;    {</div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;        v = <a class="code" href="classarm__compute_1_1_pixel_value.xhtml#a3e79b9ee2384b30bb1a1bb85155bb803">value</a>.s8;</div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;    }</div><div class="ttc" id="classarm__compute_1_1_pixel_value_xhtml_a3e79b9ee2384b30bb1a1bb85155bb803"><div class="ttname"><a href="classarm__compute_1_1_pixel_value.xhtml#a3e79b9ee2384b30bb1a1bb85155bb803">arm_compute::PixelValue::value</a></div><div class="ttdeci">union arm_compute::PixelValue::@0 value</div><div class="ttdoc">Union which describes the value of a pixel for any image format. </div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a2fc59f298e3c9452086f525479458400"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2fc59f298e3c9452086f525479458400">&#9670;&nbsp;</a></span>get() <span class="overload">[3/12]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void get </td>
          <td>(</td>
          <td class="paramtype">uint16_t &amp;&#160;</td>
          <td class="paramname"><em>v</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Interpret the pixel value as a U16. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[out]</td><td class="paramname">v</td><td>Returned value </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="_pixel_value_8h_source.xhtml#l00173">173</a> of file <a class="el" href="_pixel_value_8h_source.xhtml">PixelValue.h</a>.</p>

<p class="reference">References <a class="el" href="classarm__compute_1_1_pixel_value.xhtml#a3e79b9ee2384b30bb1a1bb85155bb803">PixelValue::value</a>.</p>
<div class="fragment"><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;    {</div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;        v = <a class="code" href="classarm__compute_1_1_pixel_value.xhtml#a3e79b9ee2384b30bb1a1bb85155bb803">value</a>.u16;</div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;    }</div><div class="ttc" id="classarm__compute_1_1_pixel_value_xhtml_a3e79b9ee2384b30bb1a1bb85155bb803"><div class="ttname"><a href="classarm__compute_1_1_pixel_value.xhtml#a3e79b9ee2384b30bb1a1bb85155bb803">arm_compute::PixelValue::value</a></div><div class="ttdeci">union arm_compute::PixelValue::@0 value</div><div class="ttdoc">Union which describes the value of a pixel for any image format. </div></div>
</div><!-- fragment -->
</div>
</div>
<a id="adc9730a5794778778c9290d824169856"></a>
<h2 class="memtitle"><span class="permalink"><a href="#adc9730a5794778778c9290d824169856">&#9670;&nbsp;</a></span>get() <span class="overload">[4/12]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void get </td>
          <td>(</td>
          <td class="paramtype">int16_t &amp;&#160;</td>
          <td class="paramname"><em>v</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Interpret the pixel value as a S16. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[out]</td><td class="paramname">v</td><td>Returned value </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="_pixel_value_8h_source.xhtml#l00181">181</a> of file <a class="el" href="_pixel_value_8h_source.xhtml">PixelValue.h</a>.</p>

<p class="reference">References <a class="el" href="classarm__compute_1_1_pixel_value.xhtml#a3e79b9ee2384b30bb1a1bb85155bb803">PixelValue::value</a>.</p>
<div class="fragment"><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;    {</div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;        v = <a class="code" href="classarm__compute_1_1_pixel_value.xhtml#a3e79b9ee2384b30bb1a1bb85155bb803">value</a>.s16;</div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;    }</div><div class="ttc" id="classarm__compute_1_1_pixel_value_xhtml_a3e79b9ee2384b30bb1a1bb85155bb803"><div class="ttname"><a href="classarm__compute_1_1_pixel_value.xhtml#a3e79b9ee2384b30bb1a1bb85155bb803">arm_compute::PixelValue::value</a></div><div class="ttdeci">union arm_compute::PixelValue::@0 value</div><div class="ttdoc">Union which describes the value of a pixel for any image format. </div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a951fd574457b3c1d973bab27852497bf"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a951fd574457b3c1d973bab27852497bf">&#9670;&nbsp;</a></span>get() <span class="overload">[5/12]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void get </td>
          <td>(</td>
          <td class="paramtype">uint32_t &amp;&#160;</td>
          <td class="paramname"><em>v</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Interpret the pixel value as a U32. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[out]</td><td class="paramname">v</td><td>Returned value </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="_pixel_value_8h_source.xhtml#l00189">189</a> of file <a class="el" href="_pixel_value_8h_source.xhtml">PixelValue.h</a>.</p>

<p class="reference">References <a class="el" href="classarm__compute_1_1_pixel_value.xhtml#a3e79b9ee2384b30bb1a1bb85155bb803">PixelValue::value</a>.</p>
<div class="fragment"><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;    {</div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;        v = <a class="code" href="classarm__compute_1_1_pixel_value.xhtml#a3e79b9ee2384b30bb1a1bb85155bb803">value</a>.u32;</div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;    }</div><div class="ttc" id="classarm__compute_1_1_pixel_value_xhtml_a3e79b9ee2384b30bb1a1bb85155bb803"><div class="ttname"><a href="classarm__compute_1_1_pixel_value.xhtml#a3e79b9ee2384b30bb1a1bb85155bb803">arm_compute::PixelValue::value</a></div><div class="ttdeci">union arm_compute::PixelValue::@0 value</div><div class="ttdoc">Union which describes the value of a pixel for any image format. </div></div>
</div><!-- fragment -->
</div>
</div>
<a id="ab70f4f8cb3cdca635ea5b663efdf58e4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab70f4f8cb3cdca635ea5b663efdf58e4">&#9670;&nbsp;</a></span>get() <span class="overload">[6/12]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void get </td>
          <td>(</td>
          <td class="paramtype">int32_t &amp;&#160;</td>
          <td class="paramname"><em>v</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Interpret the pixel value as a S32. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[out]</td><td class="paramname">v</td><td>Returned value </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="_pixel_value_8h_source.xhtml#l00197">197</a> of file <a class="el" href="_pixel_value_8h_source.xhtml">PixelValue.h</a>.</p>

<p class="reference">References <a class="el" href="classarm__compute_1_1_pixel_value.xhtml#a3e79b9ee2384b30bb1a1bb85155bb803">PixelValue::value</a>.</p>
<div class="fragment"><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;    {</div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;        v = <a class="code" href="classarm__compute_1_1_pixel_value.xhtml#a3e79b9ee2384b30bb1a1bb85155bb803">value</a>.s32;</div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;    }</div><div class="ttc" id="classarm__compute_1_1_pixel_value_xhtml_a3e79b9ee2384b30bb1a1bb85155bb803"><div class="ttname"><a href="classarm__compute_1_1_pixel_value.xhtml#a3e79b9ee2384b30bb1a1bb85155bb803">arm_compute::PixelValue::value</a></div><div class="ttdeci">union arm_compute::PixelValue::@0 value</div><div class="ttdoc">Union which describes the value of a pixel for any image format. </div></div>
</div><!-- fragment -->
</div>
</div>
<a id="aa6891658c7f836b24e81a909e262a0b5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa6891658c7f836b24e81a909e262a0b5">&#9670;&nbsp;</a></span>get() <span class="overload">[7/12]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void get </td>
          <td>(</td>
          <td class="paramtype">uint64_t &amp;&#160;</td>
          <td class="paramname"><em>v</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Interpret the pixel value as a U64. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[out]</td><td class="paramname">v</td><td>Returned value </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="_pixel_value_8h_source.xhtml#l00205">205</a> of file <a class="el" href="_pixel_value_8h_source.xhtml">PixelValue.h</a>.</p>

<p class="reference">References <a class="el" href="classarm__compute_1_1_pixel_value.xhtml#a3e79b9ee2384b30bb1a1bb85155bb803">PixelValue::value</a>.</p>
<div class="fragment"><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;    {</div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;        v = <a class="code" href="classarm__compute_1_1_pixel_value.xhtml#a3e79b9ee2384b30bb1a1bb85155bb803">value</a>.u64;</div><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;    }</div><div class="ttc" id="classarm__compute_1_1_pixel_value_xhtml_a3e79b9ee2384b30bb1a1bb85155bb803"><div class="ttname"><a href="classarm__compute_1_1_pixel_value.xhtml#a3e79b9ee2384b30bb1a1bb85155bb803">arm_compute::PixelValue::value</a></div><div class="ttdeci">union arm_compute::PixelValue::@0 value</div><div class="ttdoc">Union which describes the value of a pixel for any image format. </div></div>
</div><!-- fragment -->
</div>
</div>
<a id="ac9e6a107a838475befb127d19810819b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac9e6a107a838475befb127d19810819b">&#9670;&nbsp;</a></span>get() <span class="overload">[8/12]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void get </td>
          <td>(</td>
          <td class="paramtype">int64_t &amp;&#160;</td>
          <td class="paramname"><em>v</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Interpret the pixel value as a S64. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[out]</td><td class="paramname">v</td><td>Returned value </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="_pixel_value_8h_source.xhtml#l00213">213</a> of file <a class="el" href="_pixel_value_8h_source.xhtml">PixelValue.h</a>.</p>

<p class="reference">References <a class="el" href="classarm__compute_1_1_pixel_value.xhtml#a3e79b9ee2384b30bb1a1bb85155bb803">PixelValue::value</a>.</p>
<div class="fragment"><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;    {</div><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;        v = <a class="code" href="classarm__compute_1_1_pixel_value.xhtml#a3e79b9ee2384b30bb1a1bb85155bb803">value</a>.s64;</div><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;    }</div><div class="ttc" id="classarm__compute_1_1_pixel_value_xhtml_a3e79b9ee2384b30bb1a1bb85155bb803"><div class="ttname"><a href="classarm__compute_1_1_pixel_value.xhtml#a3e79b9ee2384b30bb1a1bb85155bb803">arm_compute::PixelValue::value</a></div><div class="ttdeci">union arm_compute::PixelValue::@0 value</div><div class="ttdoc">Union which describes the value of a pixel for any image format. </div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a094ed5eee19e2d210859e3e0a2c2ec77"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a094ed5eee19e2d210859e3e0a2c2ec77">&#9670;&nbsp;</a></span>get() <span class="overload">[9/12]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void get </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespacearm__compute.xhtml#a73e2825fd61d349c5ca2f5313e3c8ea1">half</a> &amp;&#160;</td>
          <td class="paramname"><em>v</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Interpret the pixel value as a F16. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[out]</td><td class="paramname">v</td><td>Returned value </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="_pixel_value_8h_source.xhtml#l00221">221</a> of file <a class="el" href="_pixel_value_8h_source.xhtml">PixelValue.h</a>.</p>

<p class="reference">References <a class="el" href="classarm__compute_1_1_pixel_value.xhtml#a3e79b9ee2384b30bb1a1bb85155bb803">PixelValue::value</a>.</p>
<div class="fragment"><div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;    {</div><div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;        v = <a class="code" href="classarm__compute_1_1_pixel_value.xhtml#a3e79b9ee2384b30bb1a1bb85155bb803">value</a>.f16;</div><div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;    }</div><div class="ttc" id="classarm__compute_1_1_pixel_value_xhtml_a3e79b9ee2384b30bb1a1bb85155bb803"><div class="ttname"><a href="classarm__compute_1_1_pixel_value.xhtml#a3e79b9ee2384b30bb1a1bb85155bb803">arm_compute::PixelValue::value</a></div><div class="ttdeci">union arm_compute::PixelValue::@0 value</div><div class="ttdoc">Union which describes the value of a pixel for any image format. </div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a43fd30dcf0471d3194662a798cab5b07"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a43fd30dcf0471d3194662a798cab5b07">&#9670;&nbsp;</a></span>get() <span class="overload">[10/12]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void get </td>
          <td>(</td>
          <td class="paramtype">float &amp;&#160;</td>
          <td class="paramname"><em>v</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Interpret the pixel value as a F32. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[out]</td><td class="paramname">v</td><td>Returned value </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="_pixel_value_8h_source.xhtml#l00229">229</a> of file <a class="el" href="_pixel_value_8h_source.xhtml">PixelValue.h</a>.</p>

<p class="reference">References <a class="el" href="classarm__compute_1_1_pixel_value.xhtml#a3e79b9ee2384b30bb1a1bb85155bb803">PixelValue::value</a>.</p>
<div class="fragment"><div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;    {</div><div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;        v = <a class="code" href="classarm__compute_1_1_pixel_value.xhtml#a3e79b9ee2384b30bb1a1bb85155bb803">value</a>.f32;</div><div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;    }</div><div class="ttc" id="classarm__compute_1_1_pixel_value_xhtml_a3e79b9ee2384b30bb1a1bb85155bb803"><div class="ttname"><a href="classarm__compute_1_1_pixel_value.xhtml#a3e79b9ee2384b30bb1a1bb85155bb803">arm_compute::PixelValue::value</a></div><div class="ttdeci">union arm_compute::PixelValue::@0 value</div><div class="ttdoc">Union which describes the value of a pixel for any image format. </div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a62291388fe2e02f95e0934f08d5a7064"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a62291388fe2e02f95e0934f08d5a7064">&#9670;&nbsp;</a></span>get() <span class="overload">[11/12]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void get </td>
          <td>(</td>
          <td class="paramtype">double &amp;&#160;</td>
          <td class="paramname"><em>v</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Interpret the pixel value as a double. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[out]</td><td class="paramname">v</td><td>Returned value </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="_pixel_value_8h_source.xhtml#l00237">237</a> of file <a class="el" href="_pixel_value_8h_source.xhtml">PixelValue.h</a>.</p>

<p class="reference">References <a class="el" href="classarm__compute_1_1_pixel_value.xhtml#a3e79b9ee2384b30bb1a1bb85155bb803">PixelValue::value</a>.</p>
<div class="fragment"><div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;    {</div><div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;        v = <a class="code" href="classarm__compute_1_1_pixel_value.xhtml#a3e79b9ee2384b30bb1a1bb85155bb803">value</a>.f64;</div><div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;    }</div><div class="ttc" id="classarm__compute_1_1_pixel_value_xhtml_a3e79b9ee2384b30bb1a1bb85155bb803"><div class="ttname"><a href="classarm__compute_1_1_pixel_value.xhtml#a3e79b9ee2384b30bb1a1bb85155bb803">arm_compute::PixelValue::value</a></div><div class="ttdeci">union arm_compute::PixelValue::@0 value</div><div class="ttdoc">Union which describes the value of a pixel for any image format. </div></div>
</div><!-- fragment -->
</div>
</div>
<a id="afe5b3274209fa0f482c22a244de2773d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#afe5b3274209fa0f482c22a244de2773d">&#9670;&nbsp;</a></span>get() <span class="overload">[12/12]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">T get </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Get the pixel value. </p>
<dl class="section return"><dt>Returns</dt><dd>Pixel value </dd></dl>

<p class="definition">Definition at line <a class="el" href="_pixel_value_8h_source.xhtml#l00246">246</a> of file <a class="el" href="_pixel_value_8h_source.xhtml">PixelValue.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;    {</div><div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;        T val;</div><div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;        <span class="keyword">get</span>(val);</div><div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;        <span class="keywordflow">return</span> val;</div><div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;    }</div></div><!-- fragment -->
</div>
</div>
<h2 class="groupheader">Field Documentation</h2>
<a id="a4222b84bae684380152759cada8601c5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4222b84bae684380152759cada8601c5">&#9670;&nbsp;</a></span>f16</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespacearm__compute.xhtml#a73e2825fd61d349c5ca2f5313e3c8ea1">half</a> f16</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Single channel F16. </p>

<p class="definition">Definition at line <a class="el" href="_pixel_value_8h_source.xhtml#l00145">145</a> of file <a class="el" href="_pixel_value_8h_source.xhtml">PixelValue.h</a>.</p>

</div>
</div>
<a id="a7d886905c667c4e8e91251b6a3a98f39"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7d886905c667c4e8e91251b6a3a98f39">&#9670;&nbsp;</a></span>f32</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">float f32</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Single channel float 32. </p>

<p class="definition">Definition at line <a class="el" href="_pixel_value_8h_source.xhtml#l00144">144</a> of file <a class="el" href="_pixel_value_8h_source.xhtml">PixelValue.h</a>.</p>

</div>
</div>
<a id="a4a511caf994d6ffbbd9180293c53fd38"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4a511caf994d6ffbbd9180293c53fd38">&#9670;&nbsp;</a></span>f64</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">double f64</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Single channel double. </p>

<p class="definition">Definition at line <a class="el" href="_pixel_value_8h_source.xhtml#l00143">143</a> of file <a class="el" href="_pixel_value_8h_source.xhtml">PixelValue.h</a>.</p>

</div>
</div>
<a id="afe42472c55e7e5df52b8aaca94d0fa7e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#afe42472c55e7e5df52b8aaca94d0fa7e">&#9670;&nbsp;</a></span>rgb</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">uint8_t rgb[3]</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>3 channels: RGB888 </p>

<p class="definition">Definition at line <a class="el" href="_pixel_value_8h_source.xhtml#l00140">140</a> of file <a class="el" href="_pixel_value_8h_source.xhtml">PixelValue.h</a>.</p>

</div>
</div>
<a id="ac24a28b797176d8a1e73d27f64c058d2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac24a28b797176d8a1e73d27f64c058d2">&#9670;&nbsp;</a></span>rgbx</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">uint8_t rgbx[4]</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>4 channels: RGBX8888 </p>

<p class="definition">Definition at line <a class="el" href="_pixel_value_8h_source.xhtml#l00142">142</a> of file <a class="el" href="_pixel_value_8h_source.xhtml">PixelValue.h</a>.</p>

</div>
</div>
<a id="adbbcd82ccbf61d179ba87ee5fe1bb7d8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#adbbcd82ccbf61d179ba87ee5fe1bb7d8">&#9670;&nbsp;</a></span>s16</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int16_t s16</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Single channel S16. </p>

<p class="definition">Definition at line <a class="el" href="_pixel_value_8h_source.xhtml#l00149">149</a> of file <a class="el" href="_pixel_value_8h_source.xhtml">PixelValue.h</a>.</p>

</div>
</div>
<a id="acd1420e45b5486795a46cf1a5943a0ff"></a>
<h2 class="memtitle"><span class="permalink"><a href="#acd1420e45b5486795a46cf1a5943a0ff">&#9670;&nbsp;</a></span>s32</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int32_t s32</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Single channel S32. </p>

<p class="definition">Definition at line <a class="el" href="_pixel_value_8h_source.xhtml#l00151">151</a> of file <a class="el" href="_pixel_value_8h_source.xhtml">PixelValue.h</a>.</p>

</div>
</div>
<a id="ae66ed2ec20c2115ff9970c73168fc0df"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae66ed2ec20c2115ff9970c73168fc0df">&#9670;&nbsp;</a></span>s64</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int64_t s64</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Single channel S64. </p>

<p class="definition">Definition at line <a class="el" href="_pixel_value_8h_source.xhtml#l00139">139</a> of file <a class="el" href="_pixel_value_8h_source.xhtml">PixelValue.h</a>.</p>

</div>
</div>
<a id="acf0eb502f72832af26e62c69457bd1b6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#acf0eb502f72832af26e62c69457bd1b6">&#9670;&nbsp;</a></span>s8</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int8_t s8</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Single channel S8. </p>

<p class="definition">Definition at line <a class="el" href="_pixel_value_8h_source.xhtml#l00147">147</a> of file <a class="el" href="_pixel_value_8h_source.xhtml">PixelValue.h</a>.</p>

</div>
</div>
<a id="a1234f83efa812e259523c91799614a3c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1234f83efa812e259523c91799614a3c">&#9670;&nbsp;</a></span>u16</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">uint16_t u16</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Single channel U16. </p>

<p class="definition">Definition at line <a class="el" href="_pixel_value_8h_source.xhtml#l00148">148</a> of file <a class="el" href="_pixel_value_8h_source.xhtml">PixelValue.h</a>.</p>

</div>
</div>
<a id="ae65af0c4a8ee050043fe4b575f0a26a0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae65af0c4a8ee050043fe4b575f0a26a0">&#9670;&nbsp;</a></span>u32</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">uint32_t u32</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Single channel U32. </p>

<p class="definition">Definition at line <a class="el" href="_pixel_value_8h_source.xhtml#l00150">150</a> of file <a class="el" href="_pixel_value_8h_source.xhtml">PixelValue.h</a>.</p>

</div>
</div>
<a id="a91ee3b6e2425e78feef03fb5c69d63e5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a91ee3b6e2425e78feef03fb5c69d63e5">&#9670;&nbsp;</a></span>u64</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">uint64_t u64</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Single channel U64. </p>

<p class="definition">Definition at line <a class="el" href="_pixel_value_8h_source.xhtml#l00138">138</a> of file <a class="el" href="_pixel_value_8h_source.xhtml">PixelValue.h</a>.</p>

</div>
</div>
<a id="a0084c9e8c5778849f41d9de5df9c0f85"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0084c9e8c5778849f41d9de5df9c0f85">&#9670;&nbsp;</a></span>u8</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">uint8_t u8</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Single channel U8. </p>

<p class="definition">Definition at line <a class="el" href="_pixel_value_8h_source.xhtml#l00146">146</a> of file <a class="el" href="_pixel_value_8h_source.xhtml">PixelValue.h</a>.</p>

</div>
</div>
<a id="a3e79b9ee2384b30bb1a1bb85155bb803"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3e79b9ee2384b30bb1a1bb85155bb803">&#9670;&nbsp;</a></span>value</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">union { ... }   value</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Union which describes the value of a pixel for any image format. </p>
<p>Use the field corresponding to the image format </p>

<p class="reference">Referenced by <a class="el" href="_pixel_value_8h_source.xhtml#l00157">PixelValue::get()</a>, and <a class="el" href="_pixel_value_8h_source.xhtml#l00046">PixelValue::PixelValue()</a>.</p>

</div>
</div>
<a id="a9d55760e9791473bc0c71da0fc648ee0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9d55760e9791473bc0c71da0fc648ee0">&#9670;&nbsp;</a></span>yuv</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">uint8_t yuv[3]</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>3 channels: Any YUV format </p>

<p class="definition">Definition at line <a class="el" href="_pixel_value_8h_source.xhtml#l00141">141</a> of file <a class="el" href="_pixel_value_8h_source.xhtml">PixelValue.h</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li>arm_compute/core/<a class="el" href="_pixel_value_8h_source.xhtml">PixelValue.h</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespacearm__compute.xhtml">arm_compute</a></li><li class="navelem"><a class="el" href="classarm__compute_1_1_pixel_value.xhtml">PixelValue</a></li>
    <li class="footer">Generated on Thu Nov 22 2018 11:57:49 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
