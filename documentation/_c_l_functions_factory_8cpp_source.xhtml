<!-- HTML header for doxygen 1.8.9.1-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: src/graph/backends/CL/CLFunctionsFactory.cpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">Compute Library
   &#160;<span id="projectnumber">18.11</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('_c_l_functions_factory_8cpp_source.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">CLFunctionsFactory.cpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="_c_l_functions_factory_8cpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/*</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> * Copyright (c) 2018 ARM Limited.</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> * SPDX-License-Identifier: MIT</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> * Permission is hereby granted, free of charge, to any person obtaining a copy</span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"> * of this software and associated documentation files (the &quot;Software&quot;), to</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"> * deal in the Software without restriction, including without limitation the</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"> * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or</span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment"> * sell copies of the Software, and to permit persons to whom the Software is</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"> * furnished to do so, subject to the following conditions:</span></div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"> * The above copyright notice and this permission notice shall be included in all</span></div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment"> * copies or substantial portions of the Software.</span></div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment"> * THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR</span></div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment"> * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,</span></div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment"> * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE</span></div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment"> * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER</span></div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment"> * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,</span></div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment"> * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE</span></div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment"> * SOFTWARE.</span></div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment"> */</span></div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_c_l_function_factory_8h.xhtml">arm_compute/graph/backends/CL/CLFunctionFactory.h</a>&quot;</span></div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;</div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_cast_8h.xhtml">arm_compute/core/utils/misc/Cast.h</a>&quot;</span></div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="graph_2_graph_8h.xhtml">arm_compute/graph/Graph.h</a>&quot;</span></div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_function_helpers_8h.xhtml">arm_compute/graph/backends/FunctionHelpers.h</a>&quot;</span></div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_c_l_functions_8h.xhtml">arm_compute/runtime/CL/CLFunctions.h</a>&quot;</span></div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;</div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="keyword">using namespace </span><a class="code" href="namespacearm__compute_1_1utils_1_1cast.xhtml">arm_compute::utils::cast</a>;</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;</div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespacearm__compute.xhtml">arm_compute</a></div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;{</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;<span class="keyword">namespace </span>graph</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;{</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;<span class="keyword">namespace </span>backends</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;{</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;<span class="keyword">struct </span>CLTargetInfo</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;{</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;    <span class="keyword">using</span> TensorType = <a class="code" href="classarm__compute_1_1_i_c_l_tensor.xhtml">arm_compute::ICLTensor</a>;</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;    <span class="keyword">static</span> <a class="code" href="namespacearm__compute_1_1graph.xhtml#a31488d29805a596498c0234ae392d35d">Target</a> TargetType;</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;};</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;<a class="code" href="namespacearm__compute_1_1graph.xhtml#a31488d29805a596498c0234ae392d35d">Target</a> CLTargetInfo::TargetType = Target::CL;</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;<span class="keyword">struct </span>CLConvolutionLayerFunctions</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;{</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;    <span class="keyword">using</span> GenericConvolutionLayer  = CLConvolutionLayer;</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;    <span class="keyword">using</span> GEMMConvolutionLayer     = CLGEMMConvolutionLayer;</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;    <span class="keyword">using</span> DirectConvolutionLayer   = CLDirectConvolutionLayer;</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;    <span class="keyword">using</span> WinogradConvolutionLayer = CLWinogradConvolutionLayer;</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;};</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;<span class="keyword">struct </span>CLDepthwiseConvolutionLayerFunctions</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;{</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;    <span class="keyword">using</span> GenericDepthwiseConvolutionLayer = CLDepthwiseConvolutionLayer;</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;    <span class="keyword">using</span> DepthwiseConvolutionLayer3x3     = CLDepthwiseConvolutionLayer3x3;</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;};</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;<span class="keyword">struct </span>CLEltwiseFunctions</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;{</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;    <span class="keyword">using</span> Addition       = CLArithmeticAddition;</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;    <span class="keyword">using</span> Subtraction    = CLArithmeticSubtraction;</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;    <span class="keyword">using</span> Multiplication = CLPixelWiseMultiplication;</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;};</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;</div><div class="line"><a name="l00072"></a><span class="lineno"><a class="line" href="classarm__compute_1_1graph_1_1backends_1_1_c_l_function_factory.xhtml#aa7ac6bf065e64181f3c92fee4b3b5c79">   72</a></span>&#160;std::unique_ptr&lt;IFunction&gt; CLFunctionFactory::create(<a class="code" href="classarm__compute_1_1graph_1_1_i_node.xhtml">INode</a> *node, <a class="code" href="classarm__compute_1_1graph_1_1_graph_context.xhtml">GraphContext</a> &amp;ctx)</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;{</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;    <span class="keywordflow">if</span>(node == <span class="keyword">nullptr</span>)</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;    {</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">nullptr</span>;</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;    }</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;    <a class="code" href="namespacearm__compute_1_1graph.xhtml#acac9cbaeea226ed297804c012dc12b16">NodeType</a> type = node-&gt;<a class="code" href="classarm__compute_1_1graph_1_1_i_node.xhtml#a6b2d83e561886647467f86c20ce39bec">type</a>();</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;    <span class="keywordflow">switch</span>(type)</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;    {</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;        <span class="keywordflow">case</span> NodeType::ActivationLayer:</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;            <span class="keywordflow">return</span> detail::create_activation_layer&lt;CLActivationLayer, CLTargetInfo&gt;(*polymorphic_downcast&lt;ActivationLayerNode *&gt;(node));</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;        <span class="keywordflow">case</span> NodeType::BatchNormalizationLayer:</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;            <span class="keywordflow">return</span> detail::create_batch_normalization_layer&lt;CLBatchNormalizationLayer, CLTargetInfo&gt;(*polymorphic_downcast&lt;BatchNormalizationLayerNode *&gt;(node));</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;        <span class="keywordflow">case</span> NodeType::BoundingBoxTransformLayer:</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;            <span class="keywordflow">return</span> detail::create_bounding_box_transform_layer&lt;CLBoundingBoxTransform, CLTargetInfo&gt;(*polymorphic_downcast&lt;BoundingBoxTransformLayerNode *&gt;(node));</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;        <span class="keywordflow">case</span> NodeType::ChannelShuffleLayer:</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;            <span class="keywordflow">return</span> detail::create_channel_shuffle_layer&lt;CLChannelShuffleLayer, CLTargetInfo&gt;(*polymorphic_downcast&lt;ChannelShuffleLayerNode *&gt;(node));</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;        <span class="keywordflow">case</span> NodeType::ConvolutionLayer:</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;            <span class="keywordflow">return</span> detail::create_convolution_layer&lt;CLConvolutionLayerFunctions, CLTargetInfo&gt;(*polymorphic_downcast&lt;ConvolutionLayerNode *&gt;(node), ctx);</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;        <span class="keywordflow">case</span> NodeType::DeconvolutionLayer:</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;            <span class="keywordflow">return</span> detail::create_deconvolution_layer&lt;CLDeconvolutionLayer, CLTargetInfo&gt;(*polymorphic_downcast&lt;DeconvolutionLayerNode *&gt;(node), ctx);</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;        <span class="keywordflow">case</span> NodeType::ConcatenateLayer:</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;            <span class="keywordflow">return</span> detail::create_concatenate_layer&lt;CLConcatenateLayer, CLTargetInfo&gt;(*polymorphic_downcast&lt;ConcatenateLayerNode *&gt;(node));</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;        <span class="keywordflow">case</span> NodeType::DepthwiseConvolutionLayer:</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;            <span class="keywordflow">return</span> detail::create_depthwise_convolution_layer&lt;CLDepthwiseConvolutionLayerFunctions, CLTargetInfo&gt;(*polymorphic_downcast&lt;DepthwiseConvolutionLayerNode *&gt;(node));</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;        <span class="keywordflow">case</span> NodeType::EltwiseLayer:</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;            <span class="keywordflow">return</span> detail::create_eltwise_layer&lt;CLEltwiseFunctions, CLTargetInfo&gt;(*polymorphic_downcast&lt;EltwiseLayerNode *&gt;(node));</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;        <span class="keywordflow">case</span> NodeType::FlattenLayer:</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;            <span class="keywordflow">return</span> detail::create_flatten_layer&lt;CLFlattenLayer, CLTargetInfo&gt;(*polymorphic_downcast&lt;FlattenLayerNode *&gt;(node));</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;        <span class="keywordflow">case</span> NodeType::FullyConnectedLayer:</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;            <span class="keywordflow">return</span> detail::create_fully_connected_layer&lt;CLFullyConnectedLayer, CLTargetInfo&gt;(*polymorphic_downcast&lt;FullyConnectedLayerNode *&gt;(node), ctx);</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;        <span class="keywordflow">case</span> NodeType::GenerateProposalsLayer:</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;            <span class="keywordflow">return</span> detail::create_generate_proposals_layer&lt;CLGenerateProposalsLayer, CLTargetInfo&gt;(*polymorphic_downcast&lt;GenerateProposalsLayerNode *&gt;(node), ctx);</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;        <span class="keywordflow">case</span> NodeType::NormalizationLayer:</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;            <span class="keywordflow">return</span> detail::create_normalization_layer&lt;CLNormalizationLayer, CLTargetInfo&gt;(*polymorphic_downcast&lt;NormalizationLayerNode *&gt;(node), ctx);</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;        <span class="keywordflow">case</span> NodeType::NormalizePlanarYUVLayer:</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;            <span class="keywordflow">return</span> detail::create_normalize_planar_yuv_layer&lt;CLNormalizePlanarYUVLayer, CLTargetInfo&gt;(*polymorphic_downcast&lt;NormalizePlanarYUVLayerNode *&gt;(node));</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;        <span class="keywordflow">case</span> NodeType::PadLayer:</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;            <span class="keywordflow">return</span> detail::create_pad_layer&lt;CLPadLayer, CLTargetInfo&gt;(*polymorphic_downcast&lt;PadLayerNode *&gt;(node));</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;        <span class="keywordflow">case</span> NodeType::PermuteLayer:</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;            <span class="keywordflow">return</span> detail::create_permute_layer&lt;CLPermute, CLTargetInfo&gt;(*polymorphic_downcast&lt;PermuteLayerNode *&gt;(node));</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;        <span class="keywordflow">case</span> NodeType::PoolingLayer:</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;            <span class="keywordflow">return</span> detail::create_pooling_layer&lt;CLPoolingLayer, CLTargetInfo&gt;(*polymorphic_downcast&lt;PoolingLayerNode *&gt;(node));</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;        <span class="keywordflow">case</span> NodeType::PriorBoxLayer:</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;            <span class="keywordflow">return</span> detail::create_priorbox_layer&lt;CLPriorBoxLayer, CLTargetInfo&gt;(*polymorphic_downcast&lt;PriorBoxLayerNode *&gt;(node));</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;        <span class="keywordflow">case</span> NodeType::ReorgLayer:</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;            <span class="keywordflow">return</span> detail::create_reorg_layer&lt;CLReorgLayer, CLTargetInfo&gt;(*polymorphic_downcast&lt;ReorgLayerNode *&gt;(node));</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;        <span class="keywordflow">case</span> NodeType::ReshapeLayer:</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;            <span class="keywordflow">return</span> detail::create_reshape_layer&lt;CLReshapeLayer, CLTargetInfo&gt;(*polymorphic_downcast&lt;ReshapeLayerNode *&gt;(node));</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;        <span class="keywordflow">case</span> NodeType::ResizeLayer:</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;            <span class="keywordflow">return</span> detail::create_resize_layer&lt;CLScale, CLTargetInfo&gt;(*polymorphic_downcast&lt;ResizeLayerNode *&gt;(node));</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;        <span class="keywordflow">case</span> NodeType::ROIAlignLayer:</div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;            <span class="keywordflow">return</span> detail::create_roi_align_layer&lt;CLROIAlignLayer, CLTargetInfo&gt;(*polymorphic_downcast&lt;ROIAlignLayerNode *&gt;(node));</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;        <span class="keywordflow">case</span> NodeType::SliceLayer:</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;            <span class="keywordflow">return</span> detail::create_slice_layer&lt;CLSlice, CLTargetInfo&gt;(*polymorphic_downcast&lt;SliceLayerNode *&gt;(node));</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;        <span class="keywordflow">case</span> NodeType::SoftmaxLayer:</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;            <span class="keywordflow">return</span> detail::create_softmax_layer&lt;CLSoftmaxLayer, CLTargetInfo&gt;(*polymorphic_downcast&lt;SoftmaxLayerNode *&gt;(node), ctx);</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;        <span class="keywordflow">case</span> NodeType::UpsampleLayer:</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;            <span class="keywordflow">return</span> detail::create_upsample_layer&lt;CLUpsampleLayer, CLTargetInfo&gt;(*polymorphic_downcast&lt;UpsampleLayerNode *&gt;(node), ctx);</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;        <span class="keywordflow">case</span> NodeType::YOLOLayer:</div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;            <span class="keywordflow">return</span> detail::create_yolo_layer&lt;CLYOLOLayer, CLTargetInfo&gt;(*polymorphic_downcast&lt;YOLOLayerNode *&gt;(node), ctx);</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;        <span class="keywordflow">default</span>:</div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;            <span class="keywordflow">return</span> <span class="keyword">nullptr</span>;</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;    }</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;}</div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;} <span class="comment">// namespace backends</span></div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;} <span class="comment">// namespace graph</span></div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;} <span class="comment">// namespace arm_compute</span></div><div class="ttc" id="_function_helpers_8h_xhtml"><div class="ttname"><a href="_function_helpers_8h.xhtml">FunctionHelpers.h</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1utils_1_1cast_xhtml"><div class="ttname"><a href="namespacearm__compute_1_1utils_1_1cast.xhtml">arm_compute::utils::cast</a></div><div class="ttdef"><b>Definition:</b> <a href="_cast_8h_source.xhtml#l00033">Cast.h:33</a></div></div>
<div class="ttc" id="_c_l_function_factory_8h_xhtml"><div class="ttname"><a href="_c_l_function_factory_8h.xhtml">CLFunctionFactory.h</a></div></div>
<div class="ttc" id="classarm__compute_1_1graph_1_1_graph_context_xhtml"><div class="ttname"><a href="classarm__compute_1_1graph_1_1_graph_context.xhtml">arm_compute::graph::GraphContext</a></div><div class="ttdoc">Graph context. </div><div class="ttdef"><b>Definition:</b> <a href="_graph_context_8h_source.xhtml#l00049">GraphContext.h:49</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml"><div class="ttname"><a href="namespacearm__compute.xhtml">arm_compute</a></div><div class="ttdoc">Copyright (c) 2017-2018 ARM Limited. </div><div class="ttdef"><b>Definition:</b> <a href="00__introduction_8dox_source.xhtml#l00024">00_introduction.dox:24</a></div></div>
<div class="ttc" id="_cast_8h_xhtml"><div class="ttname"><a href="_cast_8h.xhtml">Cast.h</a></div></div>
<div class="ttc" id="classarm__compute_1_1graph_1_1_i_node_xhtml"><div class="ttname"><a href="classarm__compute_1_1graph_1_1_i_node.xhtml">arm_compute::graph::INode</a></div><div class="ttdoc">Node interface. </div><div class="ttdef"><b>Definition:</b> <a href="_i_node_8h_source.xhtml#l00044">INode.h:44</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1graph_xhtml_acac9cbaeea226ed297804c012dc12b16"><div class="ttname"><a href="namespacearm__compute_1_1graph.xhtml#acac9cbaeea226ed297804c012dc12b16">arm_compute::graph::NodeType</a></div><div class="ttdeci">NodeType</div><div class="ttdoc">Supported nodes. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2graph_2_types_8h_source.xhtml#l00126">Types.h:126</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1graph_xhtml_a31488d29805a596498c0234ae392d35d"><div class="ttname"><a href="namespacearm__compute_1_1graph.xhtml#a31488d29805a596498c0234ae392d35d">arm_compute::graph::Target</a></div><div class="ttdeci">Target</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2graph_2_types_8h_source.xhtml#l00085">Types.h:85</a></div></div>
<div class="ttc" id="classarm__compute_1_1_i_c_l_tensor_xhtml"><div class="ttname"><a href="classarm__compute_1_1_i_c_l_tensor.xhtml">arm_compute::ICLTensor</a></div><div class="ttdoc">Interface for OpenCL tensor. </div><div class="ttdef"><b>Definition:</b> <a href="_i_c_l_tensor_8h_source.xhtml#l00040">ICLTensor.h:40</a></div></div>
<div class="ttc" id="graph_2_graph_8h_xhtml"><div class="ttname"><a href="graph_2_graph_8h.xhtml">Graph.h</a></div></div>
<div class="ttc" id="classarm__compute_1_1graph_1_1_i_node_xhtml_a6b2d83e561886647467f86c20ce39bec"><div class="ttname"><a href="classarm__compute_1_1graph_1_1_i_node.xhtml#a6b2d83e561886647467f86c20ce39bec">arm_compute::graph::INode::type</a></div><div class="ttdeci">virtual NodeType type() const =0</div><div class="ttdoc">Returns node&amp;#39;s type. </div></div>
<div class="ttc" id="_c_l_functions_8h_xhtml"><div class="ttname"><a href="_c_l_functions_8h.xhtml">CLFunctions.h</a></div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_d182250f0c231765fc862e69db210731.xhtml">graph</a></li><li class="navelem"><a class="el" href="dir_39e772dac1f6529f21fb52deefa146ea.xhtml">backends</a></li><li class="navelem"><a class="el" href="dir_10a8ee34f3d0df8ebfa752c7937ca169.xhtml">CL</a></li><li class="navelem"><a class="el" href="_c_l_functions_factory_8cpp.xhtml">CLFunctionsFactory.cpp</a></li>
    <li class="footer">Generated on Thu Nov 22 2018 11:57:40 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
