var searchData=
[
  ['d0',['D0',['../optical__flow__pyramid__lk_8cl.xhtml#ae0b2360d4b8e961bf2709b0663fd9f2a',1,'optical_flow_pyramid_lk.cl']]],
  ['d1',['D1',['../optical__flow__pyramid__lk_8cl.xhtml#a52deba56234661c77d4b9573d5175ae2',1,'optical_flow_pyramid_lk.cl']]],
  ['data',['data',['../classarm__compute_1_1_c_l_lut_allocator.xhtml#a99c07c946023f413991a249db8b99ab0',1,'arm_compute::CLLutAllocator::data()'],['../classarm__compute_1_1_c_l_tensor_allocator.xhtml#a99c07c946023f413991a249db8b99ab0',1,'arm_compute::CLTensorAllocator::data()'],['../classarm__compute_1_1_g_c_tensor_allocator.xhtml#a99c07c946023f413991a249db8b99ab0',1,'arm_compute::GCTensorAllocator::data()'],['../classarm__compute_1_1_lut_allocator.xhtml#a344325f71f51323330de47f307ebecfd',1,'arm_compute::LutAllocator::data()'],['../classarm__compute_1_1_tensor_allocator.xhtml#a344325f71f51323330de47f307ebecfd',1,'arm_compute::TensorAllocator::data()'],['../classarm__compute_1_1test_1_1_c_l_accessor.xhtml#a332a750ed35277f0bc297fbfecce598f',1,'arm_compute::test::CLAccessor::data() const'],['../classarm__compute_1_1test_1_1_c_l_accessor.xhtml#a0189be0971a32a0171c51b90a1ab1020',1,'arm_compute::test::CLAccessor::data()'],['../classarm__compute_1_1test_1_1_accessor.xhtml#a332a750ed35277f0bc297fbfecce598f',1,'arm_compute::test::Accessor::data() const'],['../classarm__compute_1_1test_1_1_accessor.xhtml#a0189be0971a32a0171c51b90a1ab1020',1,'arm_compute::test::Accessor::data()'],['../classarm__compute_1_1test_1_1_simple_tensor.xhtml#a4ae7e1f6885eb47c11062cc74e6a6e19',1,'arm_compute::test::SimpleTensor::data() const'],['../classarm__compute_1_1test_1_1_simple_tensor.xhtml#adc1e16b293a89a9ccc9541058b5ca560',1,'arm_compute::test::SimpleTensor::data()']]],
  ['data_5flayout',['data_layout',['../structarm__compute_1_1utils_1_1_common_graph_params.xhtml#aa56f0562febf49bc0e29a4257551191b',1,'arm_compute::utils::CommonGraphParams::data_layout()'],['../classarm__compute_1_1utils_1_1_common_graph_options.xhtml#aa276d896db24e95060047eb2f886614d',1,'arm_compute::utils::CommonGraphOptions::data_layout()'],['../classarm__compute_1_1_i_tensor_info.xhtml#a367b5090ab432bc7de2c32369e087ab1',1,'arm_compute::ITensorInfo::data_layout()'],['../classarm__compute_1_1_sub_tensor_info.xhtml#a5f63b63606dbbbe54474e6e970a6738c',1,'arm_compute::SubTensorInfo::data_layout()'],['../classarm__compute_1_1_tensor_info.xhtml#a5f63b63606dbbbe54474e6e970a6738c',1,'arm_compute::TensorInfo::data_layout()'],['../classarm__compute_1_1test_1_1_c_l_accessor.xhtml#a5f63b63606dbbbe54474e6e970a6738c',1,'arm_compute::test::CLAccessor::data_layout()'],['../classarm__compute_1_1test_1_1_g_c_accessor.xhtml#a5f63b63606dbbbe54474e6e970a6738c',1,'arm_compute::test::GCAccessor::data_layout()'],['../classarm__compute_1_1test_1_1_i_accessor.xhtml#a367b5090ab432bc7de2c32369e087ab1',1,'arm_compute::test::IAccessor::data_layout()'],['../classarm__compute_1_1test_1_1_accessor.xhtml#a5f63b63606dbbbe54474e6e970a6738c',1,'arm_compute::test::Accessor::data_layout()'],['../classarm__compute_1_1test_1_1_simple_tensor.xhtml#a5f63b63606dbbbe54474e6e970a6738c',1,'arm_compute::test::SimpleTensor::data_layout()'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a786677cbfb3f5677b4d84f3056eb08db',1,'arm_compute::test::validation::data_layout()']]],
  ['data_5flayout_5ffrom_5fname',['data_layout_from_name',['../namespacearm__compute.xhtml#a834b76c7d21af898f39def3b787d7530',1,'arm_compute']]],
  ['data_5fpath',['data_path',['../structarm__compute_1_1utils_1_1_common_graph_params.xhtml#a30a81dbc66a8e9eeb693a75046b4655d',1,'arm_compute::utils::CommonGraphParams::data_path()'],['../classarm__compute_1_1utils_1_1_common_graph_options.xhtml#a10f94123b5c23f4d0ee7362c2617d812',1,'arm_compute::utils::CommonGraphOptions::data_path()']]],
  ['data_5fsize_5ffrom_5ftype',['data_size_from_type',['../namespacearm__compute.xhtml#abb7e0f23a4f2e63f39433f158dad47ab',1,'arm_compute']]],
  ['data_5ftest_5fcase',['DATA_TEST_CASE',['../tests_2framework_2_macros_8h.xhtml#a43b1925356e3d36a468e104d798c60ec',1,'DATA_TEST_CASE():&#160;Macros.h'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a35d3ab6d678579401ec6efeccd788c3b',1,'arm_compute::test::validation::DATA_TEST_CASE(Configuration, framework::DatasetMode::ALL, combine(concat(datasets::SmallShapes(), datasets::LargeShapes()), AbsoluteDifferenceU8Dataset), shape, data_type0, data_type1, output_data_type)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#ab71f703bd3f185e8d06c405e0d15d52a',1,'arm_compute::test::validation::DATA_TEST_CASE(Configuration, framework::DatasetMode::ALL, combine(concat(datasets::SmallShapes(), datasets::LargeShapes()), AbsoluteDifferenceS16Dataset), shape, data_type0, data_type1, output_data_type)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a3ca1814eff79e9a3d6d693849683d8f1',1,'arm_compute::test::validation::DATA_TEST_CASE(Configuration, framework::DatasetMode::ALL, combine(framework::dataset::concat(datasets::SmallShapes(), datasets::LargeShapes()), AccumulateS16Dataset), shape, data_type, output_data_type)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a77a7b07127f4aa5d92f20e6014db8867',1,'arm_compute::test::validation::DATA_TEST_CASE(Configuration, framework::DatasetMode::ALL, combine(framework::dataset::concat(datasets::SmallShapes(), datasets::LargeShapes()), AccumulateU8Dataset), shape, data_type, output_data_type)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a67f6d1602011afbc2ccef6f90a774c16',1,'arm_compute::test::validation::DATA_TEST_CASE(Configuration, framework::DatasetMode::ALL, combine(combine(concat(datasets::SmallShapes(), datasets::LargeShapes()), CNNDataTypes), framework::dataset::make(&quot;InPlace&quot;, { false, true })), shape, data_type, in_place)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a2688678165d426def947a6240127b12b',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(framework::dataset::make(&quot;InputInfo&quot;, { TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::QASYMM8), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::QASYMM8), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), }), framework::dataset::make(&quot;OutputInfo&quot;,{ TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F16), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::QASYMM8), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::QASYMM8), TensorInfo(TensorShape(30U, 11U, 2U), 1, DataType::F32), })), framework::dataset::make(&quot;ActivationInfo&quot;, { ActivationLayerInfo(ActivationLayerInfo::ActivationFunction::RELU), ActivationLayerInfo(ActivationLayerInfo::ActivationFunction::RELU), ActivationLayerInfo(ActivationLayerInfo::ActivationFunction::RELU), ActivationLayerInfo(ActivationLayerInfo::ActivationFunction::LU_BOUNDED_RELU), ActivationLayerInfo(ActivationLayerInfo::ActivationFunction::TANH), ActivationLayerInfo(ActivationLayerInfo::ActivationFunction::RELU), })), framework::dataset::make(&quot;Expected&quot;, { false, false, true, true, false, false })), input_info, output_info, act_info, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a7bcdcdf3e14fa211e3df60f1bcb8bc36',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(framework::dataset::make(&quot;Input1Info&quot;, { TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), }), framework::dataset::make(&quot;Input2Info&quot;,{ TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::S16), TensorInfo(TensorShape(48U, 11U, 2U), 1, DataType::F32), })), framework::dataset::make(&quot;OutputInfo&quot;,{ TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::S16), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(48U, 11U, 2U), 1, DataType::F32), })), framework::dataset::make(&quot;Expected&quot;, { true, true, false, false, false})), input1_info, input2_info, output_info, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#ad20fc64935af732f862cfd448fb0436d',1,'arm_compute::test::validation::DATA_TEST_CASE(Configuration, framework::DatasetMode::ALL, combine(framework::dataset::concat(datasets::SmallShapes(), datasets::LargeShapes()), framework::dataset::make(&quot;ConvertPolicy&quot;, { ConvertPolicy::SATURATE, ConvertPolicy::WRAP })), shape, policy)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#ae948880eae2d3491e8cc417fb6af0d36',1,'arm_compute::test::validation::DATA_TEST_CASE(Configuration, framework::DatasetMode::ALL, combine(combine(framework::dataset::concat(datasets::SmallShapes(), datasets::LargeShapes()), framework::dataset::make(&quot;DataType&quot;, { DataType::U8, DataType::S16 })), framework::dataset::make(&quot;ConvertPolicy&quot;, { ConvertPolicy::SATURATE, ConvertPolicy::WRAP })), shape, data_type, policy)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#aecb5da7dbdc0508399748704378c4639',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(framework::dataset::make(&quot;Input1Info&quot;, { TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), }), framework::dataset::make(&quot;Input2Info&quot;,{ TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::S16), TensorInfo(TensorShape(48U, 11U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), })), framework::dataset::make(&quot;OutputInfo&quot;,{ TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::S16), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(48U, 11U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), })), framework::dataset::make(&quot;Expected&quot;, { false, false, false, false, true })), input1_info, input2_info, output_info, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#ae74027b0c94f3b7cc2affa94a9d9ab3b',1,'arm_compute::test::validation::DATA_TEST_CASE(Configuration, framework::DatasetMode::ALL, combine(combine(combine(datasets::RandomBatchNormalizationLayerDataset(), combine(framework::dataset::make(&quot;UseBeta&quot;, { false, true }), framework::dataset::make(&quot;UseGamma&quot;, { false, true }))), framework::dataset::make(&quot;DataType&quot;, { DataType::F16, DataType::F32 })), framework::dataset::make(&quot;DataLayout&quot;, { DataLayout::NCHW, DataLayout::NHWC })), shape0, shape1, epsilon, use_gamma, use_beta, dt, data_layout)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#ac25e2030754af10983828182e0deaeed',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(zip(framework::dataset::make(&quot;InputInfo&quot;, { TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), }), framework::dataset::make(&quot;OutputInfo&quot;,{ TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F16), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), })), framework::dataset::make(&quot;MVBGInfo&quot;,{ TensorInfo(TensorShape(2U), 1, DataType::F32), TensorInfo(TensorShape(2U), 1, DataType::F32), TensorInfo(TensorShape(2U), 1, DataType::F16), TensorInfo(TensorShape(2U), 1, DataType::F32), TensorInfo(TensorShape(5U), 1, DataType::F32), TensorInfo(TensorShape(2U), 1, DataType::F32), TensorInfo(TensorShape(2U), 1, DataType::F32), })), framework::dataset::make(&quot;ActivationLayerInfo&quot;,{ ActivationLayerInfo(ActivationLayerInfo::ActivationFunction::RELU), ActivationLayerInfo(ActivationLayerInfo::ActivationFunction::RELU), ActivationLayerInfo(ActivationLayerInfo::ActivationFunction::BOUNDED_RELU, 6.f), ActivationLayerInfo(ActivationLayerInfo::ActivationFunction::BOUNDED_RELU, 6.f), ActivationLayerInfo(ActivationLayerInfo::ActivationFunction::LU_BOUNDED_RELU, 6.f), ActivationLayerInfo(ActivationLayerInfo::ActivationFunction::TANH), ActivationLayerInfo(ActivationLayerInfo::ActivationFunction::LU_BOUNDED_RELU, 2.f, 6.f), })), framework::dataset::make(&quot;Expected&quot;, { true, false, false, false, false, false, false})), input_info, output_info, mvbg_info, act_info, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#aefe9d26603a71b3c45ebf1d4ac0e3bee',1,'arm_compute::test::validation::DATA_TEST_CASE(Configuration, framework::DatasetMode::ALL, combine(datasets::SmallBatchToSpaceLayerDataset(), framework::dataset::make(&quot;DataType&quot;, { DataType::F16, DataType::F32 })), input_shape, block_shape_shape, output_shape, dt)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#ab486c194d8d408aefb3eae9cca4c2563',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(framework::dataset::make(&quot;InputInfo&quot;, { TensorInfo(TensorShape(32U, 13U, 2U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U, 2U, 4U), 1, DataType::F32), }), framework::dataset::make(&quot;BlockShapeInfo&quot;,{ TensorInfo(TensorShape(2U, 2U), 1, DataType::S32), TensorInfo(TensorShape(2U, 2U), 1, DataType::S32), TensorInfo(TensorShape(2U, 2U), 1, DataType::F16), TensorInfo(TensorShape(2U, 2U), 1, DataType::S32), })), framework::dataset::make(&quot;OutputInfo&quot;,{ TensorInfo(TensorShape(32U, 13U, 2U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U, 2U), 1, DataType::F16), TensorInfo(TensorShape(32U, 13U, 2U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U, 2U), 1, DataType::F32), })), framework::dataset::make(&quot;Expected&quot;, { true, false, false, false})), input_info, block_shape_info, output_info, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#adb242fc7a08cc518edaee5c36262f8cb',1,'arm_compute::test::validation::DATA_TEST_CASE(ValidateStatic, framework::DatasetMode::ALL, zip(zip(zip(zip(framework::dataset::make(&quot;InputInfo&quot;, { TensorInfo(TensorShape(16U, 8U, 2U, 4U), 1, DataType::F32), TensorInfo(TensorShape(16U, 8U, 2U, 4U), 1, DataType::F32), TensorInfo(TensorShape(16U, 8U, 2U, 4U), 1, DataType::F32), TensorInfo(TensorShape(32U, 16U, 2U, 4U, 4U), 1, DataType::F32), }), framework::dataset::make(&quot;BlockShapeX&quot;, { 2, 2, 2, 2 })), framework::dataset::make(&quot;BlockShapeY&quot;, { 2, 2, -2, 2 })), framework::dataset::make(&quot;OutputInfo&quot;,{ TensorInfo(TensorShape(32U, 16U, 2U, 1U), 1, DataType::F32), TensorInfo(TensorShape(32U, 16U, 2U, 1U), 1, DataType::F16), TensorInfo(TensorShape(32U, 16U, 2U, 1U), 1, DataType::F32), TensorInfo(TensorShape(32U, 8U, 2U, 1U), 1, DataType::F32), })), framework::dataset::make(&quot;Expected&quot;, { true, false, false, false})), input_info, block_shape_x, block_shape_y, output_info, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a43b142f2fd7735c8dbb2b1b4e456482b',1,'arm_compute::test::validation::DATA_TEST_CASE(Configuration, framework::DatasetMode::ALL, combine(concat(datasets::SmallShapes(), datasets::LargeShapes()), framework::dataset::make(&quot;DataType&quot;, DataType::U8)), shape, data_type)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#ad1767a5d935fd8a46e9c006e3782c3bb',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(zip(framework::dataset::make(&quot;BoxesInfo&quot;, { TensorInfo(TensorShape(4U, 128U), 1, DataType::F32), TensorInfo(TensorShape(5U, 128U), 1, DataType::F32), TensorInfo(TensorShape(4U, 128U), 1, DataType::F16), TensorInfo(TensorShape(4U, 128U), 1, DataType::F32), TensorInfo(TensorShape(4U, 128U), 1, DataType::F32), TensorInfo(TensorShape(4U, 128U), 1, DataType::F32)}), framework::dataset::make(&quot;PredBoxesInfo&quot;,{ TensorInfo(TensorShape(128U, 128U), 1, DataType::F32), TensorInfo(TensorShape(128U, 128U), 1, DataType::F32), TensorInfo(TensorShape(127U, 128U), 1, DataType::F32), TensorInfo(TensorShape(128U, 100U), 1, DataType::F32), TensorInfo(TensorShape(128U, 100U), 1, DataType::F32), TensorInfo(TensorShape(128U, 128U), 1, DataType::F32)})), framework::dataset::make(&quot;DeltasInfo&quot;, { TensorInfo(TensorShape(128U, 128U), 1, DataType::F32), TensorInfo(TensorShape(128U, 128U), 1, DataType::F32), TensorInfo(TensorShape(127U, 128U), 1, DataType::F32), TensorInfo(TensorShape(128U, 100U), 1, DataType::F32), TensorInfo(TensorShape(128U, 128U), 1, DataType::F32), TensorInfo(TensorShape(128U, 128U), 1, DataType::F32)})), framework::dataset::make(&quot;BoundingBoxTransofmInfo&quot;, { BoundingBoxTransformInfo(800.f, 600.f, 1.f), BoundingBoxTransformInfo(800.f, 600.f, 1.f), BoundingBoxTransformInfo(800.f, 600.f, 1.f), BoundingBoxTransformInfo(800.f, 600.f, 1.f), BoundingBoxTransformInfo(800.f, 600.f, 0.f)})), framework::dataset::make(&quot;Expected&quot;, { true, false, false, false, false, false})), boxes_info, pred_boxes_info, deltas_info, bbox_info, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#af654ad5ee4e9af35cd82a2a0f3f8e1aa',1,'arm_compute::test::validation::DATA_TEST_CASE(Configuration, framework::DatasetMode::ALL, combine(combine(concat(datasets::SmallShapes(), datasets::LargeShapes()), framework::dataset::make(&quot;DataType&quot;, DataType::U8)), datasets::BorderModes()), shape, data_type, border_mode)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a1dd1febe605b2db8324655e5c693abd4',1,'arm_compute::test::validation::DATA_TEST_CASE(Configuration, framework::DatasetMode::ALL, combine(combine(concat(datasets::Small2DShapes(), datasets::Large2DShapes()), data), framework::dataset::make(&quot;Format&quot;, Format::U8)), shape, gradient_size, normalization, border_mode, format)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a0324d8b990822bf5a4198dbd314c3bb6',1,'arm_compute::test::validation::DATA_TEST_CASE(RGBA, framework::DatasetMode::ALL, combine(concat(datasets::Small2DShapes(), datasets::Large2DShapes()), framework::dataset::make(&quot;FormatType&quot;, { Format::RGB888, Format::RGBA8888 })), shape, format)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a95cb3ec331c9716238f345cf079ebb63',1,'arm_compute::test::validation::DATA_TEST_CASE(YUV, framework::DatasetMode::ALL, combine(concat(datasets::Small2DShapes(), datasets::Large2DShapes()), framework::dataset::make(&quot;FormatType&quot;, { Format::YUYV422, Format::UYVY422 })), shape, format)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a4718e06b14b31bf5ee5327d5d7bd01d4',1,'arm_compute::test::validation::DATA_TEST_CASE(YUVPlanar, framework::DatasetMode::ALL, combine(concat(datasets::Small2DShapes(), datasets::Large2DShapes()), framework::dataset::make(&quot;FormatType&quot;, { Format::IYUV, Format::YUV444, Format::NV12, Format::NV21 })), shape, format)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#ad1c198082b24a308f1d479a64634a6dc',1,'arm_compute::test::validation::DATA_TEST_CASE(RGBA, framework::DatasetMode::ALL, combine(concat(datasets::Small2DShapes(), datasets::Large2DShapes()), ChannelExtractRGBADataset), shape, format, channel)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a9adefa93f6a8d40b690373c0d3b697c0',1,'arm_compute::test::validation::DATA_TEST_CASE(YUV, framework::DatasetMode::ALL, combine(concat(datasets::Small2DShapes(), datasets::Large2DShapes()), ChannelExtractYUVDataset), shape, format, channel)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#ab17d85ca94ce27b1318a258babe9f0c0',1,'arm_compute::test::validation::DATA_TEST_CASE(YUVPlanar, framework::DatasetMode::ALL, combine(concat(datasets::Small2DShapes(), datasets::Large2DShapes()), ChannelExtractYUVPlanarDataset), shape, format, channel)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#af01e7379b497c6925355012544f57008',1,'arm_compute::test::validation::DATA_TEST_CASE(Configuration, framework::DatasetMode::ALL, combine(datasets::SmallRandomChannelShuffleLayerDataset(), framework::dataset::make(&quot;DataType&quot;, { DataType::S8, DataType::U8, DataType::S16, DataType::U16, DataType::U32, DataType::S32, DataType::F16, DataType::F32 })), shape, num_groups, data_type)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a89dea49d6442ce20e618d1a736c8f854',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(zip(zip(framework::dataset::make(&quot;InputInfo&quot;, { TensorInfo(TensorShape(10U, 12U, 1U, 2U), 1, DataType::S64), TensorInfo(TensorShape(10U, 12U, 1U, 2U), 1, DataType::F32), TensorInfo(TensorShape(10U, 12U, 1U, 2U), 1, DataType::F32), TensorInfo(TensorShape(3U, 12U, 4U, 2U), 1, DataType::F32), }), framework::dataset::make(&quot;OutputInfo&quot;,{ TensorInfo(TensorShape(3U, 4U, 10U, 2U), 1, DataType::F16), TensorInfo(TensorShape(3U, 4U, 10U, 2U), 1, DataType::F16), TensorInfo(TensorShape(3U, 3U, 10U, 2U), 1, DataType::F32), TensorInfo(TensorShape(3U, 4U, 12U, 2U), 1, DataType::F32), })), framework::dataset::make(&quot;ConvolvedWidth&quot;, { 3, 3, 3, 3 })), framework::dataset::make(&quot;ConvolvedHeight&quot;, { 4, 4, 4, 4 })), framework::dataset::make(&quot;NumGroups&quot;, { 1, 1, 1, 4 })), framework::dataset::make(&quot;Expected&quot;, { false, false, false, true })), input_info, output_info, convolved_width, convolved_height, num_groups, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a5c6289eccdc5762de725d4af56dc8db7',1,'arm_compute::test::validation::DATA_TEST_CASE(RGBA, framework::DatasetMode::ALL, combine(concat(datasets::Small2DShapes(), datasets::Large2DShapes()), ColorConvert_RGBA_to_RGB), shape, src_format, dst_format)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#ae4bbb1df52cf725ee2fba20efe08d6b1',1,'arm_compute::test::validation::DATA_TEST_CASE(RGB, framework::DatasetMode::ALL, combine(concat(datasets::Small2DShapes(), datasets::Large2DShapes()), ColorConvert_RGB_to_RGBA), shape, src_format, dst_format)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a471573534197b2ed91dce9bd8f2e12c1',1,'arm_compute::test::validation::DATA_TEST_CASE(RGBtoU8, framework::DatasetMode::ALL, combine(concat(datasets::Small2DShapes(), datasets::Large2DShapes()), ColorConvert_RGB_to_U8), shape, src_format, dst_format)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#ac84cb1a81d28c2872457ba2d6741f399',1,'arm_compute::test::validation::DATA_TEST_CASE(YUV, framework::DatasetMode::ALL, combine(concat(datasets::Small2DShapes(), datasets::Large2DShapes()), ColorConvert_YUYV_to_RGBDataset), shape, src_format, dst_format)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a68ece19a4b3449b89b4e0775c7f118a3',1,'arm_compute::test::validation::DATA_TEST_CASE(YUVPlanar, framework::DatasetMode::ALL, combine(concat(datasets::Small2DShapes(), datasets::Large2DShapes()), ColorConvert_YUVPlanar_to_RGBDataset), shape, src_format, dst_format)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a5a04f63f20e265174810a33393d25928',1,'arm_compute::test::validation::DATA_TEST_CASE(NV, framework::DatasetMode::ALL, combine(concat(datasets::Small2DShapes(), datasets::Large2DShapes()), ColorConvert_RGBDataset_to_NVDataset), shape, src_format, dst_format)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a12a78eeb0beb40cd2a4f93a4e50dd7ed',1,'arm_compute::test::validation::DATA_TEST_CASE(YUYVtoNV, framework::DatasetMode::ALL, combine(concat(datasets::Small2DShapes(), datasets::Large2DShapes()), ColorConvert_YUYVDataset_to_NVDataset), shape, src_format, dst_format)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a6024ddbc49ec8e38f10ccb62e1796431',1,'arm_compute::test::validation::DATA_TEST_CASE(NVtoYUV, framework::DatasetMode::ALL, combine(concat(datasets::Small2DShapes(), datasets::Large2DShapes()), ColorConvert_NVDataset_to_YUVDataset), shape, src_format, dst_format)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#ab9ae10d09097adac5ab02eb69db2450b',1,'arm_compute::test::validation::DATA_TEST_CASE(Configuration, framework::DatasetMode::ALL, combine(combine(combine(concat(datasets::SmallShapes(), datasets::LargeShapes()), framework::dataset::make(&quot;DataType&quot;, { DataType::U8, DataType::S16 })), datasets::BorderModes()), framework::dataset::make(&quot;filter_size&quot;, { 3 })), shape, output_data_type, border_mode, filter_size)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a82ec923626279db3a90687b43a7724aa',1,'arm_compute::test::validation::DATA_TEST_CASE(ValidateConvolutionMethod, framework::DatasetMode::ALL, zip(zip(zip(zip(zip(zip(zip(framework::dataset::make(&quot;InputInfo&quot;, { TensorInfo(TensorShape(17U, 31U, 2U), 1, DataType::F32), TensorInfo(TensorShape(17U, 31U, 2U), 1, DataType::F32), TensorInfo(TensorShape(23U, 27U, 5U, 4U), 1, DataType::F32), TensorInfo(TensorShape(23U, 27U, 31U, 4U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 2U, 1U), 1, DataType::F32), TensorInfo(TensorShape(33U, 27U, 7U, 4U), 1, DataType::F32), TensorInfo(TensorShape(17U, 31U, 32U), 1, DataType::F32), TensorInfo(TensorShape(17U, 31U, 2U), 1, DataType::F32) }), framework::dataset::make(&quot;WeightsInfo&quot;, { TensorInfo(TensorShape(5U, 5U, 2U, 19U), 1, DataType::F32), TensorInfo(TensorShape(5U, 5U, 2U, 19U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 5U, 21U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 31U, 21U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 5U, 21U), 1, DataType::F32), TensorInfo(TensorShape(5U, 5U, 7U, 16U), 1, DataType::F16), TensorInfo(TensorShape(5U, 5U, 32U, 19U), 1, DataType::F32), TensorInfo(TensorShape(5U, 5U, 2U, 19U), 1, DataType::F32) })), framework::dataset::make(&quot;OutputInfo&quot;, { TensorInfo(TensorShape(15U, 15U, 19U), 1, DataType::F32), TensorInfo(TensorShape(15U, 15U, 19U), 1, DataType::F32), TensorInfo(TensorShape(21U, 25U, 21U, 4U), 1, DataType::F32), TensorInfo(TensorShape(21U, 25U, 21U, 4U), 1, DataType::F32), TensorInfo(TensorShape(11U, 25U, 21U), 1, DataType::F32), TensorInfo(TensorShape(11U, 12U, 16U, 4U), 1, DataType::F32), TensorInfo(TensorShape(17U, 31U, 19U), 1, DataType::F32), TensorInfo(TensorShape(17U, 31U, 19U), 1, DataType::F32) })), framework::dataset::make(&quot;ConvInfo&quot;, { PadStrideInfo(1, 2, 1, 1), PadStrideInfo(1, 2, 1, 1), PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 0, 0), PadStrideInfo(2, 1, 0, 0), PadStrideInfo(3, 2, 1, 0), PadStrideInfo(1, 1, 2, 2), PadStrideInfo(1, 1, 2, 2) })), framework::dataset::make(&quot;GpuTarget&quot;, { GPUTarget::BIFROST, GPUTarget::MIDGARD, GPUTarget::G71, GPUTarget::G71, GPUTarget::MIDGARD, GPUTarget::BIFROST, GPUTarget::BIFROST, GPUTarget::BIFROST })), framework::dataset::make(&quot;Dilation&quot;, { Size2D(1U, 1U), Size2D(1U, 1U), Size2D(1U, 1U), Size2D(1U, 1U), Size2D(1U, 1U), Size2D(1U, 1U), Size2D(1U, 1U), Size2D(2U, 1U), })), framework::dataset::make(&quot;EnableFastMath&quot;, { false, false, false, false, false, false, true, true })), framework::dataset::make(&quot;Expected&quot;, { ConvolutionMethod::GEMM, ConvolutionMethod::GEMM, ConvolutionMethod::GEMM, ConvolutionMethod::WINOGRAD, ConvolutionMethod::GEMM, ConvolutionMethod::GEMM, ConvolutionMethod::WINOGRAD, ConvolutionMethod::GEMM, })), input_info, weights_info, output_info, conv_info, gpu_target, dilation, enable_fast_math, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a420888ddfd7ba583d4bd113a72bec70f',1,'arm_compute::test::validation::DATA_TEST_CASE(Configuration, framework::DatasetMode::ALL, combine(combine(framework::dataset::concat(datasets::SmallConvolutionLayerDataset(), datasets::LargeConvolutionLayerDataset()), CNNDataTypes), ActivationFunctionsDataset), input_shape, weights_shape, bias_shape, output_shape, info, dilation, data_type, act_info)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a378731124b458a89a8e501b813d55870',1,'arm_compute::test::validation::DATA_TEST_CASE(Configuration, framework::DatasetMode::ALL, combine(combine(framework::dataset::concat(datasets::SmallGroupedConvolutionLayerDataset(), datasets::LargeGroupedConvolutionLayerDataset()), GroupedCNNDataTypes), ActivationFunctionsDataset), input_shape, weights_shape, bias_shape, output_shape, info, dilation, data_type, act_info)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#abe95cd0bbd0e16272be4bf41d7a17ad5',1,'arm_compute::test::validation::DATA_TEST_CASE(Configuration, framework::DatasetMode::ALL,(combine(datasets::SmallDeconvolutionShapes(), framework::dataset::make(&quot;DataType&quot;, DataType::F32))), input_shape, data_type)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a87c63bcb10f8d9d2dd3b697117f9de66',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(zip(zip(zip(zip(framework::dataset::make(&quot;InputInfo&quot;, { TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(13U, 11U, 4U, 3U), 1, DataType::F32), TensorInfo(TensorShape(32U, 16U, 2U), 1, DataType::F32), }), framework::dataset::make(&quot;WeightsInfo&quot;, { TensorInfo(TensorShape(3U, 3U, 2U, 2U), 1, DataType::F16), TensorInfo(TensorShape(3U, 3U, 2U, 4U), 1, DataType::F32), TensorInfo(TensorShape(3U, 2U, 2U, 2U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 4U), 1, DataType::F32), TensorInfo(TensorShape(1U, 1U, 2U, 4U), 1, DataType::F32), })), framework::dataset::make(&quot;BiasInfo&quot;, { TensorInfo(TensorShape(1U), 1, DataType::F16), TensorInfo(TensorShape(1U), 1, DataType::F32), TensorInfo(TensorShape(25U, 11U), 1, DataType::F32), TensorInfo(TensorShape(1U), 1, DataType::F32), TensorInfo(TensorShape(4U), 1, DataType::F32), TensorInfo(TensorShape(4U), 1, DataType::S32), })), framework::dataset::make(&quot;OutputInfo&quot;,{ TensorInfo(TensorShape(25U, 11U, 2U), 1, DataType::F16), TensorInfo(TensorShape(25U, 10U, 2U), 1, DataType::F32), TensorInfo(TensorShape(13U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(11U, 9U, 1U, 3U), 1, DataType::F32), TensorInfo(TensorShape(32U, 16U, 4U), 1, DataType::F32), })), framework::dataset::make(&quot;PadStrideInfo&quot;, { PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 1, 1), PadStrideInfo(1, 1, 0, 0), })), framework::dataset::make(&quot;ax&quot;, { 1U, 1U, 1U, 0U, 0U, })), framework::dataset::make(&quot;ay&quot;, { 1U, 1U, 1U, 0U, 0U, })), framework::dataset::make(&quot;Expected&quot;, { false, false, false, false, true })), input_info, weights_info, bias_info, output_info, pad_info, ax, ay, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a378b53971fc5c47dc3205c5cbe769a24',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(framework::dataset::make(&quot;InputInfo1&quot;, { TensorInfo(TensorShape(23U, 27U, 5U), 1, DataType::F32), TensorInfo(TensorShape(24U, 27U, 4U), 1, DataType::F32), TensorInfo(TensorShape(23U, 27U, 3U), 1, DataType::F32), TensorInfo(TensorShape(16U, 27U, 6U), 1, DataType::F32) }), framework::dataset::make(&quot;InputInfo2&quot;, { TensorInfo(TensorShape(23U, 27U, 4U), 1, DataType::F32), TensorInfo(TensorShape(23U, 27U, 5U), 1, DataType::F32), TensorInfo(TensorShape(23U, 27U, 4U), 1, DataType::F32), TensorInfo(TensorShape(16U, 27U, 6U), 1, DataType::F32) })), framework::dataset::make(&quot;OutputInfo&quot;, { TensorInfo(TensorShape(23U, 27U, 9U), 1, DataType::F16), TensorInfo(TensorShape(25U, 12U, 9U), 1, DataType::F32), TensorInfo(TensorShape(23U, 27U, 8U), 1, DataType::F32), TensorInfo(TensorShape(16U, 27U, 12U), 1, DataType::F32) })), framework::dataset::make(&quot;Expected&quot;, { false, false, false, true })), input_info1, input_info2, output_info, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a3afcbc3a0df0d3476169ad0d536550da',1,'arm_compute::test::validation::DATA_TEST_CASE(Configuration, framework::DatasetMode::ALL, combine(combine(framework::dataset::concat(datasets::SmallShapes(), datasets::LargeShapes()), framework::dataset::make(&quot;ConvertPolicy&quot;, { ConvertPolicy::SATURATE, ConvertPolicy::WRAP })), DepthConvertLayerShiftDataset), shape, policy, shift)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#ae19ae5ebfc0561f46de271fc37f13c77',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate3x3, framework::DatasetMode::ALL, zip(zip(zip(zip(zip(zip(zip(framework::dataset::make(&quot;InputInfo&quot;, { TensorInfo(TensorShape(32U, 18U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 18U, 3U), 1, DataType::F32), TensorInfo(TensorShape(32U, 18U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 18U, 2U), 1, DataType::QASYMM8), TensorInfo(TensorShape(32U, 18U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 18U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 18U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 18U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 18U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 18U, 8U), 1, DataType::F32), TensorInfo(TensorShape(50U, 32U, 8U), 1, DataType::QASYMM8), }), framework::dataset::make(&quot;WeightsInfo&quot;, { TensorInfo(TensorShape(3U, 3U, 2U), 1, DataType::F16), TensorInfo(TensorShape(3U, 3U, 2U), 1, DataType::F32), TensorInfo(TensorShape(5U, 5U, 2U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 2U), 1, DataType::QASYMM8), TensorInfo(TensorShape(3U, 3U, 2U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 2U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 2U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 2U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 2U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 2U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 16U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 24U), 1, DataType::QASYMM8), })), framework::dataset::make(&quot;BiasesInfo&quot;, { TensorInfo(TensorShape(2U), 1, DataType::F32), TensorInfo(TensorShape(2U), 1, DataType::F32), TensorInfo(TensorShape(2U), 1, DataType::F32), TensorInfo(TensorShape(2U), 1, DataType::S32), TensorInfo(TensorShape(2U), 1, DataType::F32), TensorInfo(TensorShape(2U), 1, DataType::F32), TensorInfo(TensorShape(4U), 1, DataType::F32), TensorInfo(TensorShape(2U, 2U), 1, DataType::F32), TensorInfo(TensorShape(2U), 1, DataType::F32), TensorInfo(TensorShape(2U), 1, DataType::F32), TensorInfo(TensorShape(16U), 1, DataType::F32), TensorInfo(TensorShape(24U), 1, DataType::S32), })), framework::dataset::make(&quot;OutputInfo&quot;, { TensorInfo(TensorShape(30U, 16U, 2U), 1, DataType::F32), TensorInfo(TensorShape(30U, 16U, 2U), 1, DataType::F32), TensorInfo(TensorShape(30U, 16U, 2U), 1, DataType::F32), TensorInfo(TensorShape(30U, 16U, 2U), 1, DataType::QASYMM8), TensorInfo(TensorShape(30U, 16U, 2U), 1, DataType::F32), TensorInfo(TensorShape(30U, 16U, 2U), 1, DataType::F32), TensorInfo(TensorShape(30U, 16U, 2U), 1, DataType::F32), TensorInfo(TensorShape(30U, 16U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 18U, 2U), 1, DataType::F32), TensorInfo(TensorShape(25U, 11U, 2U), 1, DataType::F32), TensorInfo(TensorShape(30U, 16U, 16U), 1, DataType::F32), TensorInfo(TensorShape(48U, 30U, 24U), 1, DataType::QASYMM8), })), framework::dataset::make(&quot;ConvInfo&quot;, { PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 0, 0), PadStrideInfo(4, 1, 0, 0), PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 0, 0), })), framework::dataset::make(&quot;DepthMultiplier&quot;, { 1, 1, 1, 1, 3, 1, 1, 1, 1, 1, 2, 3, })), framework::dataset::make(&quot;ActivationInfo&quot;, { ActivationLayerInfo(), ActivationLayerInfo(), ActivationLayerInfo(), ActivationLayerInfo(ActivationLayerInfo::ActivationFunction::LINEAR), ActivationLayerInfo(), ActivationLayerInfo(), ActivationLayerInfo(), ActivationLayerInfo(), ActivationLayerInfo(), ActivationLayerInfo(), ActivationLayerInfo(), ActivationLayerInfo(ActivationLayerInfo::ActivationFunction::RELU), })), framework::dataset::make(&quot;Expected&quot;, { false, false, false, false, false, false, false, false, false, false, true, true })), input_info, weights_info, biases_info, output_info, conv_info, depth_multiplier, act_info, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#af535cbe0bc5bbe1318f4719bacdd4fd2',1,'arm_compute::test::validation::DATA_TEST_CASE(ValidateGeneric, framework::DatasetMode::ALL, zip(zip(zip(zip(zip(zip(framework::dataset::make(&quot;InputInfo&quot;, { TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 3U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 8U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 8U), 1, DataType::QASYMM8), }), framework::dataset::make(&quot;WeightsInfo&quot;, { TensorInfo(TensorShape(3U, 3U, 2U), 1, DataType::F16), TensorInfo(TensorShape(3U, 3U, 2U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 2U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 2U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 2U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 2U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 16U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 24U), 1, DataType::QASYMM8), })), framework::dataset::make(&quot;BiasesInfo&quot;, { TensorInfo(TensorShape(2U), 1, DataType::F32), TensorInfo(TensorShape(2U), 1, DataType::F32), TensorInfo(TensorShape(2U), 1, DataType::F32), TensorInfo(TensorShape(4U), 1, DataType::F32), TensorInfo(TensorShape(2U, 2U), 1, DataType::F32), TensorInfo(TensorShape(2U), 1, DataType::F32), TensorInfo(TensorShape(16U), 1, DataType::F32), TensorInfo(TensorShape(24U), 1, DataType::S32), })), framework::dataset::make(&quot;OutputInfo&quot;, { TensorInfo(TensorShape(25U, 11U, 2U), 1, DataType::F32), TensorInfo(TensorShape(25U, 11U, 2U), 1, DataType::F32), TensorInfo(TensorShape(25U, 11U, 2U), 1, DataType::F32), TensorInfo(TensorShape(25U, 11U, 2U), 1, DataType::F32), TensorInfo(TensorShape(25U, 11U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(25U, 11U, 16U), 1, DataType::F32), TensorInfo(TensorShape(32U, 11U, 24U), 1, DataType::QASYMM8), })), framework::dataset::make(&quot;ConvInfo&quot;, { PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 1, 0), })), framework::dataset::make(&quot;DepthMultiplier&quot;, { 1, 1, 3, 1, 1, 1, 2, 3, })), framework::dataset::make(&quot;Expected&quot;, { false, false, false, false, false, false, true, true })), input_info, weights_info, biases_info, output_info, conv_info, depth_multiplier, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#afd3bff121f3d1b361014931aba336060',1,'arm_compute::test::validation::DATA_TEST_CASE(Configuration, framework::DatasetMode::ALL, combine(DequantizationShapes, framework::dataset::make(&quot;DataType&quot;, DataType::U8)), shape, data_type)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a712c785a9475eb2bb0a5a24e43d282cc',1,'arm_compute::test::validation::DATA_TEST_CASE(Configuration, framework::DatasetMode::ALL, combine(combine(concat(datasets::Small2DShapes(), datasets::Large2DShapes()), datasets::BorderModes()), framework::dataset::make(&quot;Format&quot;, Format::U8)), shape, border_mode, format)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#ad4fdf7f045788a948ee31e97a076d639',1,'arm_compute::test::validation::DATA_TEST_CASE(ValidateConvolutionMethod, framework::DatasetMode::ALL, zip(zip(zip(zip(zip(zip(framework::dataset::make(&quot;InputInfo&quot;, { TensorInfo(TensorShape(17U, 31U, 2U), 1, DataType::F32), TensorInfo(TensorShape(17U, 31U, 2U), 1, DataType::F32), TensorInfo(TensorShape(23U, 27U, 23U, 4U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 2U, 1U), 1, DataType::F32), TensorInfo(TensorShape(33U, 27U, 7U, 4U), 1, DataType::F32) }), framework::dataset::make(&quot;WeightsInfo&quot;, { TensorInfo(TensorShape(5U, 5U, 2U, 19U), 1, DataType::F32), TensorInfo(TensorShape(5U, 5U, 2U, 19U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 23U, 21U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 5U, 21U), 1, DataType::F32), TensorInfo(TensorShape(5U, 5U, 7U, 16U), 1, DataType::F16) })), framework::dataset::make(&quot;OutputInfo&quot;, { TensorInfo(TensorShape(15U, 15U, 19U), 1, DataType::F32), TensorInfo(TensorShape(15U, 15U, 19U), 1, DataType::F32), TensorInfo(TensorShape(21U, 25U, 21U, 4U), 1, DataType::F32), TensorInfo(TensorShape(11U, 25U, 21U), 1, DataType::F32), TensorInfo(TensorShape(11U, 12U, 16U, 4U), 1, DataType::F32) })), framework::dataset::make(&quot;ConvInfo&quot;, { PadStrideInfo(1, 2, 1, 1), PadStrideInfo(1, 2, 1, 1), PadStrideInfo(1, 1, 0, 0), PadStrideInfo(2, 1, 0, 0), PadStrideInfo(3, 2, 1, 0) })), framework::dataset::make(&quot;GpuTarget&quot;, { GPUTarget::BIFROST, GPUTarget::MIDGARD, GPUTarget::G71, GPUTarget::MIDGARD, GPUTarget::BIFROST })), framework::dataset::make(&quot;Dilation&quot;, { Size2D(1U, 1U), Size2D(1U, 1U), Size2D(1U, 1U), Size2D(2U, 2U), Size2D(3U, 3U) })), framework::dataset::make(&quot;Expected&quot;, { ConvolutionMethod::GEMM, ConvolutionMethod::GEMM, ConvolutionMethod::WINOGRAD, ConvolutionMethod::GEMM, ConvolutionMethod::GEMM })), input_info, weights_info, output_info, conv_info, gpu_target, dilation, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a8358bc12f3ac1a3d9bc6ba573ada2316',1,'arm_compute::test::validation::DATA_TEST_CASE(Configuration, framework::DatasetMode::ALL, combine(framework::dataset::concat(datasets::SmallDilatedConvolutionLayerDataset(), datasets::LargeDilatedConvolutionLayerDataset()), CNNDataTypes), input_shape, weights_shape, bias_shape, output_shape, info, dilation, data_type)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a2b5e91ed93508f02f0d84f8647d70545',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(zip(zip(zip(framework::dataset::make(&quot;InputInfo&quot;, { TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 16U, 2U), 1, DataType::F32), }), framework::dataset::make(&quot;WeightsInfo&quot;,{ TensorInfo(TensorShape(3U, 3U, 2U, 4U), 1, DataType::F16), TensorInfo(TensorShape(3U, 3U, 3U, 4U), 1, DataType::F32), TensorInfo(TensorShape(9U, 9U, 2U, 4U), 1, DataType::F32), TensorInfo(TensorShape(5U, 3U, 2U, 4U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 2U, 4U, 3U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 2U, 4U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 2U, 4U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 2U, 4U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 2U, 4U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 2U, 4U), 1, DataType::F32), TensorInfo(TensorShape(1U, 1U, 2U, 4U), 1, DataType::F32), })), framework::dataset::make(&quot;BiasesInfo&quot;,{ TensorInfo(TensorShape(4U), 1, DataType::F32), TensorInfo(TensorShape(4U), 1, DataType::F32), TensorInfo(TensorShape(4U), 1, DataType::F32), TensorInfo(TensorShape(4U), 1, DataType::F32), TensorInfo(TensorShape(4U), 1, DataType::F32), TensorInfo(TensorShape(4U), 1, DataType::F32), TensorInfo(TensorShape(3U), 1, DataType::F32), TensorInfo(TensorShape(4U, 2U), 1, DataType::F32), TensorInfo(TensorShape(4U), 1, DataType::F32), TensorInfo(TensorShape(4U), 1, DataType::F32), TensorInfo(TensorShape(4U), 1, DataType::F32), })), framework::dataset::make(&quot;OutputInfo&quot;,{ TensorInfo(TensorShape(25U, 11U, 4U), 1, DataType::F32), TensorInfo(TensorShape(25U, 11U, 4U), 1, DataType::F32), TensorInfo(TensorShape(25U, 11U, 4U), 1, DataType::F32), TensorInfo(TensorShape(25U, 11U, 4U), 1, DataType::F32), TensorInfo(TensorShape(25U, 11U, 4U), 1, DataType::F32), TensorInfo(TensorShape(25U, 11U, 4U), 1, DataType::F32), TensorInfo(TensorShape(25U, 11U, 4U), 1, DataType::F32), TensorInfo(TensorShape(25U, 11U, 4U), 1, DataType::F32), TensorInfo(TensorShape(26U, 11U, 4U), 1, DataType::F32), TensorInfo(TensorShape(25U, 11U, 4U), 1, DataType::F32), TensorInfo(TensorShape(32U, 16U, 4U), 1, DataType::F32), })), framework::dataset::make(&quot;ConvInfo&quot;, { PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 0, 0), PadStrideInfo(3, 3, 0, 0), PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 0, 0), })), framework::dataset::make(&quot;ActivationInfo&quot;, { ActivationLayerInfo(ActivationLayerInfo::ActivationFunction::RELU) })), framework::dataset::make(&quot;Expected&quot;, { false, false, false, false, false, false, false, false, false, false, true })), input_info, weights_info, biases_info, output_info, conv_info, act_info, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a03ce389355dedb591f21f5abc0f22cce',1,'arm_compute::test::validation::DATA_TEST_CASE(Configuration, framework::DatasetMode::ALL, combine(concat(datasets::Small2DShapes(), datasets::Large2DShapes()), framework::dataset::make(&quot;DataType&quot;, DataType::U8)), shape, data_type)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a76d69fa1a3a22e9db4eef7b062fc53aa',1,'arm_compute::test::validation::DATA_TEST_CASE(Configuration, framework::DatasetMode::ALL, combine(combine(combine(concat(datasets::Small2DShapes(), datasets::Large2DShapes()), framework::dataset::make(&quot;Format&quot;, Format::U8)), framework::dataset::make(&quot;SuppressNonMax&quot;, { false, true })), framework::dataset::make(&quot;BorderMode&quot;, BorderMode::UNDEFINED)), shape, format, suppress_nonmax, border_mode)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a6977e5dada34102dfca07ad1bd3acc63',1,'arm_compute::test::validation::DATA_TEST_CASE(FillBorder, framework::DatasetMode::ALL, combine(combine(combine(combine(datasets::SmallShapes(), datasets::BorderModes()), BorderSizesDataset), PaddingSizesDataset), framework::dataset::make(&quot;DataType&quot;, DataType::U8)), shape, border_mode, size, padding, data_type)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a3be02a001fd0ea7533670a5bc4bbfbff',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(framework::dataset::make(&quot;InputInfo&quot;, { TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), }), framework::dataset::make(&quot;OutputInfo&quot;,{ TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F16), TensorInfo(TensorShape(48U, 11U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), })), framework::dataset::make(&quot;Expected&quot;, { false, false, false, false, true })), input_info, output_info, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a993ad7954889c7044c5d3ccd82243f6d',1,'arm_compute::test::validation::DATA_TEST_CASE(Configuration, framework::DatasetMode::ALL, combine(combine(framework::dataset::concat(datasets::SmallFullyConnectedLayerDataset(), datasets::LargeFullyConnectedLayerDataset()), FullyConnectedParameters), CNNDataTypes), src_shape, weights_shape, bias_shape, dst_shape, transpose_weights, reshape_weights, data_type)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#aa3affe19462bcddbd9d6ca29c1e47594',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(zip(zip(zip(framework::dataset::make(&quot;InputInfo&quot;, { TensorInfo(TensorShape(9U, 5U, 7U, 3U), 1, DataType::F32), TensorInfo(TensorShape(8U, 4U, 6U, 4U), 1, DataType::F32), TensorInfo(TensorShape(8U, 4U, 6U, 4U), 1, DataType::F32), TensorInfo(TensorShape(9U, 5U, 7U, 3U), 1, DataType::F32), TensorInfo(TensorShape(9U, 5U, 7U, 3U), 1, DataType::F32), }), framework::dataset::make(&quot;WeightsInfo&quot;,{ TensorInfo(TensorShape(315U, 271U), 1, DataType::F16), TensorInfo(TensorShape(192U, 192U), 1, DataType::F32), TensorInfo(TensorShape(192U, 192U), 1, DataType::F32), TensorInfo(TensorShape(217U, 231U), 1, DataType::F32), TensorInfo(TensorShape(217U, 315U), 1, DataType::F32), })), framework::dataset::make(&quot;BiasInfo&quot;,{ TensorInfo(TensorShape(271U), 1, DataType::F32), TensorInfo(TensorShape(192U), 1, DataType::F32), TensorInfo(TensorShape(192U), 1, DataType::F32), TensorInfo(TensorShape(271U), 1, DataType::F32), TensorInfo(TensorShape(271U), 1, DataType::F32), })), framework::dataset::make(&quot;OutputInfo&quot;,{ TensorInfo(TensorShape(271U, 3U), 1, DataType::F32), TensorInfo(TensorShape(192U, 4U), 1, DataType::F32), TensorInfo(TensorShape(192U, 4U), 1, DataType::F32), TensorInfo(TensorShape(271U, 3U), 1, DataType::F32), TensorInfo(TensorShape(271U, 3U), 1, DataType::F32), })), framework::dataset::make(&quot;TransposeWeights&quot;,{ true, true, false, true, true })), framework::dataset::make(&quot;ReshapedWeights&quot;,{ false, false, false, false, false})), framework::dataset::make(&quot;Expected&quot;, { false, true, true, false, false })), input_info, weights_info, bias_info, output_info, transpose_weights, reshaped_weights, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a370c6df0823b292ef89726547ce83cc0',1,'arm_compute::test::validation::DATA_TEST_CASE(Configuration, framework::DatasetMode::ALL, large_gaussian_pyramid_levels, shape, border_mode, num_levels)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#ac60bce01d83538dd27cddcbea97046c8',1,'arm_compute::test::validation::DATA_TEST_CASE(Configuration, framework::DatasetMode::ALL, framework::dataset::concat(datasets::SmallGEMMLowpDataset(), datasets::LargeGEMMLowpDataset()), shape_a, shape_b, shape_c, a_offset, b_offset)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#ae408ebf375fe9401ddb3fc30be6ee254',1,'arm_compute::test::validation::DATA_TEST_CASE(Configuration, framework::DatasetMode::ALL, combine(framework::dataset::concat(datasets::SmallShapes(), datasets::LargeShapes()), quantize_down_int32_to_uint8_scale_cases), shape, result_offset, result_mult_int, result_shift, min, max, add_bias)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#af7abb3c5ef69509a8a8c2ec8e7dea242',1,'arm_compute::test::validation::DATA_TEST_CASE(Configuration, framework::DatasetMode::ALL, combine(framework::dataset::concat(datasets::SmallShapes(), datasets::LargeShapes()), quantize_down_int32_to_uint8_scale_by_fixedpoint_cases), shape, result_fixedpoint_multiplier, result_shift, result_offset_after_shift, min, max, add_bias)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a70d260ea6070965cb0bab9d6559abb28',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(zip(zip(zip(zip(framework::dataset::make(&quot;scores&quot;, { TensorInfo(TensorShape(100U, 100U, 9U), 1, DataType::F32), TensorInfo(TensorShape(100U, 100U, 9U), 1, DataType::F16), TensorInfo(TensorShape(100U, 100U, 9U), 1, DataType::F16), TensorInfo(TensorShape(100U, 100U, 9U), 1, DataType::F16), TensorInfo(TensorShape(100U, 100U, 9U), 1, DataType::F16), TensorInfo(TensorShape(100U, 100U, 9U), 1, DataType::F16)}), framework::dataset::make(&quot;deltas&quot;,{ TensorInfo(TensorShape(100U, 100U, 36U), 1, DataType::F32), TensorInfo(TensorShape(100U, 100U, 36U), 1, DataType::F32), TensorInfo(TensorShape(100U, 100U, 38U), 1, DataType::F32), TensorInfo(TensorShape(100U, 100U, 38U), 1, DataType::F32), TensorInfo(TensorShape(100U, 100U, 38U), 1, DataType::F32), TensorInfo(TensorShape(100U, 100U, 38U), 1, DataType::F32)})), framework::dataset::make(&quot;anchors&quot;, { TensorInfo(TensorShape(4U, 9U), 1, DataType::F32), TensorInfo(TensorShape(4U, 9U), 1, DataType::F32), TensorInfo(TensorShape(4U, 9U), 1, DataType::F32), TensorInfo(TensorShape(5U, 9U), 1, DataType::F32), TensorInfo(TensorShape(4U, 9U), 1, DataType::F32), TensorInfo(TensorShape(4U, 9U), 1, DataType::F32)})), framework::dataset::make(&quot;proposals&quot;, { TensorInfo(TensorShape(5U, 100U *100U *9U), 1, DataType::F32), TensorInfo(TensorShape(5U, 100U *100U *9U), 1, DataType::F32), TensorInfo(TensorShape(5U, 100U *100U *9U), 1, DataType::F32), TensorInfo(TensorShape(5U, 100U *100U *9U), 1, DataType::F32), TensorInfo(TensorShape(5U, 100U *100U *9U), 1, DataType::F32), TensorInfo(TensorShape(5U, 100U *100U *9U), 1, DataType::F32)})), framework::dataset::make(&quot;scores_out&quot;, { TensorInfo(TensorShape(100U *100U *9U), 1, DataType::F32), TensorInfo(TensorShape(100U *100U *9U), 1, DataType::F32), TensorInfo(TensorShape(100U *100U *9U), 1, DataType::F32), TensorInfo(TensorShape(100U *100U *9U), 1, DataType::F32), TensorInfo(TensorShape(100U *100U *9U), 1, DataType::F32), TensorInfo(TensorShape(100U *100U *9U), 1, DataType::F32)})), framework::dataset::make(&quot;num_valid_proposals&quot;, { TensorInfo(TensorShape(1U, 1U), 1, DataType::U32), TensorInfo(TensorShape(1U, 1U), 1, DataType::U32), TensorInfo(TensorShape(1U, 1U), 1, DataType::U32), TensorInfo(TensorShape(1U, 1U), 1, DataType::U32), TensorInfo(TensorShape(1U, 10U), 1, DataType::U32), TensorInfo(TensorShape(1U, 1U), 1, DataType::F16)})), framework::dataset::make(&quot;generate_proposals_info&quot;, { GenerateProposalsInfo(10.f, 10.f, 1.f), GenerateProposalsInfo(10.f, 10.f, 1.f), GenerateProposalsInfo(10.f, 10.f, 1.f), GenerateProposalsInfo(10.f, 10.f, 1.f), GenerateProposalsInfo(10.f, 10.f, 1.f), GenerateProposalsInfo(10.f, 10.f, 1.f)})), framework::dataset::make(&quot;Expected&quot;, { true, false, false, false, false, false })), scores, deltas, anchors, proposals, scores_out, num_valid_proposals, generate_proposals_info, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a1c31e08a7ec435be0c95597312bdc876',1,'arm_compute::test::validation::DATA_TEST_CASE(IntegrationTestCaseAllAnchors, framework::DatasetMode::ALL, framework::dataset::make(&quot;DataType&quot;, { DataType::F32 }), data_type)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#aa8cbbd68453259f0c10bde13e03bde34',1,'arm_compute::test::validation::DATA_TEST_CASE(IntegrationTestCaseGenerateProposals, framework::DatasetMode::ALL, framework::dataset::make(&quot;DataType&quot;, { DataType::F32 }), data_type)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#abbf29c3196014ae38a994e8278407bc7',1,'arm_compute::test::validation::DATA_TEST_CASE(Configuration, framework::DatasetMode::ALL, combine(combine(concat(datasets::Small2DShapes(), datasets::Large2DShapes()), data), framework::dataset::make(&quot;Format&quot;, Format::U8)), shape, gradient_size, block_size, border_mode, format)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a1df3843c8077aad2f1daacc093cbff1b',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(framework::dataset::make(&quot;InputInfo&quot;, { TensorInfo(TensorShape(10U, 12U, 2U), 1, DataType::U8), TensorInfo(TensorShape(10U, 12U, 2U), 1, DataType::F32), TensorInfo(TensorShape(10U, 12U, 2U), 1, DataType::QASYMM8), TensorInfo(TensorShape(10U, 12U, 2U, 2U), 1, DataType::QASYMM8), }), framework::dataset::make(&quot;OutputInfo&quot;,{ TensorInfo(TensorShape(3U, 4U, 10U, 2U), 1, DataType::F16), TensorInfo(TensorShape(3U, 4U, 10U, 2U), 1, DataType::F16), TensorInfo(TensorShape(3U, 3U, 10U, 2U), 1, DataType::QASYMM8), TensorInfo(TensorShape(18U, 80U, 2U, 1U), 1, DataType::QASYMM8), })), framework::dataset::make(&quot;HasBias&quot;, { true, true, true, false })), framework::dataset::make(&quot;Expected&quot;, { false, false, false, true })), input_info, output_info, has_bias, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#aa01c920f4e14bcf0df015004b0e73691',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(framework::dataset::make(&quot;InputInfo&quot;, { TensorInfo(TensorShape(128U, 64U), 1, DataType::F32), TensorInfo(TensorShape(128U, 64U), 1, DataType::F32), TensorInfo(TensorShape(128U, 64U), 2, DataType::F32), TensorInfo(TensorShape(128U, 64U), 1, DataType::S16), TensorInfo(TensorShape(128U, 64U), 1, DataType::F32), TensorInfo(TensorShape(128U, 64U), 1, DataType::F32), TensorInfo(TensorShape(128U, 64U), 1, DataType::F32) }), framework::dataset::make(&quot;OutputInfo&quot;, { TensorInfo(TensorShape(128U, 64U), 1, DataType::F16), TensorInfo(TensorShape(256U, 64U), 1, DataType::F32), TensorInfo(TensorShape(128U, 64U), 1, DataType::F32), TensorInfo(TensorShape(128U, 64U), 1, DataType::S16), TensorInfo(TensorShape(128U, 64U), 1, DataType::F32), TensorInfo(TensorShape(128U, 64U), 1, DataType::F32), TensorInfo(TensorShape(128U, 64U), 1, DataType::F32) })), framework::dataset::make(&quot;Axis&quot;, { 0U, 0U, 0U, 0U, static_cast&lt; unsigned int &gt;(TensorShape::num_max_dimensions), 4U, 0U })), framework::dataset::make(&quot;Expected&quot;, { false, false, false, false, false, false, true })), input_info, output_info, axis, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a5a74612ce9f8b898bc171800b13fb3e2',1,'arm_compute::test::validation::DATA_TEST_CASE(Configuration, framework::DatasetMode::ALL, combine(combine(concat(datasets::Medium2DShapes(), datasets::Large2DShapes()), datasets::BorderModes()), large_laplacian_pyramid_levels), shape, border_mode, num_levels)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a74496771d90a70769feaa5739daf9622',1,'arm_compute::test::validation::DATA_TEST_CASE(Configuration, framework::DatasetMode::ALL, combine(combine(concat(datasets::Medium2DShapes(), datasets::Large2DShapes()), datasets::BorderModes()), large_laplacian_reconstruct_levels), shape, border_mode, num_levels)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a876889712d97367ca5ed4b922705fc6e',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(zip(zip(framework::dataset::make(&quot;InputInfo&quot;, { TensorInfo(TensorShape(23U, 27U, 5U), 1, DataType::F32), TensorInfo(TensorShape(23U, 27U, 5U), 1, DataType::F32), TensorInfo(TensorShape(23U, 27U, 5U), 1, DataType::F32), TensorInfo(TensorShape(23U, 27U, 5U), 1, DataType::F32), TensorInfo(TensorShape(23U, 27U, 5U), 1, DataType::F32), TensorInfo(TensorShape(23U, 27U, 5U), 1, DataType::F32), TensorInfo(TensorShape(23U, 27U, 5U), 1, DataType::F32), TensorInfo(TensorShape(23U, 27U, 5U), 1, DataType::F32), TensorInfo(TensorShape(23U, 27U, 5U), 1, DataType::F32) }), framework::dataset::make(&quot;WeightsInfo&quot;,{ TensorInfo(TensorShape(3U, 3U, 5U, 21U, 275U), 1, DataType::F16), TensorInfo(TensorShape(3U, 3U, 5U, 21U, 275U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 5U, 21U, 275U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 5U, 21U, 274U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 5U, 21U, 275U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 5U, 21U, 275U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 5U, 21U, 275U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 5U, 21U, 275U), 1, DataType::F32), TensorInfo(TensorShape(1U, 3U, 5U, 21U, 575U), 1, DataType::F32) })), framework::dataset::make(&quot;BiasInfo&quot;, { TensorInfo(TensorShape(21U, 275U), 1, DataType::F32), TensorInfo(TensorShape(21U, 275U), 1, DataType::F16), TensorInfo(TensorShape(21U, 275U), 1, DataType::F32), TensorInfo(TensorShape(21U, 275U), 1, DataType::F32), TensorInfo(TensorShape(21U, 274U), 1, DataType::F32), TensorInfo(TensorShape(21U, 275U), 1, DataType::F32), TensorInfo(TensorShape(21U, 275U), 1, DataType::F32), TensorInfo(TensorShape(21U, 275U), 1, DataType::F32), TensorInfo(TensorShape(21U, 575U), 1, DataType::F32) })), framework::dataset::make(&quot;OutputInfo&quot;, { TensorInfo(TensorShape(11U, 25U, 21U), 1, DataType::F32), TensorInfo(TensorShape(11U, 25U, 21U), 1, DataType::F32), TensorInfo(TensorShape(11U, 25U, 21U), 1, DataType::F16), TensorInfo(TensorShape(11U, 25U, 21U), 1, DataType::F32), TensorInfo(TensorShape(11U, 25U, 21U), 1, DataType::F32), TensorInfo(TensorShape(11U, 25U, 22U), 1, DataType::F32), TensorInfo(TensorShape(11U, 25U, 21U), 1, DataType::F32), TensorInfo(TensorShape(11U, 25U, 21U), 1, DataType::F32), TensorInfo(TensorShape(23U, 25U, 21U), 1, DataType::F32) })), framework::dataset::make(&quot;PadStride&quot;, { PadStrideInfo(2, 1, 0, 0), PadStrideInfo(2, 1, 0, 0), PadStrideInfo(2, 1, 0, 0), PadStrideInfo(2, 1, 0, 0), PadStrideInfo(2, 1, 0, 0), PadStrideInfo(2, 1, 0, 0), PadStrideInfo(2, 1, 1, 0), PadStrideInfo(2, 1, 0, 0), PadStrideInfo(1, 1, 0, 0) })), framework::dataset::make(&quot;Expected&quot;, { false, false, false, false, false, false, false, false, true })), input_info, weights_info, bias_info, output_info, conv_info, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#ac02f7704050bf75595bbb4009a6bd12c',1,'arm_compute::test::validation::DATA_TEST_CASE(Configuration, framework::DatasetMode::ALL, combine(framework::dataset::concat(datasets::SmallLocallyConnectedDataset(), datasets::LargeLocallyConnectedDataset()), framework::dataset::make(&quot;DataType&quot;, DataType::F32)), src_shape, weights_shape, bias_shape, dst_shape, info, dilation, data_type)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a15221160dbe648335c35231c529f65d7',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(zip(zip(zip(zip(zip(zip(framework::dataset::make(&quot;InputInfo&quot;, { TensorInfo(TensorShape(8U, 2U), 1, DataType::U8), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(8U, 2U), 1, DataType::F32), TensorInfo(TensorShape(8U, 2U), 1, DataType::F32), TensorInfo(TensorShape(8U, 2U), 1, DataType::F32), TensorInfo(TensorShape(8U, 2U), 1, DataType::F32), TensorInfo(TensorShape(8U, 2U), 1, DataType::F32), TensorInfo(TensorShape(8U, 2U), 1, DataType::F32), }), framework::dataset::make(&quot;InputWeightsInfo&quot;, { TensorInfo(TensorShape(8U, 16U), 1, DataType::F32), TensorInfo(TensorShape(8U, 16U), 1, DataType::F32), TensorInfo(TensorShape(27U, 11U, 2U), 1, DataType::F32), TensorInfo(TensorShape(8U, 16U), 1, DataType::F32), TensorInfo(TensorShape(8U, 16U), 1, DataType::F32), TensorInfo(TensorShape(8U, 16U), 1, DataType::F32), TensorInfo(TensorShape(8U, 16U), 1, DataType::F32), TensorInfo(TensorShape(8U, 16U), 1, DataType::F32), })), framework::dataset::make(&quot;RecurrentWeightsInfo&quot;, { TensorInfo(TensorShape(16U, 16U), 1, DataType::F32), TensorInfo(TensorShape(16U, 16U), 1, DataType::F32), TensorInfo(TensorShape(16U, 16U), 1, DataType::F32), TensorInfo(TensorShape(25U, 11U, 2U), 1, DataType::F32), TensorInfo(TensorShape(16U, 16U), 1, DataType::F32), TensorInfo(TensorShape(16U, 16U), 1, DataType::F32), TensorInfo(TensorShape(16U, 16U), 1, DataType::F32), TensorInfo(TensorShape(16U, 16U), 1, DataType::F32), })), framework::dataset::make(&quot;CellBiasInfo&quot;, { TensorInfo(TensorShape(16U), 1, DataType::F32), TensorInfo(TensorShape(16U), 1, DataType::F32), TensorInfo(TensorShape(16U), 1, DataType::F32), TensorInfo(TensorShape(16U), 1, DataType::F32), TensorInfo(TensorShape(30U), 1, DataType::F32), TensorInfo(TensorShape(16U), 1, DataType::F32), TensorInfo(TensorShape(16U), 1, DataType::F32), TensorInfo(TensorShape(16U), 1, DataType::F32), })), framework::dataset::make(&quot;ProjectionBiasInfo&quot;, { TensorInfo(TensorShape(16U), 1, DataType::F32), TensorInfo(TensorShape(16U), 1, DataType::F32), TensorInfo(TensorShape(16U), 1, DataType::F32), TensorInfo(TensorShape(16U), 1, DataType::F32), TensorInfo(TensorShape(16U), 1, DataType::F32), TensorInfo(TensorShape(16U), 1, DataType::F32), TensorInfo(TensorShape(16U), 1, DataType::F32), TensorInfo(TensorShape(16U), 1, DataType::F32), })), framework::dataset::make(&quot;CellStateInfo&quot;, { TensorInfo(TensorShape(16U, 2U), 1, DataType::F32), TensorInfo(TensorShape(16U, 2U), 1, DataType::F32), TensorInfo(TensorShape(16U, 2U), 1, DataType::F32), TensorInfo(TensorShape(16U, 2U), 1, DataType::F32), TensorInfo(TensorShape(16U, 2U), 1, DataType::F32), TensorInfo(TensorShape(11U), 1, DataType::F32), TensorInfo(TensorShape(16U, 2U), 1, DataType::F32), TensorInfo(TensorShape(16U, 2U), 1, DataType::F32), })), framework::dataset::make(&quot;OutputInfo&quot;, { TensorInfo(TensorShape(16U, 2U), 1, DataType::F32), TensorInfo(TensorShape(16U, 2U), 1, DataType::F32), TensorInfo(TensorShape(16U, 2U), 1, DataType::F32), TensorInfo(TensorShape(16U, 2U), 1, DataType::F32), TensorInfo(TensorShape(16U, 2U), 1, DataType::F32), TensorInfo(TensorShape(16U, 2U), 1, DataType::F32), TensorInfo(TensorShape(11U, 13U), 1, DataType::F32), TensorInfo(TensorShape(16U, 2U), 1, DataType::F32), })), framework::dataset::make(&quot;ScratchInfo&quot;, { TensorInfo(TensorShape(64U, 2U), 1, DataType::F32), TensorInfo(TensorShape(64U, 2U), 1, DataType::F32), TensorInfo(TensorShape(64U, 2U), 1, DataType::F32), TensorInfo(TensorShape(64U, 2U), 1, DataType::F32), TensorInfo(TensorShape(64U, 2U), 1, DataType::F32), TensorInfo(TensorShape(64U, 2U), 1, DataType::F32), TensorInfo(TensorShape(64U, 2U), 1, DataType::F32), TensorInfo(TensorShape(12U, 2U), 1, DataType::F32), })), framework::dataset::make(&quot;ActivationInfo&quot;, { ActivationLayerInfo(ActivationLayerInfo::ActivationFunction::RELU), ActivationLayerInfo(ActivationLayerInfo::ActivationFunction::RELU), ActivationLayerInfo(ActivationLayerInfo::ActivationFunction::RELU), ActivationLayerInfo(ActivationLayerInfo::ActivationFunction::RELU), ActivationLayerInfo(ActivationLayerInfo::ActivationFunction::RELU), ActivationLayerInfo(ActivationLayerInfo::ActivationFunction::RELU), ActivationLayerInfo(ActivationLayerInfo::ActivationFunction::RELU), ActivationLayerInfo(ActivationLayerInfo::ActivationFunction::RELU), })), framework::dataset::make(&quot;Expected&quot;, { false, false, false, false, false, false, false, false })), input_info, input_weights_info, recurrent_weights_info, cell_bias_info, projection_bias_info, cell_state_info, output_info, scratch_info, info, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a6475de3c912574ea8dbf02addf6cfe00',1,'arm_compute::test::validation::DATA_TEST_CASE(Configuration, framework::DatasetMode::ALL, combine(concat(datasets::SmallShapes(), datasets::LargeShapes()), framework::dataset::make(&quot;DataType&quot;, { DataType::S16, DataType::S32 })), shape, data_type)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a7240e6d673468111723e7b4a20145aeb',1,'arm_compute::test::validation::DATA_TEST_CASE(Configuration, framework::DatasetMode::ALL, combine(concat(datasets::Small2DShapes(), datasets::Large2DShapes()), framework::dataset::make(&quot;DataType&quot;, { DataType::U8 })), shape, data_type)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a3a07f8a03ee00da37a5ba6b89c7e748d',1,'arm_compute::test::validation::DATA_TEST_CASE(Configuration, framework::DatasetMode::ALL, combine(combine(combine(combine(concat(datasets::SmallShapes(), datasets::LargeShapes()), datasets::NonLinearFilterFunctions()), framework::dataset::make(&quot;MaskSize&quot;, { 3U, 5U })), datasets::MatrixPatterns()), datasets::BorderModes()), shape, function, mask_size, pattern, border_mode)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#ac0e8c51ac5cf2b2f0cf69b64db39e81b',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(framework::dataset::make(&quot;InputInfo&quot;, { TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), }), framework::dataset::make(&quot;OutputInfo&quot;,{ TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F16), TensorInfo(TensorShape(27U, 11U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), })), framework::dataset::make(&quot;NormInfo&quot;, { NormalizationLayerInfo(NormType::IN_MAP_1D, 5), NormalizationLayerInfo(NormType::IN_MAP_1D, 5), NormalizationLayerInfo(NormType::IN_MAP_1D, 4), NormalizationLayerInfo(NormType::IN_MAP_2D, 5), NormalizationLayerInfo(NormType::IN_MAP_1D, 5), NormalizationLayerInfo(NormType::CROSS_MAP, 5), })), framework::dataset::make(&quot;Expected&quot;, { false, false, false, false, false, true })), input_info, output_info, norm_info, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#aa3cae9fc421a796d441b8bca1d0cc074',1,'arm_compute::test::validation::DATA_TEST_CASE(Configuration, framework::DatasetMode::ALL, combine(combine(datasets::RandomNormalizePlanarYUVLayerDataset(), framework::dataset::make(&quot;DataType&quot;, { DataType::F16 })), framework::dataset::make(&quot;DataLayout&quot;, { DataLayout::NCHW, DataLayout::NHWC })), shape0, shape1, dt, data_layout)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a478a9010906dfa0ee3f1028135c96777',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(framework::dataset::make(&quot;InputInfo&quot;, { TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F16), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(32U, 16U, 8U), 1, DataType::F16), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F16), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), }), framework::dataset::make(&quot;OutputInfo&quot;,{ TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F16), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F16), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(32U, 16U, 8U), 1, DataType::F16), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F16), TensorInfo(TensorShape(30U, 11U, 2U), 1, DataType::F32), })), framework::dataset::make(&quot;MSTDInfo&quot;,{ TensorInfo(TensorShape(2U), 1, DataType::F16), TensorInfo(TensorShape(2U), 1, DataType::F16), TensorInfo(TensorShape(2U), 1, DataType::U8), TensorInfo(TensorShape(8U), 1, DataType::F16), TensorInfo(TensorShape(6U), 1, DataType::F16), TensorInfo(TensorShape(2U), 1, DataType::F32), })), framework::dataset::make(&quot;Expected&quot;, { false, false, false, true, false, false })), input_info, output_info, msd_info, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a815667e6214a460ca2b32b8a3d2991b8',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(framework::dataset::make(&quot;InputInfo&quot;, { TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32) }), framework::dataset::make(&quot;OutputInfo&quot;,{ TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F16), TensorInfo(TensorShape(28U, 11U, 2U), 1, DataType::F32), TensorInfo(TensorShape(29U, 17U, 2U), 1, DataType::F32), TensorInfo(TensorShape(29U, 15U, 4U, 3U), 1, DataType::F32), TensorInfo(TensorShape(27U, 14U, 3U, 4U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U, 3U), 1, DataType::F32) })), framework::dataset::make(&quot;PaddingSize&quot;, { PaddingList{{0, 0}}, PaddingList{{1, 1}}, PaddingList{{1, 1}, {2, 2}}, PaddingList{{1, 1}, {1, 1}, {1, 1}, {1, 1}}, PaddingList{{0, 0}, {1, 0}, {0, 1}, {1, 2}}, PaddingList{{0, 0}, {0, 0}, {0, 0}, {1, 1}} })), framework::dataset::make(&quot;Expected&quot;, { false, false, true, true, true, true })), input_info, output_info, padding, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#aa09dc286bdc4ddde0d0d7914ad026346',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(framework::dataset::make(&quot;InputInfo&quot;,{ TensorInfo(TensorShape(7U, 7U, 5U, 3U), 1, DataType::U16), TensorInfo(TensorShape(7U, 7U, 5U, 3U), 1, DataType::U16), TensorInfo(TensorShape(7U, 7U, 5U, 3U), 1, DataType::U16), TensorInfo(TensorShape(1U, 7U), 1, DataType::U8), TensorInfo(TensorShape(7U, 7U, 5U, 3U), 1, DataType::U16), TensorInfo(TensorShape(27U, 13U, 37U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 37U, 2U), 1, DataType::F32), TensorInfo(TensorShape(128U, 64U, 21U, 2U), 1, DataType::QASYMM8), TensorInfo(TensorShape(128U, 64U, 21U, 2U), 1, DataType::F32), TensorInfo(TensorShape(128U, 64U, 21U, 2U), 1, DataType::F32), TensorInfo(TensorShape(128U, 64U, 21U, 2U), 1, DataType::U16), }), framework::dataset::make(&quot;OutputInfo&quot;, { TensorInfo(TensorShape(5U, 7U, 7U, 3U), 1, DataType::U16), TensorInfo(TensorShape(5U, 5U, 7U, 3U), 1, DataType::U16), TensorInfo(TensorShape(7U, 7U, 7U, 3U), 1, DataType::U16), TensorInfo(TensorShape(5U, 7U), 1, DataType::U8), TensorInfo(TensorShape(5U, 7U, 7U, 3U), 1, DataType::U16), TensorInfo(TensorShape(13U, 37U, 27U, 2U), 1, DataType::F32), TensorInfo(TensorShape(2U, 37U, 27U, 13U), 1, DataType::F32), TensorInfo(TensorShape(128U, 64U, 21U, 2U), 1, DataType::QASYMM8), TensorInfo(TensorShape(128U, 64U, 21U, 2U), 1, DataType::F32), TensorInfo(TensorShape(21U, 64U, 2U, 128U), 1, DataType::F32), TensorInfo(TensorShape(2U, 21U, 64U, 128U), 1, DataType::U16), })), framework::dataset::make(&quot;PermutationVector&quot;, { PermutationVector(2U, 1U, 0U), PermutationVector(2U, 2U, 1U), PermutationVector(1U, 1U, 1U), PermutationVector(2U, 0U, 1U), PermutationVector(2U, 0U, 1U), PermutationVector(1U, 2U, 0U), PermutationVector(3U, 2U, 0U, 1U), PermutationVector(2U, 3U, 1U, 0U), PermutationVector(1U, 1U, 1U, 1U), PermutationVector(2U, 1U, 3U, 0U), PermutationVector(3U, 2U, 1U, 0U), })), framework::dataset::make(&quot;Expected&quot;, { false, false, false, false, true, true, true, false, false, false, false })), input_info, output_info, perm_vect, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a10cbef7a4d5b95ee888e5371244056ae',1,'arm_compute::test::validation::DATA_TEST_CASE(Configuration, framework::DatasetMode::ALL, combine(datasets::Small4DShapes(), framework::dataset::make(&quot;DataType&quot;, { DataType::S8, DataType::U8, DataType::S16, DataType::U16, DataType::U32, DataType::S32, DataType::F16, DataType::F32 })), shape, data_type)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a2d8ceb03a628fbc166c979678ab5ceef',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(zip(framework::dataset::make(&quot;Input1Info&quot;, { TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), }), framework::dataset::make(&quot;Input2Info&quot;,{ TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::S16), TensorInfo(TensorShape(48U, 11U, 2U), 1, DataType::F32), })), framework::dataset::make(&quot;OutputInfo&quot;,{ TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::S16), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(48U, 11U, 2U), 1, DataType::F32), })), framework::dataset::make(&quot;Scale&quot;,{ 2.f, 2.f, 2.f, -1.f, 1.f, 1.f})), framework::dataset::make(&quot;Expected&quot;, { true, true, false, false, false, false})), input1_info, input2_info, output_info, scale, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a47c98d948b32f0d1996681eef38f80d6',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(framework::dataset::make(&quot;InputInfo&quot;, { TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::QASYMM8), TensorInfo(TensorShape(15U, 13U, 5U), 1, DataType::F32), TensorInfo(TensorShape(13U, 13U, 5U), 1, DataType::F32), TensorInfo(TensorShape(13U, 13U, 5U), 1, DataType::F32), }), framework::dataset::make(&quot;OutputInfo&quot;,{ TensorInfo(TensorShape(25U, 11U, 2U), 1, DataType::F16), TensorInfo(TensorShape(25U, 11U, 2U), 1, DataType::F32), TensorInfo(TensorShape(30U, 11U, 2U), 1, DataType::F32), TensorInfo(TensorShape(25U, 16U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::QASYMM8), TensorInfo(TensorShape(1U, 1U, 5U), 1, DataType::F32), TensorInfo(TensorShape(2U, 2U, 5U), 1, DataType::F32), TensorInfo(TensorShape(1U, 1U, 5U), 1, DataType::F32), })), framework::dataset::make(&quot;PoolInfo&quot;, { PoolingLayerInfo(PoolingType::AVG, 3, PadStrideInfo(1, 1, 0, 0)), PoolingLayerInfo(PoolingType::AVG, 3, PadStrideInfo(1, 1, 0, 0)), PoolingLayerInfo(PoolingType::AVG, 2, PadStrideInfo(1, 1, 2, 0)), PoolingLayerInfo(PoolingType::AVG, 2, PadStrideInfo(1, 1, 0, 2)), PoolingLayerInfo(PoolingType::L2, 3, PadStrideInfo(1, 1, 0, 0)), PoolingLayerInfo(PoolingType::AVG), PoolingLayerInfo(PoolingType::MAX), PoolingLayerInfo(PoolingType::AVG), })), framework::dataset::make(&quot;Expected&quot;, { false, false, false, false, false, true, false, true })), input_info, output_info, pool_info, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a8d47360b71b942aa8a57912b3b1d7d3c',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(zip(framework::dataset::make(&quot;Input1Info&quot;, { TensorInfo(TensorShape(10U, 10U, 2U), 1, DataType::F32), TensorInfo(TensorShape(10U, 10U, 2U), 1, DataType::F32), }), framework::dataset::make(&quot;Input2Info&quot;, { TensorInfo(TensorShape(10U, 10U, 2U), 1, DataType::F32), TensorInfo(TensorShape(10U, 10U, 2U), 1, DataType::F32), })), framework::dataset::make(&quot;OutputInfo&quot;,{ TensorInfo(TensorShape(1200U, 2U), 1, DataType::F32), TensorInfo(TensorShape(1000U, 2U), 1, DataType::F32), })), framework::dataset::make(&quot;PriorBoxInfo&quot;,{ PriorBoxLayerInfo(std::vector&lt; float &gt;(1), std::vector&lt; float &gt;(1), 0, true, true, std::vector&lt; float &gt;(1), std::vector&lt; float &gt;(1), Coordinates2D{8, 8}, std::array&lt; float, 2 &gt;()), PriorBoxLayerInfo(std::vector&lt; float &gt;(1), std::vector&lt; float &gt;(1), 0, true, true, std::vector&lt; float &gt;(1), std::vector&lt; float &gt;(1), Coordinates2D{8, 8}, std::array&lt; float, 2 &gt;()), })), framework::dataset::make(&quot;Expected&quot;, { true, false})), input1_info, input2_info, output_info, info, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a6da83731448ca19e1a954872f123f45c',1,'arm_compute::test::validation::DATA_TEST_CASE(Configuration, framework::DatasetMode::ALL, combine(QuantizationShapes, framework::dataset::make(&quot;DataType&quot;, DataType::F32)), shape, data_type)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a13b0c3565b30f4234d850c64a2a6ea89',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(framework::dataset::make(&quot;InputInfo&quot;, { TensorInfo(TensorShape(27U, 3U, 16U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 3U, 16U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 16U, 16U, 2U), 1, DataType::F32) }), framework::dataset::make(&quot;OutputInfo&quot;, { TensorInfo(TensorShape(27U, 3U, 1U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 3U, 1U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 16U, 1U, 2U), 1, DataType::F32) })), framework::dataset::make(&quot;Axis&quot;, { Coordinates(4), Coordinates(0, 2), Coordinates(2) })), framework::dataset::make(&quot;Expected&quot;, { false, false, true })), input_info, output_info, axis, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a259fed1b314963b2646ab1d9fda3d0d5',1,'arm_compute::test::validation::DATA_TEST_CASE(Configuration, framework::DatasetMode::ALL, combine(datasets::SmallShapes(), framework::dataset::make(&quot;DataType&quot;, { DataType::F16, DataType::F32 })), shape, data_type)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a25f2ef65d5bc1365c06e9a12b64a9f4f',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(framework::dataset::make(&quot;InputInfo&quot;, { TensorInfo(TensorShape(128U, 64U), 1, DataType::F32), TensorInfo(TensorShape(128U, 64U), 2, DataType::F32), TensorInfo(TensorShape(128U, 64U), 1, DataType::S16), TensorInfo(TensorShape(128U, 64U), 1, DataType::F32), TensorInfo(TensorShape(128U, 64U), 1, DataType::QASYMM8), TensorInfo(TensorShape(128U, 64U), 1, DataType::F32) }), framework::dataset::make(&quot;OutputInfo&quot;, { TensorInfo(TensorShape(1U, 64U), 1, DataType::F16), TensorInfo(TensorShape(1U, 64U), 1, DataType::F32), TensorInfo(TensorShape(1U, 64U), 1, DataType::S16), TensorInfo(TensorShape(1U, 64U), 1, DataType::F32), TensorInfo(TensorShape(1U, 64U), 1, DataType::QASYMM8), TensorInfo(TensorShape(1U, 64U), 1, DataType::F32) })), framework::dataset::make(&quot;Axis&quot;, { 0U, 0U, 0U, static_cast&lt; unsigned int &gt;(TensorShape::num_max_dimensions), 1U, 0U })), framework::dataset::make(&quot;Expected&quot;, { false, false, false, false, false, true })), input_info, output_info, axis, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#aa0f1d245d54dbf144b789d5917838329',1,'arm_compute::test::validation::DATA_TEST_CASE(Configuration, framework::DatasetMode::ALL, combine(combine(combine(concat(datasets::SmallShapes(), datasets::LargeShapes()), framework::dataset::make(&quot;InterpolationPolicy&quot;, { InterpolationPolicy::NEAREST_NEIGHBOR, InterpolationPolicy::BILINEAR })), framework::dataset::make(&quot;DataType&quot;, DataType::U8)), framework::dataset::make(&quot;BorderModes&quot;, { BorderMode::UNDEFINED, BorderMode::CONSTANT })), shape, policy, data_type, border_mode)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#afb0b52b4f9be21c5363b9843ba2b496e',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(framework::dataset::make(&quot;InputInfo&quot;, { TensorInfo(TensorShape(10U, 12U, 1U, 2U), 1, DataType::S64), TensorInfo(TensorShape(10U, 12U, 1U, 2U), 1, DataType::F32), TensorInfo(TensorShape(10U, 12U, 1U, 2U), 1, DataType::F32), TensorInfo(TensorShape(3U, 12U, 4U, 2U), 1, DataType::F32), TensorInfo(TensorShape(3U, 12U, 4U, 2U), 1, DataType::F32), }), framework::dataset::make(&quot;OutputInfo&quot;,{ TensorInfo(TensorShape(3U, 4U, 10U, 2U), 1, DataType::S64), TensorInfo(TensorShape(5U, 6U, 4U, 2U), 1, DataType::F32), TensorInfo(TensorShape(5U, 6U, 2, 2U), 1, DataType::F32), TensorInfo(TensorShape(1U, 4U, 36U, 2U), 1, DataType::F32), TensorInfo(TensorShape(1U, 4U, 36U, 2U), 1, DataType::F16), })), framework::dataset::make(&quot;Stride&quot;, { 2, 2, 4, 3 })), framework::dataset::make(&quot;Expected&quot;, { false, true, false, true, false })), input_info, output_info, stride, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#aa3966da5462e4f9aeff9a4c5c766a971',1,'arm_compute::test::validation::DATA_TEST_CASE(Configuration, framework::DatasetMode::ALL, combine(combine(framework::dataset::concat(datasets::SmallReorgLayerDataset(), datasets::LargeReorgLayerDataset()), framework::dataset::make(&quot;DataType&quot;, { DataType::F32, DataType::F16, DataType::QASYMM8 })), framework::dataset::make(&quot;DataLayout&quot;, { DataLayout::NCHW, DataLayout::NHWC })), shape, stride, data_type, data_layout)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#af8870dc8041b8433f43da5ec26e5dada',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(framework::dataset::make(&quot;InputInfo&quot;, { TensorInfo(TensorShape(9U, 5U, 7U, 3U), 1, DataType::F32), TensorInfo(TensorShape(8U, 4U, 6U, 4U), 1, DataType::F32), TensorInfo(TensorShape(8U, 4U, 6U, 4U), 1, DataType::F32), TensorInfo(TensorShape(9U, 5U, 7U, 3U), 1, DataType::F16), }), framework::dataset::make(&quot;OutputInfo&quot;, { TensorInfo(TensorShape(9U, 5U, 21U), 1, DataType::F32), TensorInfo(TensorShape(8U, 24U, 4U), 1, DataType::F32), TensorInfo(TensorShape(192U, 192U), 1, DataType::F32), TensorInfo(TensorShape(9U, 5U, 21U), 1, DataType::F32), })), framework::dataset::make(&quot;Expected&quot;, { true, true, false, false })), input_info, output_info, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#ae9a599036cbe43ea19a36c05257d5f87',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(zip(zip(zip(zip(framework::dataset::make(&quot;InputInfo&quot;, { TensorInfo(TensorShape(27U, 13U), 1, DataType::U8), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U), 1, DataType::F32), }), framework::dataset::make(&quot;WeightsInfo&quot;, { TensorInfo(TensorShape(27U, 11U), 1, DataType::F32), TensorInfo(TensorShape(27U, 11U), 1, DataType::F32), TensorInfo(TensorShape(27U, 11U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 11U), 1, DataType::F32), TensorInfo(TensorShape(27U, 11U), 1, DataType::F32), TensorInfo(TensorShape(27U, 11U), 1, DataType::F32), TensorInfo(TensorShape(27U, 11U), 1, DataType::F32), })), framework::dataset::make(&quot;RecurrentWeightsInfo&quot;, { TensorInfo(TensorShape(11U, 11U), 1, DataType::F32), TensorInfo(TensorShape(11U, 11U), 1, DataType::F32), TensorInfo(TensorShape(11U, 11U), 1, DataType::F32), TensorInfo(TensorShape(25U, 11U, 2U), 1, DataType::F32), TensorInfo(TensorShape(11U, 11U), 1, DataType::F32), TensorInfo(TensorShape(11U, 11U), 1, DataType::F32), TensorInfo(TensorShape(11U, 11U), 1, DataType::F32), })), framework::dataset::make(&quot;BiasInfo&quot;, { TensorInfo(TensorShape(11U), 1, DataType::F32), TensorInfo(TensorShape(11U), 1, DataType::F32), TensorInfo(TensorShape(11U), 1, DataType::F32), TensorInfo(TensorShape(11U), 1, DataType::F32), TensorInfo(TensorShape(30U), 1, DataType::F32), TensorInfo(TensorShape(11U), 1, DataType::F32), TensorInfo(TensorShape(11U), 1, DataType::F32), })), framework::dataset::make(&quot;OutputInfo&quot;, { TensorInfo(TensorShape(11U, 13U), 1, DataType::F32), TensorInfo(TensorShape(11U, 13U), 1, DataType::F32), TensorInfo(TensorShape(11U, 13U), 1, DataType::F32), TensorInfo(TensorShape(11U, 13U), 1, DataType::F32), TensorInfo(TensorShape(11U, 13U), 1, DataType::F32), TensorInfo(TensorShape(11U), 1, DataType::F32), TensorInfo(TensorShape(11U, 13U), 1, DataType::F32), })), framework::dataset::make(&quot;HiddenStateInfo&quot;, { TensorInfo(TensorShape(11U, 13U), 1, DataType::F32), TensorInfo(TensorShape(11U, 13U), 1, DataType::F32), TensorInfo(TensorShape(11U, 13U), 1, DataType::F32), TensorInfo(TensorShape(11U, 13U), 1, DataType::F32), TensorInfo(TensorShape(11U, 13U), 1, DataType::F32), TensorInfo(TensorShape(11U, 13U), 1, DataType::F32), TensorInfo(TensorShape(11U, 13U, 2U), 1, DataType::F32), })), framework::dataset::make(&quot;ActivationInfo&quot;, { ActivationLayerInfo(ActivationLayerInfo::ActivationFunction::RELU), ActivationLayerInfo(ActivationLayerInfo::ActivationFunction::RELU), ActivationLayerInfo(ActivationLayerInfo::ActivationFunction::RELU), ActivationLayerInfo(ActivationLayerInfo::ActivationFunction::RELU), ActivationLayerInfo(ActivationLayerInfo::ActivationFunction::RELU), ActivationLayerInfo(ActivationLayerInfo::ActivationFunction::RELU), ActivationLayerInfo(ActivationLayerInfo::ActivationFunction::RELU), })), framework::dataset::make(&quot;Expected&quot;, { false, false, false, false, false, false, false })), input_info, weights_info, recurrent_weights_info, bias_info, output_info, hidden_output_info, info, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#ab1a7b6a03b15da9425ba83e29e8743ad',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(zip(framework::dataset::make(&quot;InputInfo&quot;, { TensorInfo(TensorShape(250U, 128U, 3U), 1, DataType::F32), TensorInfo(TensorShape(250U, 128U, 3U), 1, DataType::F32), TensorInfo(TensorShape(250U, 128U, 3U), 1, DataType::F32), TensorInfo(TensorShape(250U, 128U, 2U), 1, DataType::F32), TensorInfo(TensorShape(250U, 128U, 2U), 1, DataType::F32), TensorInfo(TensorShape(250U, 128U, 3U), 1, DataType::F32), TensorInfo(TensorShape(250U, 128U, 2U), 1, DataType::F32), }), framework::dataset::make(&quot;RoisInfo&quot;, { TensorInfo(TensorShape(5, 3U), 1, DataType::F32), TensorInfo(TensorShape(5, 3U), 1, DataType::F16), TensorInfo(TensorShape(5, 3U), 1, DataType::F32), TensorInfo(TensorShape(5, 4U), 1, DataType::F32), TensorInfo(TensorShape(5, 10U), 1, DataType::F32), TensorInfo(TensorShape(4, 3U), 1, DataType::F32), TensorInfo(TensorShape(5, 4U), 1, DataType::F32), })), framework::dataset::make(&quot;OutputInfo&quot;,{ TensorInfo(TensorShape(7U, 7U, 3U, 3U), 1, DataType::F32), TensorInfo(TensorShape(7U, 7U, 3U, 3U), 1, DataType::F32), TensorInfo(TensorShape(7U, 7U, 3U, 3U), 1, DataType::F16), TensorInfo(TensorShape(7U, 7U, 4U, 3U), 1, DataType::F32), TensorInfo(TensorShape(7U, 7U, 2U, 3U), 1, DataType::F32), TensorInfo(TensorShape(7U, 7U, 3U, 3U), 1, DataType::F32), TensorInfo(TensorShape(5U, 5U, 2U, 4U), 1, DataType::F32), })), framework::dataset::make(&quot;PoolInfo&quot;, { ROIPoolingLayerInfo(7U, 7U, 1./8), ROIPoolingLayerInfo(7U, 7U, 1./8), ROIPoolingLayerInfo(7U, 7U, 1./8), ROIPoolingLayerInfo(7U, 7U, 1./8), ROIPoolingLayerInfo(7U, 7U, 1./8), ROIPoolingLayerInfo(7U, 7U, 1./8), ROIPoolingLayerInfo(7U, 7U, 1./8), })), framework::dataset::make(&quot;Expected&quot;, { true, false, false, false, false, false, false })), input_info, rois_info, output_info, pool_info, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a7e5b7cad90ebb803b5134d7577b34bc1',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(zip(framework::dataset::make(&quot;InputInfo&quot;,{ TensorInfo(TensorShape(28U, 32U, 2U), 1, DataType::F16), TensorInfo(TensorShape(28U, 32U, 2U), 1, DataType::F32), TensorInfo(TensorShape(36U, 36U, 2U, 4U), 1, DataType::U8), TensorInfo(TensorShape(40U, 35U, 2U, 4U), 1, DataType::S16), TensorInfo(TensorShape(37U, 37U, 2U), 1, DataType::F32), TensorInfo(TensorShape(37U, 37U, 3U, 4U), 1, DataType::F32), TensorInfo(TensorShape(28U, 33U, 2U), 1, DataType::F32), }), framework::dataset::make(&quot;OutputInfo&quot;,{ TensorInfo(TensorShape(32U, 68U, 2U), 1, DataType::F16), TensorInfo(TensorShape(40U, 56U, 2U), 1, DataType::F32), TensorInfo(TensorShape(40U, 76U, 2U, 4U), 1, DataType::U8), TensorInfo(TensorShape(28U, 32U, 2U, 4U), 1, DataType::S16), TensorInfo(TensorShape(39U, 55U, 2U), 1, DataType::F32), TensorInfo(TensorShape(39U, 77U, 3U, 4U), 1, DataType::F16), TensorInfo(TensorShape(26U, 21U, 2U), 1, DataType::F32), })), framework::dataset::make(&quot;Policy&quot;,{ InterpolationPolicy::BILINEAR, InterpolationPolicy::BILINEAR, InterpolationPolicy::NEAREST_NEIGHBOR, InterpolationPolicy::NEAREST_NEIGHBOR, InterpolationPolicy::NEAREST_NEIGHBOR, InterpolationPolicy::BILINEAR, InterpolationPolicy::AREA, })), framework::dataset::make(&quot;BorderMode&quot;,{ BorderMode::UNDEFINED, BorderMode::UNDEFINED, BorderMode::UNDEFINED, BorderMode::UNDEFINED, BorderMode::UNDEFINED, BorderMode::UNDEFINED, BorderMode::UNDEFINED, })), framework::dataset::make(&quot;Expected&quot;, { true, true, true, true, false, false, false })), input_info, output_info, policy, border_mode, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#abddf84b23fdba6315be03f17307b0e14',1,'arm_compute::test::validation::DATA_TEST_CASE(Configuration, framework::DatasetMode::ALL, combine(combine(combine(combine(concat(datasets::MediumShapes(), datasets::LargeShapes()), ScaleDataTypes), framework::dataset::make(&quot;InterpolationPolicy&quot;, { InterpolationPolicy::NEAREST_NEIGHBOR, InterpolationPolicy::BILINEAR })), datasets::BorderModes()), datasets::SamplingPolicies()), shape, data_type, policy, border_mode, sampling_policy)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#aaa465d22edcd658d50ade39d52334aa3',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(framework::dataset::make(&quot;InputInfo&quot;, { TensorInfo(TensorShape(27U, 3U, 2U, 5U, 3U), 1, DataType::F32), TensorInfo(TensorShape(27U, 3U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 3U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 3U, 2U), 1, DataType::F32) }), framework::dataset::make(&quot;Starts&quot;, { Coordinates(3, 1, 0), Coordinates(-3, 1, 0), Coordinates(3, 1, 0), Coordinates(3, 1, 0) })), framework::dataset::make(&quot;Ends&quot;, { Coordinates(13, 3, 0), Coordinates(13, 3, 1), Coordinates(13, 3, 1, 1), Coordinates(13, 3, 1) })), framework::dataset::make(&quot;Expected&quot;, { false, false, false, true })), input_info, starts, ends, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a771a5631851d0b049d2c941a4f22ecd5',1,'arm_compute::test::validation::DATA_TEST_CASE(Configuration, framework::DatasetMode::ALL, combine(arm_compute::test::datasets::SmallSliceDataset(), framework::dataset::make(&quot;DataType&quot;, { DataType::F16, DataType::F32 })), shape, starts, ends, data_type)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a824b5a8e3c4e7db5fb9e67ebae18e396',1,'arm_compute::test::validation::DATA_TEST_CASE(Configuration, framework::DatasetMode::ALL, combine(concat(datasets::SoftmaxLayerSmallShapes(), datasets::SoftmaxLayerLargeShapes()), CNNDataTypes), shape, data_type)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#aa43a1389ad43d3659384478c104f81e4',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(framework::dataset::make(&quot;InputInfo&quot;, { TensorInfo(TensorShape(27U, 13U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U), 1, DataType::QASYMM8, QuantizationInfo(1.f/256, 12)), TensorInfo(TensorShape(27U, 13U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U), 1, DataType::QASYMM8, QuantizationInfo(1.f/256, 12)), }), framework::dataset::make(&quot;OutputInfo&quot;,{ TensorInfo(TensorShape(27U, 13U), 1, DataType::F16), TensorInfo(TensorShape(27U, 11U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U), 1, DataType::QASYMM8, QuantizationInfo(1.f/256, 12)), TensorInfo(TensorShape(27U, 13U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U), 1, DataType::QASYMM8, QuantizationInfo(1.f/256, 0)), })), framework::dataset::make(&quot;Expected&quot;, { false, false, false, false, false, true, true })), input_info, output_info, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#aa4e6afca4acace0df44e4dbdbbb6b64a',1,'arm_compute::test::validation::DATA_TEST_CASE(Configuration, framework::DatasetMode::ALL, combine(datasets::SmallSpaceToBatchLayerDataset(), framework::dataset::make(&quot;DataType&quot;, { DataType::F16, DataType::F32 })), input_shape, block_shape_shape, paddings_shape, output_shape, dt)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a0678383baafa372656f23d66712fe5af',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(zip(framework::dataset::make(&quot;InputInfo&quot;, { TensorInfo(TensorShape(32U, 13U, 2U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U, 2U, 4U), 1, DataType::F32), }), framework::dataset::make(&quot;BlockShapeInfo&quot;,{ TensorInfo(TensorShape(2U, 2U), 1, DataType::S32), TensorInfo(TensorShape(2U, 2U), 1, DataType::S32), TensorInfo(TensorShape(2U, 2U), 1, DataType::F16), TensorInfo(TensorShape(2U, 2U), 1, DataType::S32), })), framework::dataset::make(&quot;PaddingsShapeInfo&quot;,{ TensorInfo(TensorShape(2U, 2U), 1, DataType::S32), TensorInfo(TensorShape(2U, 2U), 1, DataType::S32), TensorInfo(TensorShape(2U, 2U), 1, DataType::F16), TensorInfo(TensorShape(2U, 2U), 1, DataType::S32), })), framework::dataset::make(&quot;OutputInfo&quot;,{ TensorInfo(TensorShape(32U, 13U, 2U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U, 2U), 1, DataType::F16), TensorInfo(TensorShape(32U, 13U, 2U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U, 2U), 1, DataType::F32), })), framework::dataset::make(&quot;Expected&quot;, { true, false, false, false})), input_info, block_shape_info, paddings_info, output_info, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a9f596a5c3403238c30607e64d9fbb3d1',1,'arm_compute::test::validation::DATA_TEST_CASE(ValidateStatic, framework::DatasetMode::ALL, zip(zip(zip(zip(zip(zip(framework::dataset::make(&quot;InputInfo&quot;, { TensorInfo(TensorShape(32U, 16U, 2U, 1U), 1, DataType::F32), TensorInfo(TensorShape(32U, 16U, 2U, 1U), 1, DataType::F32), TensorInfo(TensorShape(32U, 16U, 2U, 1U), 1, DataType::F32), TensorInfo(TensorShape(32U, 16U, 2U, 1U, 4U), 1, DataType::F32), TensorInfo(TensorShape(32U, 16U, 2U, 1U, 4U), 1, DataType::F32), }), framework::dataset::make(&quot;BlockShapeX&quot;, { 2, 2, 2, 2, 2 })), framework::dataset::make(&quot;BlockShapeY&quot;, { 2, 2, -2, 2, 2 })), framework::dataset::make(&quot;PadLeft&quot;, { Size2D(0, 0), Size2D(0, 0), Size2D(0, 0), Size2D(0, 0), Size2D(3, 11) })), framework::dataset::make(&quot;PadRight&quot;, { Size2D(0, 0), Size2D(0, 0), Size2D(0, 0), Size2D(0, 0), Size2D(3, 11) })), framework::dataset::make(&quot;OutputInfo&quot;,{ TensorInfo(TensorShape(16U, 8U, 2U, 4U), 1, DataType::F32), TensorInfo(TensorShape(32U, 8U, 2U, 4U), 1, DataType::F16), TensorInfo(TensorShape(32U, 8U, 2U, 4U), 1, DataType::F32), TensorInfo(TensorShape(32U, 8U, 2U, 4U), 1, DataType::F32), TensorInfo(TensorShape(32U, 8U, 2U, 4U), 1, DataType::F32), })), framework::dataset::make(&quot;Expected&quot;, { true, false, false, false, false})), input_info, block_shape_x, block_shape_y, padding_left, padding_right, output_info, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a49277b316cc621ed0e9fd829cbc21077',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(framework::dataset::make(&quot;InputInfo&quot;, { TensorInfo(TensorShape(27U, 3U, 16U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 3U, 16U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 3U, 16U, 2U), 1, DataType::F32) }), framework::dataset::make(&quot;Axis&quot;, { 4, 2, 2 })), framework::dataset::make(&quot;Splits&quot;, { 4, 5, 4 })), framework::dataset::make(&quot;Expected&quot;, { false, false, true })), input_info, axis, splits, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a1ed1389e2305dbba938bf6b9b95b0e3a',1,'arm_compute::test::validation::DATA_TEST_CASE(Configuration, framework::DatasetMode::ALL, combine(datasets::SmallSplitDataset(), framework::dataset::make(&quot;DataType&quot;, { DataType::F16, DataType::F32 })), shape, axis, splits, data_type)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#aea9ce98d4af597ef7dfed976563a53dd',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(zip(framework::dataset::make(&quot;InputInfo&quot;, { TensorInfo(TensorShape(27U, 3U, 2U, 5U, 3U), 1, DataType::F32), TensorInfo(TensorShape(27U, 3U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 3U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 3U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 3U, 2U), 1, DataType::F32) }), framework::dataset::make(&quot;Starts&quot;, { Coordinates(3, 1, 0), Coordinates(3, 1, 0), Coordinates(3, 1, 0), Coordinates(3, 1, 0), Coordinates(3, 1, 0) })), framework::dataset::make(&quot;Ends&quot;, { Coordinates(13, 3, 0), Coordinates(13, 3, 1), Coordinates(13, 3, 1, 1), Coordinates(13, -1, 1), Coordinates(13, 3, 1) })), framework::dataset::make(&quot;Strides&quot;, { BiStrides(2, 1, 1), BiStrides(2, 0, 1), BiStrides(2, 1, 1), BiStrides(2, -1, 1), BiStrides(2, 1, 1) })), framework::dataset::make(&quot;Expected&quot;, { false, false, false, false, true })), input_info, starts, ends, strides, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#af3e78a742ac6ca0a855fad18d4f3cdb3',1,'arm_compute::test::validation::DATA_TEST_CASE(Configuration, framework::DatasetMode::ALL, combine(arm_compute::test::datasets::SmallStridedSliceDataset(), framework::dataset::make(&quot;DataType&quot;, { DataType::F16, DataType::F32 })), shape, starts, ends, strides, begin_mask, end_mask, shrink_mask, data_type)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a68ac79ae9ec2d2d1941c30cb23c5124c',1,'arm_compute::test::validation::DATA_TEST_CASE(Configuration, framework::DatasetMode::ALL, combine(framework::dataset::concat(datasets::SmallShapes(), datasets::LargeShapes()), framework::dataset::make(&quot;DataType&quot;, { DataType::U8, DataType::S16 })), shape, data_type)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#ae7ddc226714d859ef20d3f5bafc55c38',1,'arm_compute::test::validation::DATA_TEST_CASE(Configuration, framework::DatasetMode::ALL, combine(combine(concat(datasets::SmallShapes(), datasets::LargeShapes()), datasets::MixedThresholdDataset()), framework::dataset::make(&quot;DataType&quot;, DataType::U8)), shape, threshold, false_value, true_value, type, upper, data_type)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a87d14ef9b0840f83d5e9451ea8e9f037',1,'arm_compute::test::validation::DATA_TEST_CASE(Configuration, framework::DatasetMode::ALL, combine(concat(datasets::Small2DShapes(), datasets::Large2DShapes()), framework::dataset::make(&quot;DataType&quot;, { DataType::S8, DataType::U8, DataType::S16, DataType::U16, DataType::U32, DataType::S32, DataType::F16, DataType::F32 })), shape, data_type)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#ad941eafe31aa908e4c39405990a6e148',1,'arm_compute::test::validation::DATA_TEST_CASE(Configuration, framework::DatasetMode::ALL,(combine(datasets::SmallShapes(), framework::dataset::make(&quot;DataType&quot;, DataType::F32))), input_shape, data_type)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a778b3df465ed2c9457feb9ea872f0ca9',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(zip(framework::dataset::make(&quot;InputInfo&quot;, { TensorInfo(TensorShape(10U, 10U, 2U), 1, DataType::F32), TensorInfo(TensorShape(10U, 10U, 2U), 1, DataType::F32), TensorInfo(TensorShape(10U, 10U, 2U), 1, DataType::F32), TensorInfo(TensorShape(10U, 10U, 2U), 1, DataType::F32), TensorInfo(TensorShape(10U, 10U, 2U), 1, DataType::F32), }), framework::dataset::make(&quot;OutputInfo&quot;,{ TensorInfo(TensorShape(20U, 20U, 2U), 1, DataType::F16), TensorInfo(TensorShape(20U, 10U, 2U), 1, DataType::F32), TensorInfo(TensorShape(20U, 20U, 2U), 1, DataType::F32), TensorInfo(TensorShape(20U, 20U, 2U), 1, DataType::F32), TensorInfo(TensorShape(20U, 20U, 2U), 1, DataType::F32), })), framework::dataset::make(&quot;PadInfo&quot;, { Size2D(2, 2), Size2D(2, 2), Size2D(1, 1), Size2D(2, 2), Size2D(2, 2), })), framework::dataset::make(&quot;UpsamplingPolicy&quot;, { InterpolationPolicy::NEAREST_NEIGHBOR, InterpolationPolicy::NEAREST_NEIGHBOR, InterpolationPolicy::NEAREST_NEIGHBOR, InterpolationPolicy::BILINEAR, InterpolationPolicy::NEAREST_NEIGHBOR, })), framework::dataset::make(&quot;Expected&quot;, { false, false, false, false, true })), input_info, output_info, pad_info, upsampling_policy, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a79f123bc8a8556c3147f80b968ba2d38',1,'arm_compute::test::validation::DATA_TEST_CASE(Configuration, framework::DatasetMode::ALL, combine(combine(combine(concat(datasets::SmallShapes(), datasets::LargeShapes()), framework::dataset::make(&quot;DataType&quot;, DataType::U8)), framework::dataset::make(&quot;InterpolationPolicy&quot;, { InterpolationPolicy::NEAREST_NEIGHBOR, InterpolationPolicy::BILINEAR })), datasets::BorderModes()), shape, data_type, policy, border_mode)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a93528474c38e7f0a40c7668b34e4c45a',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(framework::dataset::make(&quot;InputInfo&quot;, { TensorInfo(TensorShape(3U, 3U, 2U, 4U), 1, DataType::U8), TensorInfo(TensorShape(3U, 3U, 2U, 4U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 2U, 4U), 1, DataType::QASYMM8), TensorInfo(TensorShape(3U, 3U, 2U, 4U), 1, DataType::F32), }), framework::dataset::make(&quot;BiasesInfo&quot;, { TensorInfo(TensorShape(4U), 1, DataType::U8), TensorInfo(TensorShape(4U), 1, DataType::F16), TensorInfo(TensorShape(4U), 1, DataType::QASYMM8), TensorInfo(TensorShape(4U), 1, DataType::F32), })), framework::dataset::make(&quot;OutputInfo&quot;, { TensorInfo(TensorShape(4U, 19U), 1, DataType::U8), TensorInfo(TensorShape(4U, 19U), 1, DataType::F16), TensorInfo(TensorShape(4U, 19U), 1, DataType::QASYMM8), TensorInfo(TensorShape(4U, 19U), 1, DataType::F32), })), framework::dataset::make(&quot;Expected&quot;, { false, false, false, true })), input_info, biases_info, output_info, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a0806d3aa5c8a059553ad93b573e4b82c',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(framework::dataset::make(&quot;InputInfo1&quot;, { TensorInfo(TensorShape(23U, 27U, 5U), 1, DataType::F32), TensorInfo(TensorShape(23U, 27U, 5U), 1, DataType::F32), TensorInfo(TensorShape(23U, 27U, 5U), 1, DataType::F32), TensorInfo(TensorShape(16U, 27U, 5U), 1, DataType::F32) }), framework::dataset::make(&quot;InputInfo2&quot;, { TensorInfo(TensorShape(24U, 27U, 4U), 1, DataType::F32), TensorInfo(TensorShape(52U, 27U, 5U), 1, DataType::F32), TensorInfo(TensorShape(52U, 27U, 5U), 1, DataType::F32), TensorInfo(TensorShape(16U, 27U, 5U), 1, DataType::F32) })), framework::dataset::make(&quot;OutputInfo&quot;, { TensorInfo(TensorShape(47U, 27U, 5U), 1, DataType::F16), TensorInfo(TensorShape(75U, 12U, 5U), 1, DataType::F32), TensorInfo(TensorShape(11U, 27U, 5U), 1, DataType::F32), TensorInfo(TensorShape(32U, 27U, 5U), 1, DataType::F32) })), framework::dataset::make(&quot;Expected&quot;, { false, false, false, true })), input_info1, input_info2, output_info, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#aefe657be35a4c7ad0cd478735e9ced36',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(framework::dataset::make(&quot;InputInfo&quot;,{ TensorInfo(TensorShape(53U, 21U, 5U, 3U), 1, DataType::F16), TensorInfo(TensorShape(53U, 21U, 5U, 3U), 1, DataType::QASYMM8), TensorInfo(TensorShape(53U, 21U, 5U, 3U), 1, DataType::F32), TensorInfo(TensorShape(53U, 21U, 5U, 3U), 1, DataType::F32), TensorInfo(TensorShape(53U, 33U, 4U), 1, DataType::F32), TensorInfo(TensorShape(34U, 42U, 7U, 3U), 1, DataType::F32), TensorInfo(TensorShape(31U, 37U, 37U), 1, DataType::F32) }), framework::dataset::make(&quot;OutputInfo&quot;, { TensorInfo(TensorShape(5U, 5U, 16U, 3U), 1, DataType::F16), TensorInfo(TensorShape(5U, 5U, 16U, 3U), 1, DataType::QASYMM8), TensorInfo(TensorShape(5U, 5U, 16U, 3U), 1, DataType::F32), TensorInfo(TensorShape(5U, 1U, 16U, 3U), 1, DataType::F32), TensorInfo(TensorShape(4U, 442U, 16U), 1, DataType::F32), TensorInfo(TensorShape(7U, 320U, 16U, 3U), 1, DataType::F32), TensorInfo(TensorShape(37U, 304U, 16U), 1, DataType::F32) })), framework::dataset::make(&quot;WinogradInfo&quot;, { WinogradInfo(Size2D(2, 2), Size2D(3, 3), Size2D(53U, 21U), PadStrideInfo(1, 1, 1, 0), DataLayout::NCHW), WinogradInfo(Size2D(2, 2), Size2D(3, 3), Size2D(53U, 21U), PadStrideInfo(1, 1, 0, 0), DataLayout::NCHW), WinogradInfo(Size2D(2, 2), Size2D(3, 3), Size2D(53U, 21U), PadStrideInfo(1, 1, 1, 1), DataLayout::NCHW), WinogradInfo(Size2D(2, 2), Size2D(3, 3), Size2D(53U, 21U), PadStrideInfo(2, 1, 1, 1), DataLayout::NCHW), WinogradInfo(Size2D(2, 2), Size2D(3, 3), Size2D(53U, 33U), PadStrideInfo(1, 1, 0, 1), DataLayout::NCHW), WinogradInfo(Size2D(2, 2), Size2D(3, 3), Size2D(34U, 42U), PadStrideInfo(1, 1, 0, 0), DataLayout::NCHW), WinogradInfo(Size2D(2, 2), Size2D(3, 3), Size2D(31U, 37U), PadStrideInfo(1, 1, 1, 1), DataLayout::NCHW) })), framework::dataset::make(&quot;Expected&quot;, { false, false, false, false, false, false, false })), input_info, output_info, winograd_info, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a55409bde5927424cc29466f6c088a33a',1,'arm_compute::test::validation::DATA_TEST_CASE(Configuration, framework::DatasetMode::ALL, combine(combine(framework::dataset::concat(SmallWinogradInputTransformDatasetNCHW, LargeWinogradInputTransformDatasetNCHW), framework::dataset::make(&quot;DataLayout&quot;, { DataLayout::NCHW })), framework::dataset::make(&quot;DataType&quot;, { DataType::F32, DataType::F16 })), shape_in, winograd_info, data_layout, data_type)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a6d5502c66cceb459f5e78210c455bbdf',1,'arm_compute::test::validation::DATA_TEST_CASE(Configuration, framework::DatasetMode::ALL, combine(combine(framework::dataset::concat(SmallWinogradFilterTransformDatasetNCHW, LargeWinogradFilterTransformDatasetNCHW), framework::dataset::make(&quot;DataLayout&quot;, { DataLayout::NCHW })), framework::dataset::make(&quot;DataType&quot;, { DataType::F32, DataType::F16 })), shape_a, output_tile, data_layout, data_type)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a31ec28b5ef4440724706cde4709bef0b',1,'arm_compute::test::validation::DATA_TEST_CASE(Configuration, framework::DatasetMode::ALL, combine(framework::dataset::concat(SmallWinogradOutputTransformDatasetNCHW, LargeWinogradOutputTransformDatasetNCHW), framework::dataset::make(&quot;DataType&quot;, { DataType::F32, DataType::F16 })), shape_a, winograd_info, data_type)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a72aab74351767515bdc1e6cc4d2bf516',1,'arm_compute::test::validation::DATA_TEST_CASE(Configuration, framework::DatasetMode::ALL, combine(combine(combine(datasets::RandomBatchNormalizationLayerDataset(), combine(framework::dataset::make(&quot;UseBeta&quot;, { false, true }), framework::dataset::make(&quot;UseGamma&quot;, { false, true }))), framework::dataset::make(&quot;DataType&quot;, { DataType::F32 })), framework::dataset::make(&quot;DataLayout&quot;, { DataLayout::NCHW })), shape0, shape1, epsilon, use_beta, use_gamma, dt, data_layout)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#ac4104fbe4e32e1f40aef2ef215385cfc',1,'arm_compute::test::validation::DATA_TEST_CASE(Configuration, framework::DatasetMode::ALL, combine(combine(framework::dataset::concat(datasets::SmallConvolutionLayerReducedDataset(), datasets::LargeConvolutionLayerDataset()), CNNDataTypes), ActivationFunctionsDataset), input_shape, weights_shape, bias_shape, output_shape, info, dilation, data_type, act_info)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a752981762f5617f513d6f1aaf41c1380',1,'arm_compute::test::validation::DATA_TEST_CASE(Configuration, framework::DatasetMode::ALL, combine(framework::dataset::concat(datasets::SmallGEMMDataset(), datasets::LargeGEMMDataset()), CNNDataTypes), shape_a, shape_b, shape_c, output_shape, alpha, beta, data_type)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a539c8825b54233673d99ba188a6bcc49',1,'arm_compute::test::validation::DATA_TEST_CASE(Configuration, framework::DatasetMode::ALL, combine(datasets::RandomNormalizePlanarYUVLayerDataset(), framework::dataset::make(&quot;DataType&quot;, { DataType::F16 })), shape0, shape1, dt)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a7a6be9a28cd340cd10813b2be8d1a6ef',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(framework::dataset::make(&quot;InputInfo&quot;, { TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F16), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F16), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(32U, 16U, 8U), 1, DataType::F16), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F16), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F16), }), framework::dataset::make(&quot;OutputInfo&quot;,{ TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F16), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(32U, 16U, 8U), 1, DataType::F16), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F16), TensorInfo(TensorShape(30U, 11U, 2U), 1, DataType::F16), })), framework::dataset::make(&quot;MSTDInfo&quot;,{ TensorInfo(TensorShape(2U), 1, DataType::F16), TensorInfo(TensorShape(2U), 1, DataType::F16), TensorInfo(TensorShape(2U), 1, DataType::U8), TensorInfo(TensorShape(8U), 1, DataType::F16), TensorInfo(TensorShape(6U), 1, DataType::F16), TensorInfo(TensorShape(2U), 1, DataType::F16), })), framework::dataset::make(&quot;Expected&quot;, { false, false, false, true, false, false })), input_info, output_info, msd_info, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#ae904c8bf0b18987aa7ed5dba0d3c60d8',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(framework::dataset::make(&quot;InputInfo&quot;, { TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(15U, 13U, 5U), 1, DataType::F32), TensorInfo(TensorShape(13U, 13U, 5U), 1, DataType::F32), TensorInfo(TensorShape(13U, 13U, 5U), 1, DataType::F32), }), framework::dataset::make(&quot;OutputInfo&quot;, { TensorInfo(TensorShape(25U, 11U, 2U), 1, DataType::F16), TensorInfo(TensorShape(25U, 11U, 2U), 1, DataType::F32), TensorInfo(TensorShape(30U, 11U, 2U), 1, DataType::F32), TensorInfo(TensorShape(25U, 16U, 2U), 1, DataType::F32), TensorInfo(TensorShape(1U, 1U, 5U), 1, DataType::F32), TensorInfo(TensorShape(2U, 2U, 5U), 1, DataType::F32), TensorInfo(TensorShape(1U, 1U, 5U), 1, DataType::F32), })), framework::dataset::make(&quot;PoolInfo&quot;, { PoolingLayerInfo(PoolingType::AVG, 3, PadStrideInfo(1, 1, 0, 0)), PoolingLayerInfo(PoolingType::AVG, 3, PadStrideInfo(1, 1, 0, 0)), PoolingLayerInfo(PoolingType::AVG, 3, PadStrideInfo(1, 1, 0, 0)), PoolingLayerInfo(PoolingType::AVG, 3, PadStrideInfo(1, 1, 0, 0)), PoolingLayerInfo(PoolingType::AVG, 2, PadStrideInfo(1, 1, 2, 0)), PoolingLayerInfo(PoolingType::AVG, 2, PadStrideInfo(1, 1, 0, 2)), PoolingLayerInfo(PoolingType::L2, 3, PadStrideInfo(1, 1, 0, 0)), PoolingLayerInfo(PoolingType::AVG), PoolingLayerInfo(PoolingType::MAX), PoolingLayerInfo(PoolingType::AVG), })), framework::dataset::make(&quot;Expected&quot;, { false, false, false, false, false, false, false, false, false, true })), input_info, output_info, pool_info, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a21aee323ab2c48634afcdaa5d1d87901',1,'arm_compute::test::validation::DATA_TEST_CASE(Configuration, framework::DatasetMode::ALL, combine(combine(combine(combine(concat(datasets::MediumShapes(), datasets::LargeShapes()), ScaleDataTypes), framework::dataset::make(&quot;InterpolationPolicy&quot;, { InterpolationPolicy::NEAREST_NEIGHBOR })), datasets::BorderModes()), datasets::SamplingPolicies()), shape, data_type, policy, border_mode, sampling_policy)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a9e109b3ab75f2113c4158b7187f899c4',1,'arm_compute::test::validation::DATA_TEST_CASE(Configuration, framework::DatasetMode::ALL, combine(concat(datasets::Small2DShapes(), datasets::Large2DShapes()), framework::dataset::make(&quot;DataType&quot;, { DataType::F16, DataType::F32 })), shape, data_type)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a8cf9c539b52f835653e100d3f309856e',1,'arm_compute::test::validation::DATA_TEST_CASE(Configuration, framework::DatasetMode::ALL, combine(framework::dataset::concat(datasets::SmallShapes(), datasets::LargeShapes()), AbsoluteDifferenceS16Dataset), shape, data_type0, data_type1, output_data_type)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a29fea97db54d4560d46d8752ec59eb07',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(framework::dataset::make(&quot;InputInfo&quot;, { TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), }), framework::dataset::make(&quot;OutputInfo&quot;,{ TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F16), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), })), framework::dataset::make(&quot;ActivationInfo&quot;, { ActivationLayerInfo(ActivationLayerInfo::ActivationFunction::RELU), ActivationLayerInfo(ActivationLayerInfo::ActivationFunction::RELU), ActivationLayerInfo(ActivationLayerInfo::ActivationFunction::RELU), })), framework::dataset::make(&quot;Expected&quot;, { false, true, false})), input_info, output_info, act_info, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#ae27f97a73d36293a94307d382e27c9b6',1,'arm_compute::test::validation::DATA_TEST_CASE(Configuration, framework::DatasetMode::ALL, combine(combine(combine(datasets::RandomBatchNormalizationLayerDataset(), combine(framework::dataset::make(&quot;UseBeta&quot;, { false, true }), framework::dataset::make(&quot;UseGamma&quot;, { false, true }))), framework::dataset::make(&quot;DataType&quot;, { DataType::F32 })), framework::dataset::make(&quot;DataLayout&quot;, { DataLayout::NCHW, DataLayout::NHWC })), shape0, shape1, epsilon, use_beta, use_gamma, dt, data_layout)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#ab62d37f727e4d9bcafb222b2d203acf8',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(zip(framework::dataset::make(&quot;InputInfo&quot;, { TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), }), framework::dataset::make(&quot;OutputInfo&quot;,{ TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F16), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), })), framework::dataset::make(&quot;MVBGInfo&quot;,{ TensorInfo(TensorShape(2U), 1, DataType::F32), TensorInfo(TensorShape(2U), 1, DataType::F32), TensorInfo(TensorShape(2U), 1, DataType::F16), TensorInfo(TensorShape(2U), 1, DataType::F32), TensorInfo(TensorShape(5U), 1, DataType::F32), TensorInfo(TensorShape(2U), 1, DataType::F32), })), framework::dataset::make(&quot;ActivationLayerInfo&quot;,{ ActivationLayerInfo(ActivationLayerInfo::ActivationFunction::RELU), ActivationLayerInfo(ActivationLayerInfo::ActivationFunction::RELU), ActivationLayerInfo(ActivationLayerInfo::ActivationFunction::BOUNDED_RELU, 6.f), ActivationLayerInfo(ActivationLayerInfo::ActivationFunction::BOUNDED_RELU, 6.f), ActivationLayerInfo(ActivationLayerInfo::ActivationFunction::LU_BOUNDED_RELU, 6.f), ActivationLayerInfo(ActivationLayerInfo::ActivationFunction::LU_BOUNDED_RELU, 2.f, 6.f), })), framework::dataset::make(&quot;Expected&quot;, { true, false, false, false, false, false})), input_info, output_info, mvbg_info, act_info, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a62d4f856c1a8891d8461f191eed5bd9d',1,'arm_compute::test::validation::DATA_TEST_CASE(Configuration, framework::DatasetMode::ALL, combine(datasets::SmallRandomChannelShuffleLayerDataset(), framework::dataset::make(&quot;DataType&quot;, { DataType::S8, DataType::U8, DataType::S16, DataType::U16, DataType::U32, DataType::S32, DataType::F32 })), shape, num_groups, data_type)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a6febcfe6c8584f2def828a3cd49d1531',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(zip(framework::dataset::make(&quot;InputInfo&quot;, { TensorInfo(TensorShape(10U, 12U, 1U, 2U), 1, DataType::S64), TensorInfo(TensorShape(10U, 12U, 1U, 2U), 1, DataType::F32), TensorInfo(TensorShape(10U, 12U, 1U, 2U), 1, DataType::F32), TensorInfo(TensorShape(10U, 12U, 1U, 2U), 1, DataType::F32), }), framework::dataset::make(&quot;OutputInfo&quot;,{ TensorInfo(TensorShape(3U, 4U, 10U, 2U), 1, DataType::F16), TensorInfo(TensorShape(3U, 4U, 10U, 2U), 1, DataType::F16), TensorInfo(TensorShape(3U, 3U, 10U, 2U), 1, DataType::F32), TensorInfo(TensorShape(3U, 4U, 10U, 2U), 1, DataType::F32), })), framework::dataset::make(&quot;ConvolvedWidth&quot;, { 3, 3, 3, 3, 3 })), framework::dataset::make(&quot;ConvolvedHeight&quot;, { 4, 4, 4, 4, 4 })), framework::dataset::make(&quot;Expected&quot;, { false, false, false, true })), input_info, output_info, convolved_width, convolved_height, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#aa8b8b22086f107a6db937157bbaa9647',1,'arm_compute::test::validation::DATA_TEST_CASE(YUV, framework::DatasetMode::ALL, combine(concat(datasets::Small2DShapes(), datasets::Large2DShapes()), ColorConvert_YUYVDataset_to_RGBDataset), shape, src_format, dst_format)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a53950503f84613370c1874e9ec36f738',1,'arm_compute::test::validation::DATA_TEST_CASE(ValidateConvolutionMethod, framework::DatasetMode::ALL, zip(zip(zip(zip(zip(framework::dataset::make(&quot;InputInfo&quot;, { TensorInfo(TensorShape(18U, 18U, 32U), 1, DataType::F32), TensorInfo(TensorShape(23U, 27U, 32U, 4U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 2U, 1U), 1, DataType::F32), TensorInfo(TensorShape(33U, 27U, 7U, 4U), 1, DataType::F32) }), framework::dataset::make(&quot;WeightsInfo&quot;, { TensorInfo(TensorShape(3U, 3U, 32U, 21U), 1, DataType::F32), TensorInfo(TensorShape(5U, 5U, 32U, 21U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 5U, 21U), 1, DataType::F32), TensorInfo(TensorShape(5U, 5U, 7U, 16U), 1, DataType::F16) })), framework::dataset::make(&quot;OutputInfo&quot;, { TensorInfo(TensorShape(16U, 16U, 21U), 1, DataType::F32), TensorInfo(TensorShape(19U, 23U, 21U, 4U), 1, DataType::F32), TensorInfo(TensorShape(11U, 25U, 21U), 1, DataType::F32), TensorInfo(TensorShape(11U, 12U, 16U, 4U), 1, DataType::F32) })), framework::dataset::make(&quot;ConvInfo&quot;, { PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 0, 0), PadStrideInfo(2, 1, 0, 0), PadStrideInfo(3, 2, 1, 0) })), framework::dataset::make(&quot;FastMath&quot;, { true, true, false, false })), framework::dataset::make(&quot;Expected&quot;, { ConvolutionMethod::WINOGRAD, ConvolutionMethod::WINOGRAD, ConvolutionMethod::GEMM, ConvolutionMethod::GEMM })), input_info, weights_info, output_info, conv_info, fast_math, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#abb65b429d8bb356a6aea3a366ef56e3a',1,'arm_compute::test::validation::DATA_TEST_CASE(Configuration, framework::DatasetMode::ALL, combine(combine(framework::dataset::concat(datasets::SmallConvolutionLayerDataset(), datasets::LargeConvolutionLayerDataset()), CNNDataTypes), framework::dataset::make(&quot;ActivationInfo&quot;, { ActivationLayerInfo(ActivationLayerInfo::ActivationFunction::RELU) })), input_shape, weights_shape, bias_shape, output_shape, info, dilation, data_type, act_info)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#ab44b66bad182905ba55f96ee494e8e73',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(framework::dataset::make(&quot;InputInfo&quot;, { TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::U8), }), framework::dataset::make(&quot;OutputInfo&quot;,{ TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::S16), TensorInfo(TensorShape(32U, 11U, 2U), 1, DataType::U8), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::U8), })), framework::dataset::make(&quot;Expected&quot;, { false, false, true})), input_info, output_info, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a9e5db1c898c389b185d215fbced2715a',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(zip(zip(zip(zip(framework::dataset::make(&quot;InputInfo&quot;, { TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F16), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(13U, 11U, 4U, 3U), 1, DataType::F32), TensorInfo(TensorShape(32U, 16U, 2U), 1, DataType::F32), }), framework::dataset::make(&quot;WeightsInfo&quot;, { TensorInfo(TensorShape(3U, 3U, 2U, 2U), 1, DataType::F16), TensorInfo(TensorShape(3U, 3U, 2U, 4U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 2U, 2U), 1, DataType::F16), TensorInfo(TensorShape(3U, 2U, 2U, 2U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 4U), 1, DataType::F32), TensorInfo(TensorShape(1U, 1U, 2U, 4U), 1, DataType::F32), })), framework::dataset::make(&quot;BiasInfo&quot;, { TensorInfo(TensorShape(1U), 1, DataType::F16), TensorInfo(TensorShape(1U), 1, DataType::F32), TensorInfo(TensorShape(1U), 1, DataType::F32), TensorInfo(TensorShape(25U, 11U), 1, DataType::F32), TensorInfo(TensorShape(1U), 1, DataType::F32), TensorInfo(TensorShape(4U), 1, DataType::F32), })), framework::dataset::make(&quot;OutputInfo&quot;,{ TensorInfo(TensorShape(25U, 11U, 2U), 1, DataType::F16), TensorInfo(TensorShape(25U, 10U, 2U), 1, DataType::F32), TensorInfo(TensorShape(25U, 11U, 2U), 1, DataType::F32), TensorInfo(TensorShape(13U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(11U, 9U, 1U, 3U), 1, DataType::F32), TensorInfo(TensorShape(32U, 16U, 4U), 1, DataType::F32), })), framework::dataset::make(&quot;PadStrideInfo&quot;, { PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 1, 1), PadStrideInfo(1, 1, 0, 0), })), framework::dataset::make(&quot;ax&quot;, { 1U, 1U, 1U, 1U, 0U, 0U, })), framework::dataset::make(&quot;ay&quot;, { 1U, 1U, 1U, 1U, 0U, 0U, })), framework::dataset::make(&quot;Expected&quot;, { false, false, false, false, false, true })), input_info, weights_info, bias_info, output_info, pad_info, ax, ay, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#ab9e741db901f2d726ab636eeb1439437',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate3x3, framework::DatasetMode::ALL, zip(zip(zip(zip(zip(zip(framework::dataset::make(&quot;InputInfo&quot;, { TensorInfo(TensorShape(32U, 18U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 18U, 3U), 1, DataType::F32), TensorInfo(TensorShape(32U, 18U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 18U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 18U, 2U), 1, DataType::QASYMM8), TensorInfo(TensorShape(32U, 18U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 18U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 18U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), }), framework::dataset::make(&quot;WeightsInfo&quot;, { TensorInfo(TensorShape(3U, 3U, 2U, 2U), 1, DataType::F16), TensorInfo(TensorShape(3U, 3U, 2U, 2U), 1, DataType::F32), TensorInfo(TensorShape(5U, 5U, 2U, 2U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 2U, 2U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 2U, 2U), 1, DataType::QASYMM8), TensorInfo(TensorShape(3U, 3U, 2U, 2U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 2U, 2U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 2U, 2U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 2U, 2U), 1, DataType::F32), })), framework::dataset::make(&quot;BiasesInfo&quot;, { TensorInfo(TensorShape(2U), 1, DataType::F32), TensorInfo(TensorShape(2U), 1, DataType::F32), TensorInfo(TensorShape(2U), 1, DataType::F32), TensorInfo(TensorShape(2U), 1, DataType::F32), TensorInfo(TensorShape(2U), 1, DataType::S32), TensorInfo(TensorShape(4U), 1, DataType::F32), TensorInfo(TensorShape(2U, 2U), 1, DataType::F32), TensorInfo(TensorShape(2U), 1, DataType::F32), TensorInfo(TensorShape(2U), 1, DataType::F32), })), framework::dataset::make(&quot;OutputInfo&quot;, { TensorInfo(TensorShape(30U, 16U, 2U), 1, DataType::F32), TensorInfo(TensorShape(30U, 16U, 2U), 1, DataType::F32), TensorInfo(TensorShape(30U, 16U, 2U), 1, DataType::F32), TensorInfo(TensorShape(30U, 16U, 2U), 1, DataType::F32), TensorInfo(TensorShape(30U, 16U, 2U), 1, DataType::QASYMM8), TensorInfo(TensorShape(30U, 16U, 2U), 1, DataType::F32), TensorInfo(TensorShape(30U, 16U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 18U, 2U), 1, DataType::F32), TensorInfo(TensorShape(25U, 11U, 2U), 1, DataType::F32), })), framework::dataset::make(&quot;ConvInfo&quot;, { PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 0, 0), PadStrideInfo(4, 1, 0, 0), PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 0, 0), })), framework::dataset::make(&quot;DepthMultiplier&quot;, { 1, 1, 1, 3, 1, 1, 1, 1, 1, })), framework::dataset::make(&quot;Expected&quot;, { false, false, false, false, false, false, false, false, true })), input_info, weights_info, biases_info, output_info, conv_info, depth_multiplier, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a4393002100019a1d2fe5a825aaf2a966',1,'arm_compute::test::validation::DATA_TEST_CASE(ValidateConvolutionMethod, framework::DatasetMode::ALL, zip(zip(zip(zip(zip(framework::dataset::make(&quot;InputInfo&quot;, { TensorInfo(TensorShape(8U, 8U, 2U), 1, DataType::F32), TensorInfo(TensorShape(23U, 27U, 5U, 4U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 2U, 1U), 1, DataType::F32), TensorInfo(TensorShape(33U, 27U, 7U, 4U), 1, DataType::F32) }), framework::dataset::make(&quot;WeightsInfo&quot;, { TensorInfo(TensorShape(3U, 3U, 5U, 21U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 5U, 21U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 5U, 21U), 1, DataType::F32), TensorInfo(TensorShape(5U, 5U, 7U, 16U), 1, DataType::F16) })), framework::dataset::make(&quot;OutputInfo&quot;, { TensorInfo(TensorShape(6U, 6U, 1U), 1, DataType::F32), TensorInfo(TensorShape(21U, 25U, 21U, 4U), 1, DataType::F32), TensorInfo(TensorShape(11U, 25U, 21U), 1, DataType::F32), TensorInfo(TensorShape(11U, 12U, 16U, 4U), 1, DataType::F32) })), framework::dataset::make(&quot;ConvInfo&quot;, { PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 0, 0), PadStrideInfo(2, 1, 0, 0), PadStrideInfo(3, 2, 1, 0) })), framework::dataset::make(&quot;Dilation&quot;, { Size2D(1U, 2U), Size2D(2U, 1U), Size2D(2U, 2U), Size2D(3U, 3U) })), framework::dataset::make(&quot;Expected&quot;, { ConvolutionMethod::GEMM, ConvolutionMethod::GEMM, ConvolutionMethod::GEMM, ConvolutionMethod::GEMM })), input_info, weights_info, output_info, conv_info, dilation, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a69ea3c5dd19aaf289330db00e8cd20a8',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(zip(zip(zip(framework::dataset::make(&quot;InputInfo&quot;, { TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), }), framework::dataset::make(&quot;WeightsInfo&quot;,{ TensorInfo(TensorShape(3U, 3U, 2U, 4U), 1, DataType::F16), TensorInfo(TensorShape(3U, 3U, 3U, 4U), 1, DataType::F32), TensorInfo(TensorShape(9U, 9U, 2U, 4U), 1, DataType::F32), TensorInfo(TensorShape(5U, 3U, 2U, 4U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 2U, 4U, 3U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 2U, 4U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 2U, 4U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 2U, 4U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 2U, 4U), 1, DataType::F32), })), framework::dataset::make(&quot;BiasesInfo&quot;,{ TensorInfo(TensorShape(4U), 1, DataType::F32), TensorInfo(TensorShape(4U), 1, DataType::F32), TensorInfo(TensorShape(4U), 1, DataType::F32), TensorInfo(TensorShape(4U), 1, DataType::F32), TensorInfo(TensorShape(4U), 1, DataType::F32), TensorInfo(TensorShape(4U), 1, DataType::F32), TensorInfo(TensorShape(3U), 1, DataType::F32), TensorInfo(TensorShape(4U, 2U), 1, DataType::F32), TensorInfo(TensorShape(4U), 1, DataType::F32), })), framework::dataset::make(&quot;OutputInfo&quot;,{ TensorInfo(TensorShape(25U, 11U, 4U), 1, DataType::F32), TensorInfo(TensorShape(25U, 11U, 4U), 1, DataType::F32), TensorInfo(TensorShape(25U, 11U, 4U), 1, DataType::F32), TensorInfo(TensorShape(25U, 11U, 4U), 1, DataType::F32), TensorInfo(TensorShape(25U, 11U, 4U), 1, DataType::F32), TensorInfo(TensorShape(25U, 11U, 4U), 1, DataType::F32), TensorInfo(TensorShape(25U, 11U, 4U), 1, DataType::F32), TensorInfo(TensorShape(25U, 11U, 4U), 1, DataType::F32), TensorInfo(TensorShape(26U, 11U, 4U), 1, DataType::F32), })), framework::dataset::make(&quot;ConvInfo&quot;, { PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 0, 0), PadStrideInfo(3, 3, 0, 0), PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 0, 0), PadStrideInfo(1, 1, 0, 0), })), framework::dataset::make(&quot;ActivationInfo&quot;, { ActivationLayerInfo(), ActivationLayerInfo(ActivationLayerInfo::ActivationFunction::RELU) })), framework::dataset::make(&quot;Expected&quot;, { false, false, false, false, false, false, false, false, false })), input_info, weights_info, biases_info, output_info, conv_info, act_info, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a4fbf0e6a1c8356ad0918515bb1310e1b',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(zip(zip(zip(framework::dataset::make(&quot;InputInfo&quot;, { TensorInfo(TensorShape(9U, 5U, 7U, 3U), 1, DataType::F32), TensorInfo(TensorShape(8U, 4U, 6U, 4U), 1, DataType::F32), TensorInfo(TensorShape(8U, 4U, 6U, 4U), 1, DataType::F32), TensorInfo(TensorShape(9U, 5U, 7U, 3U), 1, DataType::F32), TensorInfo(TensorShape(9U, 5U, 7U, 3U), 1, DataType::F32), TensorInfo(TensorShape(8U, 4U, 6U, 4U), 1, DataType::F32), }), framework::dataset::make(&quot;WeightsInfo&quot;,{ TensorInfo(TensorShape(315U, 271U), 1, DataType::F16), TensorInfo(TensorShape(192U, 192U), 1, DataType::F32), TensorInfo(TensorShape(192U, 192U), 1, DataType::F32), TensorInfo(TensorShape(217U, 315U), 1, DataType::F32), TensorInfo(TensorShape(217U, 315U), 1, DataType::F32), TensorInfo(TensorShape(192U, 192U), 1, DataType::F32), })), framework::dataset::make(&quot;BiasInfo&quot;,{ TensorInfo(TensorShape(271U), 1, DataType::F32), TensorInfo(TensorShape(192U), 1, DataType::F32), TensorInfo(TensorShape(192U), 1, DataType::F32), TensorInfo(TensorShape(271U), 1, DataType::F32), TensorInfo(TensorShape(271U), 1, DataType::F32), TensorInfo(TensorShape(192U), 1, DataType::F32), })), framework::dataset::make(&quot;OutputInfo&quot;,{ TensorInfo(TensorShape(271U, 3U), 1, DataType::F32), TensorInfo(TensorShape(192U, 4U), 1, DataType::F32), TensorInfo(TensorShape(192U, 4U), 1, DataType::F32), TensorInfo(TensorShape(271U, 3U), 1, DataType::F32), TensorInfo(TensorShape(271U, 3U), 1, DataType::F32), TensorInfo(TensorShape(192U, 4U), 1, DataType::F32), })), framework::dataset::make(&quot;TransposeWeights&quot;,{ true, true, false, true, true, true })), framework::dataset::make(&quot;ReshapedWeights&quot;,{ false, false, false, false, false, false})), framework::dataset::make(&quot;Expected&quot;, { false, true, true, false, false, true })), input_info, weights_info, bias_info, output_info, transpose_weights, reshaped_weights, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a7fbe9343f61b58335701e0d7a6200ce1',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(framework::dataset::make(&quot;InputAInfo&quot;, { TensorInfo(TensorShape(21U, 13U), 1, DataType::QASYMM8, QuantizationInfo(1.f/255, 10)), TensorInfo(TensorShape(21U, 13U), 1, DataType::S32), TensorInfo(TensorShape(20U, 13U), 1, DataType::QASYMM8, QuantizationInfo(1.f/255, 10)), TensorInfo(TensorShape(21U, 13U), 1, DataType::QASYMM8, QuantizationInfo(1.f/255, 10)), TensorInfo(TensorShape(16U, 32U), 1, DataType::QASYMM8, QuantizationInfo(1.f/255, 10)), }), framework::dataset::make(&quot;InputBInfo&quot;,{ TensorInfo(TensorShape(33U, 21U), 1, DataType::QASYMM8, QuantizationInfo(1.f/256, 10)), TensorInfo(TensorShape(33U, 21U), 1, DataType::QASYMM8, QuantizationInfo(1.f/256, 10)), TensorInfo(TensorShape(33U, 21U), 1, DataType::QASYMM8, QuantizationInfo(1.f/256, 10)), TensorInfo(TensorShape(33U, 21U), 1, DataType::QASYMM8, QuantizationInfo(1.f/256, 10)), TensorInfo(TensorShape(64U, 16U), 1, DataType::QASYMM8, QuantizationInfo(1.f/256, 10)), })), framework::dataset::make(&quot;OutputInfo&quot;,{ TensorInfo(TensorShape(33U, 13U), 1, DataType::S32), TensorInfo(TensorShape(33U, 13U), 1, DataType::S32), TensorInfo(TensorShape(33U, 13U), 1, DataType::S32), TensorInfo(TensorShape(8U, 11U), 1, DataType::S32), TensorInfo(TensorShape(64U, 32U), 1, DataType::S32), })), framework::dataset::make(&quot;Expected&quot;, { false, false, false, false, true })), a_info, b_info, output_info, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a39e8116f6234a2d52f9c819fe6ca1c90',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(zip(zip(framework::dataset::make(&quot;InputAInfo&quot;, { TensorInfo(TensorShape(21U, 13U), 1, DataType::S32), TensorInfo(TensorShape(21U, 13U), 1, DataType::S32), TensorInfo(TensorShape(20U, 13U), 1, DataType::S32), }), framework::dataset::make(&quot;InputBInfo&quot;,{ TensorInfo(TensorShape(21U), 1, DataType::S32), TensorInfo(TensorShape(21U), 1, DataType::S32), TensorInfo(TensorShape(20U), 1, DataType::S32), })), framework::dataset::make(&quot;OutputInfo&quot;,{ TensorInfo(TensorShape(21U, 13U), 1, DataType::QASYMM8), TensorInfo(TensorShape(21U, 13U), 1, DataType::QASYMM8), TensorInfo(TensorShape(20U, 13U), 1, DataType::S32), })), framework::dataset::make(&quot;Min&quot;,{ 0, 8, 13, })), framework::dataset::make(&quot;Max&quot;,{ 205, 300, 180, })), framework::dataset::make(&quot;Expected&quot;, { true, false, false })), a_info, b_info, output_info, min, max, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#afaa077b528557e3df09361e7a998f361',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(framework::dataset::make(&quot;InputInfo&quot;, { TensorInfo(TensorShape(10U, 12U, 2U), 1, DataType::U8), TensorInfo(TensorShape(10U, 12U, 2U), 1, DataType::F32), TensorInfo(TensorShape(10U, 12U, 2U), 1, DataType::QASYMM8), TensorInfo(TensorShape(10U, 12U, 2U), 1, DataType::QASYMM8), TensorInfo(TensorShape(10U, 12U, 2U, 2U), 1, DataType::QASYMM8), }), framework::dataset::make(&quot;OutputInfo&quot;,{ TensorInfo(TensorShape(3U, 4U, 10U, 2U), 1, DataType::F16), TensorInfo(TensorShape(3U, 4U, 10U, 2U), 1, DataType::F16), TensorInfo(TensorShape(3U, 3U, 10U, 2U), 1, DataType::QASYMM8), TensorInfo(TensorShape(3U, 4U, 10U, 2U), 1, DataType::QASYMM8), TensorInfo(TensorShape(18U, 80U, 1U, 2U), 1, DataType::QASYMM8), })), framework::dataset::make(&quot;HasBias&quot;, { true, true, true, false, false })), framework::dataset::make(&quot;Expected&quot;, { false, false, false, false, true })), input_info, output_info, has_bias, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#aeb90caff595b774fc86cc53bd5023e58',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(framework::dataset::make(&quot;InputInfo&quot;, { TensorInfo(TensorShape(128U, 64U), 1, DataType::F32), TensorInfo(TensorShape(128U, 64U), 1, DataType::F32), TensorInfo(TensorShape(128U, 64U), 2, DataType::F32), TensorInfo(TensorShape(128U, 64U), 1, DataType::S16), TensorInfo(TensorShape(128U, 64U), 1, DataType::F32), TensorInfo(TensorShape(128U, 64U), 1, DataType::F32), TensorInfo(TensorShape(128U, 64U), 1, DataType::F32) }), framework::dataset::make(&quot;OutputInfo&quot;, { TensorInfo(TensorShape(128U, 64U), 1, DataType::F16), TensorInfo(TensorShape(256U, 64U), 1, DataType::F32), TensorInfo(TensorShape(128U, 64U), 1, DataType::F32), TensorInfo(TensorShape(128U, 64U), 1, DataType::S16), TensorInfo(TensorShape(128U, 64U), 1, DataType::F32), TensorInfo(TensorShape(128U, 64U), 1, DataType::F32), TensorInfo(TensorShape(128U, 64U), 1, DataType::F32) })), framework::dataset::make(&quot;Axis&quot;, { 0U, 0U, 0U, 0U, static_cast&lt; unsigned int &gt;(TensorShape::num_max_dimensions), 1U, 0U })), framework::dataset::make(&quot;Expected&quot;, { false, false, false, false, false, false, true })), input_info, output_info, axis, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#aeb41135a5f841f7ff28c675e058b1b11',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(zip(zip(framework::dataset::make(&quot;InputInfo&quot;, { TensorInfo(TensorShape(23U, 27U, 5U), 1, DataType::F32), TensorInfo(TensorShape(23U, 27U, 5U), 1, DataType::F32), TensorInfo(TensorShape(23U, 27U, 5U), 1, DataType::F32), TensorInfo(TensorShape(23U, 27U, 5U), 1, DataType::F32), TensorInfo(TensorShape(23U, 27U, 5U), 1, DataType::F32), TensorInfo(TensorShape(23U, 27U, 5U), 1, DataType::F32), TensorInfo(TensorShape(23U, 27U, 5U), 1, DataType::F32), TensorInfo(TensorShape(23U, 27U, 5U), 1, DataType::F32) }), framework::dataset::make(&quot;WeightsInfo&quot;,{ TensorInfo(TensorShape(3U, 3U, 5U, 21U, 275U), 1, DataType::F16), TensorInfo(TensorShape(3U, 3U, 5U, 21U, 275U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 5U, 21U, 275U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 5U, 21U, 274U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 5U, 21U, 275U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 5U, 21U, 275U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 5U, 21U, 275U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 5U, 21U, 275U), 1, DataType::F32) })), framework::dataset::make(&quot;BiasInfo&quot;, { TensorInfo(TensorShape(21U, 275U), 1, DataType::F32), TensorInfo(TensorShape(21U, 275U), 1, DataType::F16), TensorInfo(TensorShape(21U, 275U), 1, DataType::F32), TensorInfo(TensorShape(21U, 275U), 1, DataType::F32), TensorInfo(TensorShape(21U, 274U), 1, DataType::F32), TensorInfo(TensorShape(21U, 275U), 1, DataType::F32), TensorInfo(TensorShape(21U, 275U), 1, DataType::F32), TensorInfo(TensorShape(21U, 275U), 1, DataType::F32) })), framework::dataset::make(&quot;OutputInfo&quot;, { TensorInfo(TensorShape(11U, 25U, 21U), 1, DataType::F32), TensorInfo(TensorShape(11U, 25U, 21U), 1, DataType::F32), TensorInfo(TensorShape(11U, 25U, 21U), 1, DataType::F16), TensorInfo(TensorShape(11U, 25U, 21U), 1, DataType::F32), TensorInfo(TensorShape(11U, 25U, 21U), 1, DataType::F32), TensorInfo(TensorShape(11U, 25U, 22U), 1, DataType::F32), TensorInfo(TensorShape(11U, 25U, 21U), 1, DataType::F32), TensorInfo(TensorShape(11U, 25U, 21U), 1, DataType::F32) })), framework::dataset::make(&quot;PadStride&quot;, { PadStrideInfo(2, 1, 0, 0), PadStrideInfo(2, 1, 0, 0), PadStrideInfo(2, 1, 0, 0), PadStrideInfo(2, 1, 0, 0), PadStrideInfo(2, 1, 0, 0), PadStrideInfo(2, 1, 0, 0), PadStrideInfo(2, 1, 1, 0, 0, 0, DimensionRoundingType::FLOOR), PadStrideInfo(2, 1, 0, 0) })), framework::dataset::make(&quot;Expected&quot;, { false, false, false, false, false, false, false, true })), input_info, weights_info, bias_info, output_info, conv_info, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a635611a2f025da0e30e23148b4cdec17',1,'arm_compute::test::validation::DATA_TEST_CASE(Configuration, framework::DatasetMode::ALL, combine(concat(datasets::SmallShapes(), datasets::LargeShapes()), framework::dataset::make(&quot;DataType&quot;, DataType::S16)), shape, data_type)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a8d2f5d2790a1491bfa9b326bb93a90c6',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(framework::dataset::make(&quot;InputInfo&quot;, { TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), }), framework::dataset::make(&quot;OutputInfo&quot;,{ TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F16), TensorInfo(TensorShape(27U, 11U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), })), framework::dataset::make(&quot;NormInfo&quot;, { NormalizationLayerInfo(NormType::IN_MAP_1D, 5), NormalizationLayerInfo(NormType::IN_MAP_1D, 5), NormalizationLayerInfo(NormType::IN_MAP_1D, 4), NormalizationLayerInfo(NormType::IN_MAP_2D, 5), NormalizationLayerInfo(NormType::IN_MAP_1D, 5), NormalizationLayerInfo(NormType::CROSS_MAP, 1), })), framework::dataset::make(&quot;Expected&quot;, { false, false, false, false, false, true })), input_info, output_info, norm_info, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a3d93fd83742ad7467793fd97fa86fa3f',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(framework::dataset::make(&quot;InputInfo&quot;,{ TensorInfo(TensorShape(7U, 7U, 5U, 3U), 1, DataType::U16), TensorInfo(TensorShape(7U, 7U, 5U, 3U), 1, DataType::U16), TensorInfo(TensorShape(7U, 7U, 5U, 3U), 1, DataType::U16), TensorInfo(TensorShape(1U, 7U), 1, DataType::U8), TensorInfo(TensorShape(7U, 7U, 5U, 3U), 1, DataType::U16), TensorInfo(TensorShape(27U, 13U, 37U, 2U), 1, DataType::F32), TensorInfo(TensorShape(7U, 7U, 5U, 3U), 1, DataType::U16), TensorInfo(TensorShape(27U, 13U, 37U, 2U), 1, DataType::F32), }), framework::dataset::make(&quot;OutputInfo&quot;, { TensorInfo(TensorShape(5U, 7U, 7U, 3U), 1, DataType::U16), TensorInfo(TensorShape(7U, 7U, 5U, 3U), 1, DataType::U16), TensorInfo(TensorShape(7U, 7U, 5U, 3U), 1, DataType::U16), TensorInfo(TensorShape(5U, 7U), 1, DataType::U8), TensorInfo(TensorShape(5U, 7U, 7U, 3U), 1, DataType::U16), TensorInfo(TensorShape(13U, 37U, 27U, 2U), 1, DataType::F32), TensorInfo(TensorShape(5U, 7U, 7U, 3U), 1, DataType::U16), TensorInfo(TensorShape(13U, 37U, 27U, 2U), 1, DataType::F32), })), framework::dataset::make(&quot;PermutationVector&quot;, { PermutationVector(2U, 1U, 0U), PermutationVector(2U, 2U, 1U), PermutationVector(1U, 1U, 1U), PermutationVector(2U, 0U, 1U), PermutationVector(2U, 0U, 1U), PermutationVector(1U, 2U, 0U), PermutationVector(3U, 2U, 0U, 1U), PermutationVector(2U, 3U, 1U, 0U) })), framework::dataset::make(&quot;Expected&quot;, { false, false, false, false, true, true, false, false })), input_info, output_info, perm_vect, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a6d1ab5d9aeab4c3c99c04cc8ff15bc77',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(zip(framework::dataset::make(&quot;Input1Info&quot;, { TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::F32), }), framework::dataset::make(&quot;Input2Info&quot;,{ TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::S16), TensorInfo(TensorShape(48U, 11U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), })), framework::dataset::make(&quot;OutputInfo&quot;,{ TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::S16), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(48U, 11U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 13U, 2U), 1, DataType::U8), })), framework::dataset::make(&quot;Scale&quot;,{ scale_unity, scale_unity, scale_unity, -1.f, scale_unity, scale_unity, scale_unity})), framework::dataset::make(&quot;Expected&quot;, { true, true, false, false, false, false, false })), input1_info, input2_info, output_info, scale, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a4ae7460640c71d16d6a8a9f582ac6064',1,'arm_compute::test::validation::DATA_TEST_CASE(Configuration, framework::DatasetMode::ALL, combine(combine(combine(combine(combine(concat(datasets::SmallShapes(), datasets::LargeShapes()), framework::dataset::make(&quot;DataType1&quot;, DataType::U8)), framework::dataset::make(&quot;DataType2&quot;, DataType::U8)), framework::dataset::make(&quot;Scale&quot;, std::move(scale_255))), datasets::ConvertPolicies()), framework::dataset::make(&quot;RoundingPolicy&quot;, RoundingPolicy::TO_NEAREST_UP)), shape, dt1, dt2, scale, convert_policy, rounding_policy)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#aed08bc1c9d8813e8b3e6d7da9c892ad1',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(framework::dataset::make(&quot;InputInfo&quot;, { TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(15U, 13U, 5U), 1, DataType::F32), TensorInfo(TensorShape(13U, 13U, 5U), 1, DataType::F32), TensorInfo(TensorShape(13U, 13U, 5U), 1, DataType::F32), }), framework::dataset::make(&quot;OutputInfo&quot;,{ TensorInfo(TensorShape(25U, 11U, 2U), 1, DataType::F16), TensorInfo(TensorShape(25U, 10U, 2U), 1, DataType::F32), TensorInfo(TensorShape(30U, 11U, 2U), 1, DataType::F32), TensorInfo(TensorShape(25U, 16U, 2U), 1, DataType::F32), TensorInfo(TensorShape(1U, 1U, 5U), 1, DataType::F32), TensorInfo(TensorShape(2U, 2U, 5U), 1, DataType::F32), TensorInfo(TensorShape(25U, 11U, 2U), 1, DataType::F32), })), framework::dataset::make(&quot;PoolInfo&quot;, { PoolingLayerInfo(PoolingType::AVG, 3, PadStrideInfo(1, 1, 0, 0)), PoolingLayerInfo(PoolingType::AVG, 3, PadStrideInfo(1, 1, 0, 0)), PoolingLayerInfo(PoolingType::AVG, 2, PadStrideInfo(1, 1, 2, 0)), PoolingLayerInfo(PoolingType::AVG, 2, PadStrideInfo(1, 1, 0, 2)), PoolingLayerInfo(PoolingType::AVG), PoolingLayerInfo(PoolingType::MAX), PoolingLayerInfo(PoolingType::AVG), })), framework::dataset::make(&quot;Expected&quot;, { false, false, false, false, true, false, false, true })), input_info, output_info, pool_info, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#aa3fde559e0fbcf7d84408f87ce108d14',1,'arm_compute::test::validation::DATA_TEST_CASE(Configuration, framework::DatasetMode::ALL, combine(datasets::SmallShapes(), framework::dataset::make(&quot;DataType&quot;, { DataType::F32 })), shape, data_type)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a6e17cb959b8c376db868f6154a483e3d',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(framework::dataset::make(&quot;InputInfo&quot;, { TensorInfo(TensorShape(128U, 64U), 1, DataType::F32), TensorInfo(TensorShape(128U, 64U), 2, DataType::F32), TensorInfo(TensorShape(128U, 64U), 1, DataType::S16), TensorInfo(TensorShape(128U, 64U), 1, DataType::F32), TensorInfo(TensorShape(128U, 64U), 1, DataType::F32), TensorInfo(TensorShape(128U, 64U), 1, DataType::F32) }), framework::dataset::make(&quot;OutputInfo&quot;, { TensorInfo(TensorShape(1U, 64U), 1, DataType::F16), TensorInfo(TensorShape(1U, 64U), 1, DataType::F32), TensorInfo(TensorShape(1U, 64U), 1, DataType::S16), TensorInfo(TensorShape(1U, 64U), 1, DataType::F32), TensorInfo(TensorShape(1U, 64U), 1, DataType::F32), TensorInfo(TensorShape(1U, 64U), 1, DataType::F32) })), framework::dataset::make(&quot;Axis&quot;, { 0U, 0U, 0U, static_cast&lt; unsigned int &gt;(TensorShape::num_max_dimensions), 1U, 0U })), framework::dataset::make(&quot;Expected&quot;, { false, false, false, false, false, true })), input_info, output_info, axis, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a71312f987688bcde305a812d35b13dd3',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(zip(zip(zip(zip(framework::dataset::make(&quot;InputInfo&quot;, { TensorInfo(TensorShape(27U, 13U), 1, DataType::U8), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U), 1, DataType::F32), TensorInfo(TensorShape(32U, 32U), 1, DataType::F32), }), framework::dataset::make(&quot;WeightsInfo&quot;, { TensorInfo(TensorShape(27U, 11U), 1, DataType::F32), TensorInfo(TensorShape(27U, 11U), 1, DataType::F32), TensorInfo(TensorShape(27U, 11U, 2U), 1, DataType::F32), TensorInfo(TensorShape(27U, 11U), 1, DataType::F32), TensorInfo(TensorShape(27U, 11U), 1, DataType::F32), TensorInfo(TensorShape(27U, 11U), 1, DataType::F32), TensorInfo(TensorShape(27U, 11U), 1, DataType::F32), TensorInfo(TensorShape(32U, 32U), 1, DataType::F32), })), framework::dataset::make(&quot;RecurrentWeightsInfo&quot;, { TensorInfo(TensorShape(11U, 11U), 1, DataType::F32), TensorInfo(TensorShape(11U, 11U), 1, DataType::F32), TensorInfo(TensorShape(11U, 11U), 1, DataType::F32), TensorInfo(TensorShape(25U, 11U, 2U), 1, DataType::F32), TensorInfo(TensorShape(11U, 11U), 1, DataType::F32), TensorInfo(TensorShape(11U, 11U), 1, DataType::F32), TensorInfo(TensorShape(11U, 11U), 1, DataType::F32), TensorInfo(TensorShape(32U, 32U), 1, DataType::F32), })), framework::dataset::make(&quot;BiasInfo&quot;, { TensorInfo(TensorShape(11U), 1, DataType::F32), TensorInfo(TensorShape(11U), 1, DataType::F32), TensorInfo(TensorShape(11U), 1, DataType::F32), TensorInfo(TensorShape(11U), 1, DataType::F32), TensorInfo(TensorShape(30U), 1, DataType::F32), TensorInfo(TensorShape(11U), 1, DataType::F32), TensorInfo(TensorShape(11U), 1, DataType::F32), TensorInfo(TensorShape(32U), 1, DataType::F32), })), framework::dataset::make(&quot;OutputInfo&quot;, { TensorInfo(TensorShape(11U, 13U), 1, DataType::F32), TensorInfo(TensorShape(11U, 13U), 1, DataType::F32), TensorInfo(TensorShape(11U, 13U), 1, DataType::F32), TensorInfo(TensorShape(11U, 13U), 1, DataType::F32), TensorInfo(TensorShape(11U, 13U), 1, DataType::F32), TensorInfo(TensorShape(11U), 1, DataType::F32), TensorInfo(TensorShape(11U, 13U), 1, DataType::F32), TensorInfo(TensorShape(32U, 32U), 1, DataType::F32), })), framework::dataset::make(&quot;HiddenStateInfo&quot;, { TensorInfo(TensorShape(11U, 13U), 1, DataType::F32), TensorInfo(TensorShape(11U, 13U), 1, DataType::F32), TensorInfo(TensorShape(11U, 13U), 1, DataType::F32), TensorInfo(TensorShape(11U, 13U), 1, DataType::F32), TensorInfo(TensorShape(11U, 13U), 1, DataType::F32), TensorInfo(TensorShape(11U, 13U), 1, DataType::F32), TensorInfo(TensorShape(11U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 32U), 1, DataType::F32), })), framework::dataset::make(&quot;ActivationInfo&quot;, { ActivationLayerInfo(ActivationLayerInfo::ActivationFunction::RELU), ActivationLayerInfo(ActivationLayerInfo::ActivationFunction::RELU), ActivationLayerInfo(ActivationLayerInfo::ActivationFunction::RELU), ActivationLayerInfo(ActivationLayerInfo::ActivationFunction::RELU), ActivationLayerInfo(ActivationLayerInfo::ActivationFunction::RELU), ActivationLayerInfo(ActivationLayerInfo::ActivationFunction::RELU), ActivationLayerInfo(ActivationLayerInfo::ActivationFunction::RELU), ActivationLayerInfo(ActivationLayerInfo::ActivationFunction::RELU), })), framework::dataset::make(&quot;Expected&quot;, { false, false, false, false, false, false, false, true })), input_info, weights_info, recurrent_weights_info, bias_info, output_info, hidden_output_info, info, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#aa3830d4e647f546ac6d38972d094d8b5',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(zip(zip(zip(framework::dataset::make(&quot;InputInfo&quot;, { TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::U8), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(4U, 27U, 13U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U, 2U), 1, DataType::F32), TensorInfo(TensorShape(4U, 27U, 13U), 1, DataType::F32), }), framework::dataset::make(&quot;OutputInfo&quot;,{ TensorInfo(TensorShape(132U, 25U, 2U), 1, DataType::F32), TensorInfo(TensorShape(132U, 25U, 2U), 1, DataType::F32), TensorInfo(TensorShape(4U, 132U, 25U), 1, DataType::F32), TensorInfo(TensorShape(132U, 25U, 2U), 1, DataType::F32), TensorInfo(TensorShape(4U, 132U, 25U), 1, DataType::F32), })), framework::dataset::make(&quot;InterpolationPolicy&quot;, { InterpolationPolicy::NEAREST_NEIGHBOR, InterpolationPolicy::NEAREST_NEIGHBOR, InterpolationPolicy::AREA, InterpolationPolicy::AREA, InterpolationPolicy::NEAREST_NEIGHBOR, })), framework::dataset::make(&quot;BorderMode&quot;, { BorderMode::UNDEFINED, BorderMode::UNDEFINED, BorderMode::UNDEFINED, BorderMode::UNDEFINED, BorderMode::REPLICATE, })), framework::dataset::make(&quot;SamplingPolicy&quot;, { SamplingPolicy::CENTER, SamplingPolicy::TOP_LEFT, SamplingPolicy::CENTER, SamplingPolicy::CENTER, SamplingPolicy::CENTER, })), framework::dataset::make(&quot;DataLayout&quot;, { DataLayout::NCHW, DataLayout::NCHW, DataLayout::NHWC, DataLayout::NCHW, DataLayout::NHWC, })), framework::dataset::make(&quot;Expected&quot;, { false, false, false, false, true })), input_info, output_info, policy, border_mode, sampling_policy, data_layout, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#ae6f344fd1ac7dd22a492166e451be5c8',1,'arm_compute::test::validation::DATA_TEST_CASE(Configuration, framework::DatasetMode::ALL, combine(combine(combine(combine(combine(concat(datasets::SmallShapes(), datasets::LargeShapes()), ScaleDataTypes), ScaleDataLayouts), framework::dataset::make(&quot;InterpolationPolicy&quot;, { InterpolationPolicy::NEAREST_NEIGHBOR, InterpolationPolicy::BILINEAR })), datasets::BorderModes()), framework::dataset::make(&quot;SamplingPolicy&quot;, { SamplingPolicy::CENTER })), shape, data_type, data_layout, policy, border_mode, sampling_policy)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a3bbaf14fbeb0b6de2b5c79a3186e281b',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(framework::dataset::make(&quot;InputInfo&quot;, { TensorInfo(TensorShape(27U, 13U), 1, DataType::F32), TensorInfo(TensorShape(27U, 13U), 1, DataType::F32), TensorInfo(TensorShape(32U, 16U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 16U), 1, DataType::F32), }), framework::dataset::make(&quot;OutputInfo&quot;,{ TensorInfo(TensorShape(27U, 13U), 1, DataType::F16), TensorInfo(TensorShape(27U, 11U), 1, DataType::F32), TensorInfo(TensorShape(27U, 11U), 1, DataType::F32), TensorInfo(TensorShape(32U, 16U), 1, DataType::F32), })), framework::dataset::make(&quot;Expected&quot;, { false, false, false, true })), input_info, output_info, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a274bed0845c8fb1e2e56d175d82efe52',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(framework::dataset::make(&quot;InputInfo&quot;, { TensorInfo(TensorShape(21U, 13U), 1, DataType::U8), TensorInfo(TensorShape(21U, 13U), 1, DataType::U16), TensorInfo(TensorShape(20U, 13U), 1, DataType::U32), TensorInfo(TensorShape(20U, 13U), 1, DataType::U8), TensorInfo(TensorShape(20U, 16U), 1, DataType::U16), TensorInfo(TensorShape(20U, 16U), 1, DataType::U32), }), framework::dataset::make(&quot;OutputInfo&quot;,{ TensorInfo(TensorShape(13U, 21U), 1, DataType::U8), TensorInfo(TensorShape(21U, 13U), 1, DataType::U16), TensorInfo(TensorShape(13U, 20U), 1, DataType::U32), TensorInfo(TensorShape(31U, 20U), 1, DataType::U16), TensorInfo(TensorShape(16U, 20U), 1, DataType::U16), TensorInfo(TensorShape(16U, 20U), 1, DataType::U32), })), framework::dataset::make(&quot;Expected&quot;, { false, false, false, false, true, true })), a_info, output_info, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#ab3a9be28851ffe70ea37f1da42c13ac1',1,'arm_compute::test::validation::DATA_TEST_CASE(Validate, framework::DatasetMode::ALL, zip(zip(zip(zip(framework::dataset::make(&quot;InputInfo&quot;, { TensorInfo(TensorShape(10U, 10U, 2U), 1, DataType::F32), TensorInfo(TensorShape(10U, 10U, 2U), 1, DataType::F32), TensorInfo(TensorShape(10U, 10U, 2U), 1, DataType::F32), TensorInfo(TensorShape(10U, 10U, 2U), 1, DataType::F32), TensorInfo(TensorShape(32U, 32U), 1, DataType::F32), }), framework::dataset::make(&quot;OutputInfo&quot;,{ TensorInfo(TensorShape(20U, 20U, 2U), 1, DataType::F16), TensorInfo(TensorShape(20U, 10U, 2U), 1, DataType::F32), TensorInfo(TensorShape(20U, 20U, 2U), 1, DataType::F32), TensorInfo(TensorShape(20U, 20U, 2U), 1, DataType::F32), TensorInfo(TensorShape(64U, 64U), 1, DataType::F32), })), framework::dataset::make(&quot;PadInfo&quot;, { Size2D(2, 2), Size2D(2, 2), Size2D(1, 1), Size2D(2, 2), Size2D(2, 2), })), framework::dataset::make(&quot;UpsamplingPolicy&quot;, { InterpolationPolicy::NEAREST_NEIGHBOR, InterpolationPolicy::NEAREST_NEIGHBOR, InterpolationPolicy::NEAREST_NEIGHBOR, InterpolationPolicy::BILINEAR, InterpolationPolicy::NEAREST_NEIGHBOR, })), framework::dataset::make(&quot;Expected&quot;, { false, false, false, false, true })), input_info, output_info, pad_info, policy, expected)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a5c9d222c8e5c1ef02fa9f4b343f0a976',1,'arm_compute::test::validation::DATA_TEST_CASE(AutoPadding, framework::DatasetMode::ALL, zip(zip(zip(framework::dataset::make(&quot;TensorShape&quot;, { TensorShape{}, TensorShape{ 10U }, TensorShape{ 10U, 10U }, TensorShape{ 10U, 10U, 10U }, TensorShape{ 10U, 10U, 10U, 10U }, TensorShape{ 10U, 10U, 10U, 10U, 10U }, TensorShape{ 10U, 10U, 10U, 10U, 10U, 10U }}), framework::dataset::make(&quot;PaddingSize&quot;, { PaddingSize{ 0, 0, 0, 0 }, PaddingSize{ 0, 36, 0, 4 }, PaddingSize{ 4, 36, 4, 4 }, PaddingSize{ 4, 36, 4, 4 }, PaddingSize{ 4, 36, 4, 4 }, PaddingSize{ 4, 36, 4, 4 }, PaddingSize{ 4, 36, 4, 4 }})), framework::dataset::make(&quot;Strides&quot;, { Strides{}, Strides{ 1U, 50U }, Strides{ 1U, 50U }, Strides{ 1U, 50U, 900U }, Strides{ 1U, 50U, 900U, 9000U }, Strides{ 1U, 50U, 900U, 9000U, 90000U }, Strides{ 1U, 50U, 900U, 9000U, 90000U, 900000U }})), framework::dataset::make(&quot;Offset&quot;, { 0U, 4U, 204U, 204U, 204U, 204U, 204U })), shape, auto_padding, strides, offset)'],['../namespacearm__compute_1_1test_1_1validation.xhtml#aff7b127bdccdb0be89b5f18bf4fbf777',1,'arm_compute::test::validation::DATA_TEST_CASE(Construction, framework::DatasetMode::ALL, zip(zip(framework::dataset::make(&quot;TensorShape&quot;, { TensorShape{}, TensorShape{ 1U }, TensorShape{ 2U }, TensorShape{ 2U, 3U }, TensorShape{ 2U, 3U, 5U }, TensorShape{ 2U, 3U, 5U, 7U }, TensorShape{ 2U, 3U, 5U, 7U, 11U }, TensorShape{ 2U, 3U, 5U, 7U, 11U, 13U }}), framework::dataset::make(&quot;NumDimensions&quot;, { 0U, 1U, 1U, 2U, 3U, 4U, 5U, 6U })), framework::dataset::make(&quot;TotalSize&quot;, { 0U, 1U, 2U, 6U, 30U, 210U, 2310U, 30030U })), shape, num_dimensions, total_size)'],['../tests_2validation_2_u_n_i_t_2_utils_8cpp.xhtml#a27db011848222cd739c833cd57537632',1,'DATA_TEST_CASE(RoundHalfUp, framework::DatasetMode::ALL, zip(framework::dataset::make(&quot;FloatIn&quot;, { 1.f, 1.2f, 1.5f, 2.5f, 2.9f, -3.f, -3.5f, -3.8f, -4.3f, -4.5f }), framework::dataset::make(&quot;FloatOut&quot;, { 1.f, 1.f, 2.f, 3.f, 3.f, -3.f, -3.f, -4.f, -4.f, -4.f })), value, result):&#160;Utils.cpp'],['../tests_2validation_2_u_n_i_t_2_utils_8cpp.xhtml#a6ef92b04d435ab565a26eeebcdced806',1,'DATA_TEST_CASE(RoundHalfEven, framework::DatasetMode::ALL, zip(framework::dataset::make(&quot;FloatIn&quot;, { 1.f, 1.2f, 1.5f, 2.5f, 2.9f, -3.f, -3.5f, -3.8f, -4.3f, -4.5f }), framework::dataset::make(&quot;FloatOut&quot;, { 1.f, 1.f, 2.f, 2.f, 3.f, -3.f, -4.f, -4.f, -4.f, -4.f })), value, result):&#160;Utils.cpp'],['../tests_2validation_2_u_n_i_t_2_utils_8cpp.xhtml#a4eaacf0c251a42054ef98ad17828ea1a',1,'DATA_TEST_CASE(Index2Coord, framework::DatasetMode::ALL, zip(zip(framework::dataset::make(&quot;Shape&quot;, { TensorShape{ 1U }, TensorShape{ 2U }, TensorShape{ 2U, 3U } }), framework::dataset::make(&quot;Index&quot;, { 0, 1, 2 })), framework::dataset::make(&quot;Coordinates&quot;, { Coordinates{ 0 }, Coordinates{ 1 }, Coordinates{ 0, 1 } })), shape, index, ref_coordinate):&#160;Utils.cpp'],['../tests_2validation_2_u_n_i_t_2_utils_8cpp.xhtml#a1168f71fb63650656eed1a480243762d',1,'DATA_TEST_CASE(RoundFloatToZero, framework::DatasetMode::ALL, zip(framework::dataset::make(&quot;FloatIn&quot;, { 1.f, 1.2f, 1.5f, 2.5f, 2.9f, -3.f, -3.5f, -3.8f, -4.3f, -4.5f }), framework::dataset::make(&quot;FloatOut&quot;, { 1.f, 1.f, 1.f, 2.f, 2.f, -3.f, -3.f, -3.f, -4.f, -4.f })), value, result):&#160;Utils.cpp'],['../tests_2validation_2_u_n_i_t_2_utils_8cpp.xhtml#a627a856fabfe1b44438ed3cf5b741482',1,'DATA_TEST_CASE(RoundFloatToNearestUp, framework::DatasetMode::ALL, zip(framework::dataset::make(&quot;FloatIn&quot;, { 1.f, 1.2f, 1.5f, 2.5f, 2.9f, -3.f, -3.5f, -3.8f, -4.3f, -4.5f }), framework::dataset::make(&quot;FloatOut&quot;, { 1.f, 1.f, 2.f, 3.f, 3.f, -3.f, -4.f, -4.f, -4.f, -5.f })), value, result):&#160;Utils.cpp'],['../tests_2validation_2_u_n_i_t_2_utils_8cpp.xhtml#a694e9cd4762973da6bfc01e10c9e5313',1,'DATA_TEST_CASE(Coord2Index, framework::DatasetMode::ALL, zip(zip(framework::dataset::make(&quot;Shape&quot;, { TensorShape{ 1U }, TensorShape{ 2U }, TensorShape{ 2U, 3U } }), framework::dataset::make(&quot;Coordinates&quot;, { Coordinates{ 0 }, Coordinates{ 1 }, Coordinates{ 0, 1 } })), framework::dataset::make(&quot;Index&quot;, { 0, 1, 2 })), shape, coordinate, ref_index):&#160;Utils.cpp'],['../_window_iterator_8cpp.xhtml#acd2ef152b1743c15de3f67238d0eac43',1,'DATA_TEST_CASE(WholeWindow, framework::DatasetMode::ALL, zip(framework::dataset::make(&quot;Window&quot;, { create_window(Window::Dimension(0, 1)), create_window(Window::Dimension(1, 5, 2), Window::Dimension(3, 5)), create_window(Window::Dimension(4, 16, 4), Window::Dimension(3, 13, 5), Window::Dimension(1, 3, 2)) }), framework::dataset::make(&quot;Expected&quot;, { create_vector({ Coordinates(0, 0) }), create_vector({ Coordinates(1, 3), Coordinates(3, 3), Coordinates(1, 4), Coordinates(3, 4) }), create_vector({ Coordinates(4, 3, 1), Coordinates(8, 3, 1), Coordinates(12, 3, 1), Coordinates(4, 8, 1), Coordinates(8, 8, 1), Coordinates(12, 8, 1) }) })), window, expected):&#160;WindowIterator.cpp'],['../_window_iterator_8cpp.xhtml#a73168adf798e300ad06a0341c1c9bd59',1,'DATA_TEST_CASE(PartialWindow2D, framework::DatasetMode::ALL, zip(zip(zip(combine(framework::dataset::make(&quot;Window&quot;, create_window(Window::Dimension(4, 20, 4), Window::Dimension(3, 32, 5), Window::Dimension(1, 2, 1))), framework::dataset::make(&quot;Start&quot;, { 0, 1, 3, 2, 4 })), framework::dataset::make(&quot;End&quot;, { 0, 2, 5, 8, 7 })), framework::dataset::make(&quot;RowSize&quot;, { create_vector({ 4 }), create_vector({ 8, 8 }), create_vector({ 4, 8, 8 }), create_vector({ 8, 8, 16, 16, 16, 16, 4 }), create_vector({ 16, 16, 16, 16 }), })), framework::dataset::make(&quot;Expected&quot;, { create_vector({ Coordinates(4, 3, 1) }), create_vector({ Coordinates(8, 3, 1), Coordinates(12, 3, 1) }), create_vector({ Coordinates(16, 3, 1), Coordinates(4, 8, 1), Coordinates(8, 8, 1) }), create_vector({ Coordinates(12, 3, 1), Coordinates(16, 3, 1), Coordinates(4, 8, 1), Coordinates(8, 8, 1), Coordinates(12, 8, 1), Coordinates(16, 8, 1), Coordinates(4, 13, 1) }), create_vector({ Coordinates(4, 8, 1), Coordinates(8, 8, 1), Coordinates(12, 8, 1), Coordinates(16, 8, 1) }) })), window, start, end, expected_row_size, expected):&#160;WindowIterator.cpp']]],
  ['data_5ftest_5fcase_5fconstructor',['DATA_TEST_CASE_CONSTRUCTOR',['../tests_2framework_2_macros_8h.xhtml#adbd9bcfdb4c52d5acf73ce39c232b5c8',1,'Macros.h']]],
  ['data_5ftest_5fcase_5fimpl',['DATA_TEST_CASE_IMPL',['../tests_2framework_2_macros_8h.xhtml#adf3ec4a62a3f0d3e74ebd35d59ddd097',1,'Macros.h']]],
  ['data_5ftest_5fregistrar',['DATA_TEST_REGISTRAR',['../tests_2framework_2_macros_8h.xhtml#aa4df8c1af6041bc017bd9fb943d5e5d6',1,'Macros.h']]],
  ['data_5ftranspose',['data_transpose',['../namespacearm__compute_1_1test_1_1validation.xhtml#a21c746108f9b5d95496012a42de374cd',1,'arm_compute::test::validation']]],
  ['data_5ftype',['data_type',['../structarm__compute_1_1graph_1_1_tensor_descriptor.xhtml#a6118865e7371b107bd5fb4dd4a9e99a3',1,'arm_compute::graph::TensorDescriptor::data_type()'],['../structarm__compute_1_1utils_1_1_common_graph_params.xhtml#a901f5f80dfec4ef700c14947ca8397c9',1,'arm_compute::utils::CommonGraphParams::data_type()'],['../classarm__compute_1_1utils_1_1_common_graph_options.xhtml#a07e18432725b2e2d3c0a5625a8aea8a8',1,'arm_compute::utils::CommonGraphOptions::data_type()'],['../classarm__compute_1_1_i_tensor_info.xhtml#a7cfb31af63202568efef5214acfbf3ba',1,'arm_compute::ITensorInfo::data_type()'],['../classarm__compute_1_1_sub_tensor_info.xhtml#a9a3e72153aeb3ed212e9c3698774e881',1,'arm_compute::SubTensorInfo::data_type()'],['../classarm__compute_1_1_tensor_info.xhtml#a9a3e72153aeb3ed212e9c3698774e881',1,'arm_compute::TensorInfo::data_type()'],['../classarm__compute_1_1test_1_1_c_l_accessor.xhtml#a9a3e72153aeb3ed212e9c3698774e881',1,'arm_compute::test::CLAccessor::data_type()'],['../classarm__compute_1_1test_1_1_g_c_accessor.xhtml#a9a3e72153aeb3ed212e9c3698774e881',1,'arm_compute::test::GCAccessor::data_type()'],['../classarm__compute_1_1test_1_1_i_accessor.xhtml#a7cfb31af63202568efef5214acfbf3ba',1,'arm_compute::test::IAccessor::data_type()'],['../classarm__compute_1_1test_1_1_accessor.xhtml#a9a3e72153aeb3ed212e9c3698774e881',1,'arm_compute::test::Accessor::data_type()'],['../classarm__compute_1_1test_1_1_simple_tensor.xhtml#a9a3e72153aeb3ed212e9c3698774e881',1,'arm_compute::test::SimpleTensor::data_type()'],['../convolution3x3_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1',1,'DATA_TYPE():&#160;convolution3x3.cl'],['../convolution5x5_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1',1,'DATA_TYPE():&#160;convolution5x5.cl'],['../convolution7x7_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1',1,'DATA_TYPE():&#160;convolution7x7.cl'],['../convolution9x9_8cl.xhtml#afb8c72ce35c4a1f4a2588d6573e54aa1',1,'DATA_TYPE():&#160;convolution9x9.cl'],['../namespacearm__compute_1_1test_1_1validation.xhtml#ac2ad7f431e3446fddcd9b6b9f93c4c14',1,'arm_compute::test::validation::data_type()']]],
  ['data_5ftype_5ffor_5fconvolution',['data_type_for_convolution',['../namespacearm__compute.xhtml#a01adc12d8e07c06cdb0f03c56a455bf3',1,'arm_compute']]],
  ['data_5ftype_5ffor_5fconvolution_5fmatrix',['data_type_for_convolution_matrix',['../namespacearm__compute.xhtml#a3992df9e8723140a53e49dc194d89ef5',1,'arm_compute']]],
  ['data_5ftype_5ffrom_5fformat',['data_type_from_format',['../namespacearm__compute.xhtml#a59846ef5ca75cd81cdb7e8a1ce08f9db',1,'arm_compute']]],
  ['data_5ftype_5ffrom_5fname',['data_type_from_name',['../namespacearm__compute.xhtml#a307a55b07dc70dc9177ff26543b1c66f',1,'arm_compute']]],
  ['data_5ftype_5fmax',['DATA_TYPE_MAX',['../minmaxloc_8cl.xhtml#afa6b114aa46a23bb226c5c9547f9f623',1,'minmaxloc.cl']]],
  ['data_5ftype_5fmin',['DATA_TYPE_MIN',['../minmaxloc_8cl.xhtml#a17decce255d6f94a60379a61a54e3bac',1,'minmaxloc.cl']]],
  ['data_5ftype_5fout',['DATA_TYPE_OUT',['../convolution3x3_8cl.xhtml#ac06f3e24d3fffd3c465d8b2a6e7c985e',1,'DATA_TYPE_OUT():&#160;convolution3x3.cl'],['../convolution5x5_8cl.xhtml#ac06f3e24d3fffd3c465d8b2a6e7c985e',1,'DATA_TYPE_OUT():&#160;convolution5x5.cl'],['../convolution7x7_8cl.xhtml#ac06f3e24d3fffd3c465d8b2a6e7c985e',1,'DATA_TYPE_OUT():&#160;convolution7x7.cl'],['../convolution9x9_8cl.xhtml#ac06f3e24d3fffd3c465d8b2a6e7c985e',1,'DATA_TYPE_OUT():&#160;convolution9x9.cl']]],
  ['data_5ftypes',['data_types',['../namespacearm__compute_1_1test_1_1benchmark.xhtml#aab9a2ff74a27ae837d32a79a38952228',1,'arm_compute::test::benchmark']]],
  ['datalayout',['DataLayout',['../namespacearm__compute.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0',1,'arm_compute']]],
  ['datalayoutdimension',['DataLayoutDimension',['../namespacearm__compute.xhtml#a74ce3f7420453d3446218ff3b7453e02',1,'arm_compute']]],
  ['dataset',['Dataset',['../classarm__compute_1_1test_1_1framework_1_1dataset_1_1_dataset.xhtml',1,'Dataset'],['../classarm__compute_1_1test_1_1framework_1_1dataset_1_1_dataset.xhtml#a6c77d69d08daa8c99952d9e40de8d086',1,'arm_compute::test::framework::dataset::Dataset::Dataset()']]],
  ['dataset_2eh',['Dataset.h',['../_dataset_8h.xhtml',1,'']]],
  ['dataset_5fmode_5ffrom_5fname',['dataset_mode_from_name',['../namespacearm__compute_1_1test_1_1framework.xhtml#a1afd1c498fb3a1d2315e4c6d87d15754',1,'arm_compute::test::framework']]],
  ['datasetmode',['DatasetMode',['../namespacearm__compute_1_1test_1_1framework.xhtml#a7edf31944a6144ffd493d2f9a7bfb5cf',1,'arm_compute::test::framework']]],
  ['datasetmodes_2ecpp',['DatasetModes.cpp',['../_dataset_modes_8cpp.xhtml',1,'']]],
  ['datasetmodes_2eh',['DatasetModes.h',['../_dataset_modes_8h.xhtml',1,'']]],
  ['datasets_2eh',['Datasets.h',['../_datasets_8h.xhtml',1,'']]],
  ['datatestcase',['DataTestCase',['../classarm__compute_1_1test_1_1framework_1_1_data_test_case.xhtml',1,'arm_compute::test::framework']]],
  ['datatestcase_3c_20decltype_28framework_3a_3adataset_3a_3acombine_28framework_3a_3adataset_3a_3acombine_28datasets_3a_3aalexnetactivationlayerdataset_28_29_2c_20data_5ftypes_29_2c_20framework_3a_3adataset_3a_3amake_28_22batches_22_2c_201_29_29_29_3a_3atype_20_3e',['DataTestCase&lt; decltype(framework::dataset::combine(framework::dataset::combine(datasets::AlexNetActivationLayerDataset(), data_types), framework::dataset::make(&quot;Batches&quot;, 1)))::type &gt;',['../classarm__compute_1_1test_1_1framework_1_1_data_test_case.xhtml',1,'arm_compute::test::framework']]],
  ['datatestcase_3c_20decltype_28framework_3a_3adataset_3a_3acombine_28framework_3a_3adataset_3a_3acombine_28datasets_3a_3aalexnetactivationlayerdataset_28_29_2c_20data_5ftypes_29_2c_20framework_3a_3adataset_3a_3amake_28_22batches_22_2c_20_7b_204_2c_208_20_7d_29_29_29_3a_3atype_20_3e',['DataTestCase&lt; decltype(framework::dataset::combine(framework::dataset::combine(datasets::AlexNetActivationLayerDataset(), data_types), framework::dataset::make(&quot;Batches&quot;, { 4, 8 })))::type &gt;',['../classarm__compute_1_1test_1_1framework_1_1_data_test_case.xhtml',1,'arm_compute::test::framework']]],
  ['datatestcase_3c_20decltype_28framework_3a_3adataset_3a_3acombine_28framework_3a_3adataset_3a_3acombine_28datasets_3a_3agooglenetinceptionv1activationlayerdataset_28_29_2c_20data_5ftypes_29_2c_20framework_3a_3adataset_3a_3amake_28_22batches_22_2c_201_29_29_29_3a_3atype_20_3e',['DataTestCase&lt; decltype(framework::dataset::combine(framework::dataset::combine(datasets::GoogLeNetInceptionV1ActivationLayerDataset(), data_types), framework::dataset::make(&quot;Batches&quot;, 1)))::type &gt;',['../classarm__compute_1_1test_1_1framework_1_1_data_test_case.xhtml',1,'arm_compute::test::framework']]],
  ['datatestcase_3c_20decltype_28framework_3a_3adataset_3a_3acombine_28framework_3a_3adataset_3a_3acombine_28datasets_3a_3agooglenetinceptionv1activationlayerdataset_28_29_2c_20data_5ftypes_29_2c_20framework_3a_3adataset_3a_3amake_28_22batches_22_2c_20_7b_204_2c_208_20_7d_29_29_29_3a_3atype_20_3e',['DataTestCase&lt; decltype(framework::dataset::combine(framework::dataset::combine(datasets::GoogLeNetInceptionV1ActivationLayerDataset(), data_types), framework::dataset::make(&quot;Batches&quot;, { 4, 8 })))::type &gt;',['../classarm__compute_1_1test_1_1framework_1_1_data_test_case.xhtml',1,'arm_compute::test::framework']]],
  ['datatestcase_3c_20decltype_28framework_3a_3adataset_3a_3acombine_28framework_3a_3adataset_3a_3acombine_28datasets_3a_3agooglenetinceptionv4activationlayerdataset_28_29_2c_20data_5ftypes_29_2c_20framework_3a_3adataset_3a_3amake_28_22batches_22_2c_201_29_29_29_3a_3atype_20_3e',['DataTestCase&lt; decltype(framework::dataset::combine(framework::dataset::combine(datasets::GoogLeNetInceptionV4ActivationLayerDataset(), data_types), framework::dataset::make(&quot;Batches&quot;, 1)))::type &gt;',['../classarm__compute_1_1test_1_1framework_1_1_data_test_case.xhtml',1,'arm_compute::test::framework']]],
  ['datatestcase_3c_20decltype_28framework_3a_3adataset_3a_3acombine_28framework_3a_3adataset_3a_3acombine_28datasets_3a_3agooglenetinceptionv4activationlayerdataset_28_29_2c_20data_5ftypes_29_2c_20framework_3a_3adataset_3a_3amake_28_22batches_22_2c_20_7b_204_2c_208_20_7d_29_29_29_3a_3atype_20_3e',['DataTestCase&lt; decltype(framework::dataset::combine(framework::dataset::combine(datasets::GoogLeNetInceptionV4ActivationLayerDataset(), data_types), framework::dataset::make(&quot;Batches&quot;, { 4, 8 })))::type &gt;',['../classarm__compute_1_1test_1_1framework_1_1_data_test_case.xhtml',1,'arm_compute::test::framework']]],
  ['datatestcase_3c_20decltype_28framework_3a_3adataset_3a_3acombine_28framework_3a_3adataset_3a_3acombine_28datasets_3a_3alenet5activationlayerdataset_28_29_2c_20data_5ftypes_29_2c_20framework_3a_3adataset_3a_3amake_28_22batches_22_2c_201_29_29_29_3a_3atype_20_3e',['DataTestCase&lt; decltype(framework::dataset::combine(framework::dataset::combine(datasets::LeNet5ActivationLayerDataset(), data_types), framework::dataset::make(&quot;Batches&quot;, 1)))::type &gt;',['../classarm__compute_1_1test_1_1framework_1_1_data_test_case.xhtml',1,'arm_compute::test::framework']]],
  ['datatestcase_3c_20decltype_28framework_3a_3adataset_3a_3acombine_28framework_3a_3adataset_3a_3acombine_28datasets_3a_3alenet5activationlayerdataset_28_29_2c_20data_5ftypes_29_2c_20framework_3a_3adataset_3a_3amake_28_22batches_22_2c_20_7b_204_2c_208_20_7d_29_29_29_3a_3atype_20_3e',['DataTestCase&lt; decltype(framework::dataset::combine(framework::dataset::combine(datasets::LeNet5ActivationLayerDataset(), data_types), framework::dataset::make(&quot;Batches&quot;, { 4, 8 })))::type &gt;',['../classarm__compute_1_1test_1_1framework_1_1_data_test_case.xhtml',1,'arm_compute::test::framework']]],
  ['datatestcase_3c_20decltype_28framework_3a_3adataset_3a_3acombine_28framework_3a_3adataset_3a_3acombine_28datasets_3a_3amobilenetactivationlayerdataset_28_29_2c_20data_5ftypes_5fmobilenet_29_2c_20framework_3a_3adataset_3a_3amake_28_22batches_22_2c_201_29_29_29_3a_3atype_20_3e',['DataTestCase&lt; decltype(framework::dataset::combine(framework::dataset::combine(datasets::MobileNetActivationLayerDataset(), data_types_mobilenet), framework::dataset::make(&quot;Batches&quot;, 1)))::type &gt;',['../classarm__compute_1_1test_1_1framework_1_1_data_test_case.xhtml',1,'arm_compute::test::framework']]],
  ['datatestcase_3c_20decltype_28framework_3a_3adataset_3a_3acombine_28framework_3a_3adataset_3a_3acombine_28datasets_3a_3amobilenetactivationlayerdataset_28_29_2c_20data_5ftypes_5fmobilenet_29_2c_20framework_3a_3adataset_3a_3amake_28_22batches_22_2c_20_7b_204_2c_208_20_7d_29_29_29_3a_3atype_20_3e',['DataTestCase&lt; decltype(framework::dataset::combine(framework::dataset::combine(datasets::MobileNetActivationLayerDataset(), data_types_mobilenet), framework::dataset::make(&quot;Batches&quot;, { 4, 8 })))::type &gt;',['../classarm__compute_1_1test_1_1framework_1_1_data_test_case.xhtml',1,'arm_compute::test::framework']]],
  ['datatestcase_3c_20decltype_28framework_3a_3adataset_3a_3acombine_28framework_3a_3adataset_3a_3acombine_28datasets_3a_3asqueezenetactivationlayerdataset_28_29_2c_20data_5ftypes_29_2c_20framework_3a_3adataset_3a_3amake_28_22batches_22_2c_201_29_29_29_3a_3atype_20_3e',['DataTestCase&lt; decltype(framework::dataset::combine(framework::dataset::combine(datasets::SqueezeNetActivationLayerDataset(), data_types), framework::dataset::make(&quot;Batches&quot;, 1)))::type &gt;',['../classarm__compute_1_1test_1_1framework_1_1_data_test_case.xhtml',1,'arm_compute::test::framework']]],
  ['datatestcase_3c_20decltype_28framework_3a_3adataset_3a_3acombine_28framework_3a_3adataset_3a_3acombine_28datasets_3a_3asqueezenetactivationlayerdataset_28_29_2c_20data_5ftypes_29_2c_20framework_3a_3adataset_3a_3amake_28_22batches_22_2c_20_7b_204_2c_208_20_7d_29_29_29_3a_3atype_20_3e',['DataTestCase&lt; decltype(framework::dataset::combine(framework::dataset::combine(datasets::SqueezeNetActivationLayerDataset(), data_types), framework::dataset::make(&quot;Batches&quot;, { 4, 8 })))::type &gt;',['../classarm__compute_1_1test_1_1framework_1_1_data_test_case.xhtml',1,'arm_compute::test::framework']]],
  ['datatestcase_3c_20decltype_28framework_3a_3adataset_3a_3acombine_28framework_3a_3adataset_3a_3acombine_28datasets_3a_3avgg16activationlayerdataset_28_29_2c_20data_5ftypes_29_2c_20framework_3a_3adataset_3a_3amake_28_22batches_22_2c_201_29_29_29_3a_3atype_20_3e',['DataTestCase&lt; decltype(framework::dataset::combine(framework::dataset::combine(datasets::VGG16ActivationLayerDataset(), data_types), framework::dataset::make(&quot;Batches&quot;, 1)))::type &gt;',['../classarm__compute_1_1test_1_1framework_1_1_data_test_case.xhtml',1,'arm_compute::test::framework']]],
  ['datatestcase_3c_20decltype_28framework_3a_3adataset_3a_3acombine_28framework_3a_3adataset_3a_3acombine_28datasets_3a_3avgg16activationlayerdataset_28_29_2c_20data_5ftypes_29_2c_20framework_3a_3adataset_3a_3amake_28_22batches_22_2c_20_7b_204_2c_208_20_7d_29_29_29_3a_3atype_20_3e',['DataTestCase&lt; decltype(framework::dataset::combine(framework::dataset::combine(datasets::VGG16ActivationLayerDataset(), data_types), framework::dataset::make(&quot;Batches&quot;, { 4, 8 })))::type &gt;',['../classarm__compute_1_1test_1_1framework_1_1_data_test_case.xhtml',1,'arm_compute::test::framework']]],
  ['datatestcase_3c_20decltype_28framework_3a_3adataset_3a_3acombine_28framework_3a_3adataset_3a_3acombine_28datasets_3a_3ayolov2activationlayerdataset_28_29_2c_20data_5ftypes_29_2c_20framework_3a_3adataset_3a_3amake_28_22batches_22_2c_201_29_29_29_3a_3atype_20_3e',['DataTestCase&lt; decltype(framework::dataset::combine(framework::dataset::combine(datasets::YOLOV2ActivationLayerDataset(), data_types), framework::dataset::make(&quot;Batches&quot;, 1)))::type &gt;',['../classarm__compute_1_1test_1_1framework_1_1_data_test_case.xhtml',1,'arm_compute::test::framework']]],
  ['datatestcase_3c_20decltype_28framework_3a_3adataset_3a_3acombine_28framework_3a_3adataset_3a_3acombine_28datasets_3a_3ayolov2activationlayerdataset_28_29_2c_20data_5ftypes_29_2c_20framework_3a_3adataset_3a_3amake_28_22batches_22_2c_20_7b_204_2c_208_20_7d_29_29_29_3a_3atype_20_3e',['DataTestCase&lt; decltype(framework::dataset::combine(framework::dataset::combine(datasets::YOLOV2ActivationLayerDataset(), data_types), framework::dataset::make(&quot;Batches&quot;, { 4, 8 })))::type &gt;',['../classarm__compute_1_1test_1_1framework_1_1_data_test_case.xhtml',1,'arm_compute::test::framework']]],
  ['datatestcasefactory',['DataTestCaseFactory',['../classarm__compute_1_1test_1_1framework_1_1_data_test_case_factory.xhtml',1,'DataTestCaseFactory&lt; T, D &gt;'],['../classarm__compute_1_1test_1_1framework_1_1_data_test_case_factory.xhtml#aacdf355fbfb7579c36e50c757809c148',1,'arm_compute::test::framework::DataTestCaseFactory::DataTestCaseFactory()']]],
  ['datatype',['DataType',['../namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6',1,'arm_compute']]],
  ['datedecorator',['DateDecorator',['../classarm__compute_1_1logging_1_1_date_decorator.xhtml',1,'arm_compute::logging']]],
  ['ddk_5fversion',['ddk_version',['../structarm__compute_1_1_c_l_device_options.xhtml#ae19afa6eae26622a0068daa092b25f6a',1,'arm_compute::CLDeviceOptions']]],
  ['debug',['DEBUG',['../namespacearm__compute_1_1test_1_1framework.xhtml#aca1fd1d8935433e6ba2e3918214e07f9adc30ec20708ef7b0f641ef78b7880a15',1,'arm_compute::test::framework']]],
  ['declare_5ffunction_5fptr',['DECLARE_FUNCTION_PTR',['../_open_c_l_8h.xhtml#af6e65f36e2be6bd9a1cac10ba6e82f7c',1,'OpenCL.h']]],
  ['declare_5fneon_5ffunctions_5ffor_5ffloat',['DECLARE_NEON_FUNCTIONS_FOR_FLOAT',['../_n_e_softmax_layer_kernel_8cpp.xhtml#aedbe837d4d203f117c652cfc87bf659e',1,'NESoftmaxLayerKernel.cpp']]],
  ['declare_5fneon_5ffunctions_5ffor_5ftype',['DECLARE_NEON_FUNCTIONS_FOR_TYPE',['../_n_e_softmax_layer_kernel_8cpp.xhtml#a32a426c4abdceda8e1c40005df27f8d4',1,'NESoftmaxLayerKernel.cpp']]],
  ['declare_5fneon_5fvec_5ftype',['DECLARE_NEON_VEC_TYPE',['../_n_e_softmax_layer_kernel_8cpp.xhtml#af743beb1ad23bceb05b4eeb3e491839c',1,'NESoftmaxLayerKernel.cpp']]],
  ['deconvolution_5finfo',['deconvolution_info',['../classarm__compute_1_1graph_1_1_deconvolution_layer_node.xhtml#ae304796bd723ec2b2d50b88236498bd1',1,'arm_compute::graph::DeconvolutionLayerNode']]],
  ['deconvolution_5flayer',['deconvolution_layer',['../namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#a40e377ea8451d7320317ced1b2b687d9',1,'arm_compute::test::validation::reference::deconvolution_layer(const SimpleTensor&lt; T &gt; &amp;src, const SimpleTensor&lt; T &gt; &amp;weights, const SimpleTensor&lt; TB &gt; &amp;bias, const TensorShape &amp;output_shape, const PadStrideInfo &amp;info, const std::pair&lt; unsigned int, unsigned int &gt; &amp;a)'],['../namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#a6e3fca6996ef6ceb9d94cd23389cd537',1,'arm_compute::test::validation::reference::deconvolution_layer(const SimpleTensor&lt; uint8_t &gt; &amp;src, const SimpleTensor&lt; uint8_t &gt; &amp;weights, const SimpleTensor&lt; int32_t &gt; &amp;bias, const TensorShape &amp;output_shape, const PadStrideInfo &amp;info, const std::pair&lt; unsigned int, unsigned int &gt; &amp;a)'],['../namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#ad2dbe8fb35f3482d2e038b8a28f25031',1,'arm_compute::test::validation::reference::deconvolution_layer(const SimpleTensor&lt; float &gt; &amp;src, const SimpleTensor&lt; float &gt; &amp;weights, const SimpleTensor&lt; float &gt; &amp;bias, const TensorShape &amp;output_shape, const PadStrideInfo &amp;info, const std::pair&lt; unsigned int, unsigned int &gt; &amp;a)'],['../namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#ac3cb1b3d19e3cb12db85561dcb19c176',1,'arm_compute::test::validation::reference::deconvolution_layer(const SimpleTensor&lt; half &gt; &amp;src, const SimpleTensor&lt; half &gt; &amp;weights, const SimpleTensor&lt; half &gt; &amp;bias, const TensorShape &amp;output_shape, const PadStrideInfo &amp;info, const std::pair&lt; unsigned int, unsigned int &gt; &amp;a)']]],
  ['deconvolution_5flayer_2ecl',['deconvolution_layer.cl',['../deconvolution__layer_8cl.xhtml',1,'']]],
  ['deconvolution_5foutput_5fdimensions',['deconvolution_output_dimensions',['../namespacearm__compute.xhtml#a49d307dcc8f16084a061e1b6e8140eb7',1,'arm_compute']]],
  ['deconvolution_5fupsample',['deconvolution_upsample',['../deconvolution__layer_8cl.xhtml#ad247ccd3e1ca89af642c2b453db71dce',1,'deconvolution_layer.cl']]],
  ['deconvolutionlayer',['DeconvolutionLayer',['../classarm__compute_1_1graph_1_1frontend_1_1_deconvolution_layer.xhtml',1,'DeconvolutionLayer'],['../classarm__compute_1_1graph_1_1frontend_1_1_deconvolution_layer.xhtml#a9215f4450945459837b421c33956f239',1,'arm_compute::graph::frontend::DeconvolutionLayer::DeconvolutionLayer()'],['../namespacearm__compute_1_1graph.xhtml#acac9cbaeea226ed297804c012dc12b16ac814c26a7c5317e2a2f58fe0e5a0d410',1,'arm_compute::graph::DeconvolutionLayer()']]],
  ['deconvolutionlayer_2ecpp',['DeconvolutionLayer.cpp',['../_c_l_2_deconvolution_layer_8cpp.xhtml',1,'(Global Namespace)'],['../_n_e_o_n_2_deconvolution_layer_8cpp.xhtml',1,'(Global Namespace)'],['../reference_2_deconvolution_layer_8cpp.xhtml',1,'(Global Namespace)']]],
  ['deconvolutionlayer_2eh',['DeconvolutionLayer.h',['../_deconvolution_layer_8h.xhtml',1,'']]],
  ['deconvolutionlayernode',['DeconvolutionLayerNode',['../classarm__compute_1_1graph_1_1_deconvolution_layer_node.xhtml',1,'DeconvolutionLayerNode'],['../classarm__compute_1_1graph_1_1_deconvolution_layer_node.xhtml#a7fdaa1b9676892f546cff1e12dfef3d3',1,'arm_compute::graph::DeconvolutionLayerNode::DeconvolutionLayerNode()']]],
  ['deconvolutionlayernode_2ecpp',['DeconvolutionLayerNode.cpp',['../_deconvolution_layer_node_8cpp.xhtml',1,'']]],
  ['deconvolutionlayernode_2eh',['DeconvolutionLayerNode.h',['../_deconvolution_layer_node_8h.xhtml',1,'']]],
  ['decorate',['decorate',['../classarm__compute_1_1logging_1_1_i_decorator.xhtml#af7e99677086f647b50a1b4e4248f78f6',1,'arm_compute::logging::IDecorator::decorate()'],['../classarm__compute_1_1logging_1_1_string_decorator.xhtml#a7cc31af1c60cf2317350fca65ba16597',1,'arm_compute::logging::StringDecorator::decorate()'],['../classarm__compute_1_1logging_1_1_date_decorator.xhtml#a7cc31af1c60cf2317350fca65ba16597',1,'arm_compute::logging::DateDecorator::decorate()'],['../classarm__compute_1_1logging_1_1_thread_id_decorator.xhtml#a7cc31af1c60cf2317350fca65ba16597',1,'arm_compute::logging::ThreadIdDecorator::decorate()'],['../classarm__compute_1_1logging_1_1_log_level_decorator.xhtml#a7cc31af1c60cf2317350fca65ba16597',1,'arm_compute::logging::LogLevelDecorator::decorate()']]],
  ['default',['Default',['../structarm__compute_1_1_i_o_format_info.xhtml#a36c28b28da4e04d698d6b598fb1eaca6a7a1920d61156abc05a60135aefe8bc67',1,'arm_compute::IOFormatInfo::Default()'],['../namespacearm__compute_1_1graph.xhtml#a683661ae75dcb7aef16b9c9bde31517da7a1920d61156abc05a60135aefe8bc67',1,'arm_compute::graph::Default()'],['../namespacearm__compute_1_1graph.xhtml#a75ce9b1baad4303a53124d6f0795821fa7a1920d61156abc05a60135aefe8bc67',1,'arm_compute::graph::Default()']]],
  ['default_5finit',['default_init',['../classarm__compute_1_1_c_l_scheduler.xhtml#a46ecf9ef0fe80ba2ed35acfc29856b7d',1,'arm_compute::CLScheduler::default_init()'],['../classarm__compute_1_1_g_c_scheduler.xhtml#a19bb5002a62b62e050e89c975f7b9fdf',1,'arm_compute::GCScheduler::default_init()']]],
  ['default_5fndrange',['default_ndrange',['../classarm__compute_1_1_c_l_kernel_library.xhtml#adb48a1da7dc6b6f3c1a424d21e1ac1f8',1,'arm_compute::CLKernelLibrary']]],
  ['default_5fvalidate',['DEFAULT_VALIDATE',['../_n_e_o_n_2_pixel_wise_multiplication_8cpp.xhtml#aafb2ac305c1cfb580f29d538687f1fb5',1,'PixelWiseMultiplication.cpp']]],
  ['default_5fvisit',['default_visit',['../classarm__compute_1_1graph_1_1_default_node_visitor.xhtml#a78d9695424cce30cc0465770427fab06',1,'arm_compute::graph::DefaultNodeVisitor::default_visit()'],['../classarm__compute_1_1graph_1_1_dot_graph_visitor.xhtml#af62b93bea1e98919a10bf65eb71f9fce',1,'arm_compute::graph::DotGraphVisitor::default_visit()']]],
  ['defaultnodevisitor',['DefaultNodeVisitor',['../classarm__compute_1_1graph_1_1_default_node_visitor.xhtml',1,'arm_compute::graph']]],
  ['delta_5fbilinear_5fc1',['delta_bilinear_c1',['../namespacearm__compute.xhtml#ad656a27ce8a507e31096ca45683ba9a5',1,'arm_compute']]],
  ['delta_5flinear_5fc1_5fx',['delta_linear_c1_x',['../namespacearm__compute.xhtml#a6174495b626531de015ae2b810859287',1,'arm_compute']]],
  ['delta_5flinear_5fc1_5fy',['delta_linear_c1_y',['../namespacearm__compute.xhtml#ad5fa8bacf824e9538014bfb0dcdaab52',1,'arm_compute']]],
  ['depth_5fconvert',['depth_convert',['../namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#a742cdbdf3c1db76c9a189f1bcd745579',1,'arm_compute::test::validation::reference::depth_convert(const SimpleTensor&lt; T1 &gt; &amp;src, DataType dt_out, ConvertPolicy policy, uint32_t shift)'],['../namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#a87c420d7f8a98dead76b0b32b2df6777',1,'arm_compute::test::validation::reference::depth_convert(const SimpleTensor&lt; uint8_t &gt; &amp;src, DataType dt_out, ConvertPolicy policy, uint32_t shift)'],['../namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#aa23e45fa7a8f9f196704d4473721d6ab',1,'arm_compute::test::validation::reference::depth_convert(const SimpleTensor&lt; uint16_t &gt; &amp;src, DataType dt_out, ConvertPolicy policy, uint32_t shift)'],['../namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#af5201f074018073904e418e8e241ae1c',1,'arm_compute::test::validation::reference::depth_convert(const SimpleTensor&lt; int16_t &gt; &amp;src, DataType dt_out, ConvertPolicy policy, uint32_t shift)'],['../namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#a109ffc40641c411b40d1ce2d50a771da',1,'arm_compute::test::validation::reference::depth_convert(const SimpleTensor&lt; float &gt; &amp;src, DataType dt_out, ConvertPolicy policy, uint32_t shift)'],['../namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#a9dbe0d0e52cf797820d0d2baddf86dd4',1,'arm_compute::test::validation::reference::depth_convert(const SimpleTensor&lt; half &gt; &amp;src, DataType dt_out, ConvertPolicy policy, uint32_t shift)']]],
  ['depth_5fconvert_2ecl',['depth_convert.cl',['../depth__convert_8cl.xhtml',1,'']]],
  ['depth_5foutput_5fgemm3d',['depth_output_gemm3d',['../classarm__compute_1_1_g_e_m_m_reshape_info.xhtml#abbd888f118c2209bf7578eb4f8942a07',1,'arm_compute::GEMMReshapeInfo::depth_output_gemm3d()'],['../classarm__compute_1_1_g_e_m_m_info.xhtml#abbd888f118c2209bf7578eb4f8942a07',1,'arm_compute::GEMMInfo::depth_output_gemm3d()']]],
  ['depthconcatenate_5flayer',['depthconcatenate_layer',['../namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#aaca2b6bea6bd88fd39489d1104497330',1,'arm_compute::test::validation::reference::depthconcatenate_layer(const std::vector&lt; SimpleTensor&lt; T &gt;&gt; &amp;srcs)'],['../namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#a61adbb26afef180f6be269f4158c7379',1,'arm_compute::test::validation::reference::depthconcatenate_layer(const std::vector&lt; SimpleTensor&lt; uint8_t &gt;&gt; &amp;srcs)'],['../namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#a998bf347ddc146fb533250b9ef9ce927',1,'arm_compute::test::validation::reference::depthconcatenate_layer(const std::vector&lt; SimpleTensor&lt; float &gt;&gt; &amp;srcs)'],['../namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#a8a116b530186cf21c5f6c7da7acbd178',1,'arm_compute::test::validation::reference::depthconcatenate_layer(const std::vector&lt; SimpleTensor&lt; half &gt;&gt; &amp;srcs)']]],
  ['depthconcatenatelayer_2ecpp',['DepthConcatenateLayer.cpp',['../benchmark_2_c_l_2_depth_concatenate_layer_8cpp.xhtml',1,'(Global Namespace)'],['../benchmark_2_n_e_o_n_2_depth_concatenate_layer_8cpp.xhtml',1,'(Global Namespace)'],['../validation_2_c_l_2_depth_concatenate_layer_8cpp.xhtml',1,'(Global Namespace)'],['../validation_2_g_l_e_s___c_o_m_p_u_t_e_2_depth_concatenate_layer_8cpp.xhtml',1,'(Global Namespace)'],['../validation_2_n_e_o_n_2_depth_concatenate_layer_8cpp.xhtml',1,'(Global Namespace)'],['../validation_2reference_2_depth_concatenate_layer_8cpp.xhtml',1,'(Global Namespace)']]],
  ['depthconcatenatelayer_2eh',['DepthConcatenateLayer.h',['../_depth_concatenate_layer_8h.xhtml',1,'']]],
  ['depthconcatsubtensormutator',['DepthConcatSubTensorMutator',['../classarm__compute_1_1graph_1_1_depth_concat_sub_tensor_mutator.xhtml',1,'arm_compute::graph']]],
  ['depthconcatsubtensormutator_2ecpp',['DepthConcatSubTensorMutator.cpp',['../_depth_concat_sub_tensor_mutator_8cpp.xhtml',1,'']]],
  ['depthconcatsubtensormutator_2eh',['DepthConcatSubTensorMutator.h',['../_depth_concat_sub_tensor_mutator_8h.xhtml',1,'']]],
  ['depthconvertlayer_2ecpp',['DepthConvertLayer.cpp',['../_c_l_2_depth_convert_layer_8cpp.xhtml',1,'(Global Namespace)'],['../_n_e_o_n_2_depth_convert_layer_8cpp.xhtml',1,'(Global Namespace)'],['../reference_2_depth_convert_layer_8cpp.xhtml',1,'(Global Namespace)']]],
  ['depthconvertlayer_2eh',['DepthConvertLayer.h',['../_depth_convert_layer_8h.xhtml',1,'']]],
  ['depthwise_5fconvolution',['depthwise_convolution',['../namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#a61c5b469efbad8508f073665649c20ac',1,'arm_compute::test::validation::reference::depthwise_convolution(const SimpleTensor&lt; T &gt; &amp;src, const SimpleTensor&lt; T &gt; &amp;weights, const SimpleTensor&lt; TB &gt; &amp;biases, const TensorShape &amp;dst_shape, const PadStrideInfo &amp;conv_info, unsigned int depth_multiplier)'],['../namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#a1a53e3be4e81fac0a8edd23615195abd',1,'arm_compute::test::validation::reference::depthwise_convolution(const SimpleTensor&lt; uint8_t &gt; &amp;src, const SimpleTensor&lt; uint8_t &gt; &amp;weights, const SimpleTensor&lt; int32_t &gt; &amp;biases, const TensorShape &amp;dst_shape, const PadStrideInfo &amp;conv_info, unsigned int depth_multiplier)'],['../namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#a7b3a275cd2ac7ee9d5b75b87766995e4',1,'arm_compute::test::validation::reference::depthwise_convolution(const SimpleTensor&lt; float &gt; &amp;src, const SimpleTensor&lt; float &gt; &amp;weights, const SimpleTensor&lt; float &gt; &amp;biases, const TensorShape &amp;dst_shape, const PadStrideInfo &amp;conv_info, unsigned int depth_multiplier)'],['../namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#a5797ba134d2dcec9c4f04e8d06fa06fb',1,'arm_compute::test::validation::reference::depthwise_convolution(const SimpleTensor&lt; half &gt; &amp;src, const SimpleTensor&lt; half &gt; &amp;weights, const SimpleTensor&lt; half &gt; &amp;biases, const TensorShape &amp;dst_shape, const PadStrideInfo &amp;conv_info, unsigned int depth_multiplier)']]],
  ['depthwise_5fconvolution_2ecl',['depthwise_convolution.cl',['../depthwise__convolution_8cl.xhtml',1,'']]],
  ['depthwise_5fconvolution_5fmethod',['depthwise_convolution_method',['../classarm__compute_1_1graph_1_1_depthwise_convolution_layer_node.xhtml#a8cefd89d2de49691e778c8d5a08ac92f',1,'arm_compute::graph::DepthwiseConvolutionLayerNode']]],
  ['depthwise_5fconvolution_5fmethod_5fhint',['depthwise_convolution_method_hint',['../structarm__compute_1_1graph_1_1frontend_1_1_stream_hints.xhtml#a67ede056be3dfba6dfbb934a1b96661e',1,'arm_compute::graph::frontend::StreamHints']]],
  ['depthwise_5fconvolution_5fquantized_2ecl',['depthwise_convolution_quantized.cl',['../depthwise__convolution__quantized_8cl.xhtml',1,'']]],
  ['depthwise_5fseparable_5fconvolution_5flayer',['depthwise_separable_convolution_layer',['../namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#a71dcbc5f08da9ae1a8981746d7a62322',1,'arm_compute::test::validation::reference::depthwise_separable_convolution_layer(const SimpleTensor&lt; T &gt; &amp;src, const SimpleTensor&lt; T &gt; &amp;depthwise_weights, const SimpleTensor&lt; T &gt; &amp;depthwise_biases, const TensorShape &amp;depthwise_out_shape, const SimpleTensor&lt; T &gt; &amp;pointwise_weights, const SimpleTensor&lt; T &gt; &amp;pointwise_biases, const TensorShape &amp;dst_shape, const PadStrideInfo &amp;depthwise_conv_info, const PadStrideInfo &amp;pointwise_conv_info)'],['../namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#a0c7524d5bce923f96be77f49e1da3913',1,'arm_compute::test::validation::reference::depthwise_separable_convolution_layer(const SimpleTensor&lt; float &gt; &amp;in, const SimpleTensor&lt; float &gt; &amp;depthwise_weights, const SimpleTensor&lt; float &gt; &amp;depthwise_biases, const TensorShape &amp;depthwise_out_shape, const SimpleTensor&lt; float &gt; &amp;pointwise_weights, const SimpleTensor&lt; float &gt; &amp;pointwise_biases, const TensorShape &amp;dst_shape, const PadStrideInfo &amp;depthwise_conv_info, const PadStrideInfo &amp;pointwise_conv_info)']]],
  ['depthwiseconvolutionlayer',['DepthwiseConvolutionLayer',['../classarm__compute_1_1graph_1_1frontend_1_1_depthwise_convolution_layer.xhtml',1,'DepthwiseConvolutionLayer'],['../classarm__compute_1_1graph_1_1frontend_1_1_depthwise_convolution_layer.xhtml#a36e83ad4becd0b24268a048413726f49',1,'arm_compute::graph::frontend::DepthwiseConvolutionLayer::DepthwiseConvolutionLayer()'],['../namespacearm__compute_1_1graph.xhtml#acac9cbaeea226ed297804c012dc12b16a5b7955cb74be105cc7e044a370d4fce8',1,'arm_compute::graph::DepthwiseConvolutionLayer()']]],
  ['depthwiseconvolutionlayer_2ecpp',['DepthwiseConvolutionLayer.cpp',['../benchmark_2_c_l_2_depthwise_convolution_layer_8cpp.xhtml',1,'(Global Namespace)'],['../benchmark_2_g_l_e_s___c_o_m_p_u_t_e_2_depthwise_convolution_layer_8cpp.xhtml',1,'(Global Namespace)'],['../validation_2_c_l_2_depthwise_convolution_layer_8cpp.xhtml',1,'(Global Namespace)'],['../validation_2_g_l_e_s___c_o_m_p_u_t_e_2_depthwise_convolution_layer_8cpp.xhtml',1,'(Global Namespace)'],['../validation_2_n_e_o_n_2_depthwise_convolution_layer_8cpp.xhtml',1,'(Global Namespace)'],['../validation_2reference_2_depthwise_convolution_layer_8cpp.xhtml',1,'(Global Namespace)']]],
  ['depthwiseconvolutionlayer_2eh',['DepthwiseConvolutionLayer.h',['../_depthwise_convolution_layer_8h.xhtml',1,'']]],
  ['depthwiseconvolutionlayernode',['DepthwiseConvolutionLayerNode',['../classarm__compute_1_1graph_1_1_depthwise_convolution_layer_node.xhtml',1,'DepthwiseConvolutionLayerNode'],['../classarm__compute_1_1graph_1_1_depthwise_convolution_layer_node.xhtml#a81b796571a2ba1e36d6f97fa9c3b4c39',1,'arm_compute::graph::DepthwiseConvolutionLayerNode::DepthwiseConvolutionLayerNode()']]],
  ['depthwiseconvolutionlayernode_2ecpp',['DepthwiseConvolutionLayerNode.cpp',['../_depthwise_convolution_layer_node_8cpp.xhtml',1,'']]],
  ['depthwiseconvolutionlayernode_2eh',['DepthwiseConvolutionLayerNode.h',['../_depthwise_convolution_layer_node_8h.xhtml',1,'']]],
  ['depthwiseconvolutionmethod',['DepthwiseConvolutionMethod',['../namespacearm__compute_1_1graph.xhtml#a75ce9b1baad4303a53124d6f0795821f',1,'arm_compute::graph']]],
  ['depthwiseseparableconvolutionlayer_2ecpp',['DepthwiseSeparableConvolutionLayer.cpp',['../benchmark_2_c_l_2_depthwise_separable_convolution_layer_8cpp.xhtml',1,'(Global Namespace)'],['../validation_2_c_l_2_depthwise_separable_convolution_layer_8cpp.xhtml',1,'(Global Namespace)'],['../validation_2_n_e_o_n_2_depthwise_separable_convolution_layer_8cpp.xhtml',1,'(Global Namespace)'],['../validation_2reference_2_depthwise_separable_convolution_layer_8cpp.xhtml',1,'(Global Namespace)']]],
  ['depthwiseseparableconvolutionlayer_2eh',['DepthwiseSeparableConvolutionLayer.h',['../_depthwise_separable_convolution_layer_8h.xhtml',1,'']]],
  ['dequantization_5flayer',['dequantization_layer',['../dequantization__layer_8cl.xhtml#a60e9b00d30a2743653c1f589e33467b9',1,'dequantization_layer():&#160;dequantization_layer.cl'],['../namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#ab77dd3bd732636010753d8080608cd3c',1,'arm_compute::test::validation::reference::dequantization_layer(const SimpleTensor&lt; T &gt; &amp;src, const SimpleTensor&lt; float &gt; &amp;min_max)'],['../namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#a6633ef7fc0852265b2f158a5ef7ae900',1,'arm_compute::test::validation::reference::dequantization_layer(const SimpleTensor&lt; uint8_t &gt; &amp;src, const SimpleTensor&lt; float &gt; &amp;min_max)']]],
  ['dequantization_5flayer_2ecl',['dequantization_layer.cl',['../dequantization__layer_8cl.xhtml',1,'']]],
  ['dequantizationlayer_2ecpp',['DequantizationLayer.cpp',['../benchmark_2_c_l_2_dequantization_layer_8cpp.xhtml',1,'(Global Namespace)'],['../benchmark_2_n_e_o_n_2_dequantization_layer_8cpp.xhtml',1,'(Global Namespace)'],['../validation_2_c_l_2_dequantization_layer_8cpp.xhtml',1,'(Global Namespace)'],['../validation_2_n_e_o_n_2_dequantization_layer_8cpp.xhtml',1,'(Global Namespace)'],['../validation_2reference_2_dequantization_layer_8cpp.xhtml',1,'(Global Namespace)']]],
  ['dequantizationlayer_2eh',['DequantizationLayer.h',['../_dequantization_layer_8h.xhtml',1,'']]],
  ['dequantize',['dequantize',['../structarm__compute_1_1_quantization_info.xhtml#ac851f3e86769317dda805cfb4c44f43a',1,'arm_compute::QuantizationInfo']]],
  ['derivative',['derivative',['../derivative_8cl.xhtml#a5bd0ba0e3feaf66458557426291f2a77',1,'derivative():&#160;derivative.cl'],['../namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#aeae8f44225b61c5a6b05fdfcd82ae3d1',1,'arm_compute::test::validation::reference::derivative(const SimpleTensor&lt; U &gt; &amp;src, BorderMode border_mode, uint8_t constant_border_value, GradientDimension gradient_dimension)'],['../namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#ac5079d3fc0f7cf5f8dfb40b882cea1af',1,'arm_compute::test::validation::reference::derivative(const SimpleTensor&lt; uint8_t &gt; &amp;src, BorderMode border_mode, uint8_t constant_border_value, GradientDimension gradient_dimension)']]],
  ['derivative_2ecl',['derivative.cl',['../derivative_8cl.xhtml',1,'']]],
  ['derivative_2ecpp',['Derivative.cpp',['../_c_l_2_derivative_8cpp.xhtml',1,'(Global Namespace)'],['../_n_e_o_n_2_derivative_8cpp.xhtml',1,'(Global Namespace)'],['../reference_2_derivative_8cpp.xhtml',1,'(Global Namespace)']]],
  ['derivative_2eh',['Derivative.h',['../_derivative_8h.xhtml',1,'']]],
  ['desc',['desc',['../classarm__compute_1_1graph_1_1_tensor.xhtml#a0d3608f94078b90ab1ff9e9465d4ed3b',1,'arm_compute::graph::Tensor::desc()'],['../classarm__compute_1_1graph_1_1_tensor.xhtml#ae0a7a8139c09a2e0dbbaeb547fcbe9ea',1,'arm_compute::graph::Tensor::desc() const']]],
  ['description',['description',['../structarm__compute_1_1test_1_1framework_1_1dataset_1_1_cartesian_product_dataset_1_1iterator.xhtml#a07ffe70037e0a16554c868bcdd8f83b5',1,'arm_compute::test::framework::dataset::CartesianProductDataset::iterator::description()'],['../structarm__compute_1_1test_1_1framework_1_1dataset_1_1_container_dataset_1_1iterator.xhtml#a07ffe70037e0a16554c868bcdd8f83b5',1,'arm_compute::test::framework::dataset::ContainerDataset::iterator::description()'],['../structarm__compute_1_1test_1_1framework_1_1dataset_1_1_initializer_list_dataset_1_1iterator.xhtml#a07ffe70037e0a16554c868bcdd8f83b5',1,'arm_compute::test::framework::dataset::InitializerListDataset::iterator::description()'],['../structarm__compute_1_1test_1_1framework_1_1dataset_1_1_join_dataset_1_1iterator.xhtml#a07ffe70037e0a16554c868bcdd8f83b5',1,'arm_compute::test::framework::dataset::JoinDataset::iterator::description()'],['../structarm__compute_1_1test_1_1framework_1_1dataset_1_1_range_dataset_1_1iterator.xhtml#a07ffe70037e0a16554c868bcdd8f83b5',1,'arm_compute::test::framework::dataset::RangeDataset::iterator::description()'],['../structarm__compute_1_1test_1_1framework_1_1dataset_1_1_singleton_dataset_1_1iterator.xhtml#a07ffe70037e0a16554c868bcdd8f83b5',1,'arm_compute::test::framework::dataset::SingletonDataset::iterator::description()'],['../structarm__compute_1_1test_1_1framework_1_1dataset_1_1_zip_dataset_1_1iterator.xhtml#a07ffe70037e0a16554c868bcdd8f83b5',1,'arm_compute::test::framework::dataset::ZipDataset::iterator::description()']]],
  ['descriptor',['descriptor',['../classarm__compute_1_1_i_c_l_h_o_g.xhtml#a27295b82a57124dd502fbe8cebe8f9ca',1,'arm_compute::ICLHOG::descriptor()'],['../classarm__compute_1_1_i_h_o_g.xhtml#afc824305b2eaceab36baf5b66a535316',1,'arm_compute::IHOG::descriptor()'],['../classarm__compute_1_1_h_o_g.xhtml#a27295b82a57124dd502fbe8cebe8f9ca',1,'arm_compute::HOG::descriptor()'],['../classarm__compute_1_1test_1_1_c_l_h_o_g_accessor.xhtml#a548b8c6fda024da07113ff6cf6ec6af6',1,'arm_compute::test::CLHOGAccessor::descriptor()'],['../classarm__compute_1_1test_1_1_i_h_o_g_accessor.xhtml#afc824305b2eaceab36baf5b66a535316',1,'arm_compute::test::IHOGAccessor::descriptor()'],['../classarm__compute_1_1test_1_1_h_o_g_accessor.xhtml#a548b8c6fda024da07113ff6cf6ec6af6',1,'arm_compute::test::HOGAccessor::descriptor()']]],
  ['descriptor_5fsize',['descriptor_size',['../classarm__compute_1_1_h_o_g_info.xhtml#a2a347c64540c1d48a579f830ddff622f',1,'arm_compute::HOGInfo']]],
  ['detection_5fwindow_5fsize',['detection_window_size',['../classarm__compute_1_1_h_o_g_info.xhtml#a7cbda2c789c461237f0c6eaee8f8cd2a',1,'arm_compute::HOGInfo']]],
  ['detection_5fwindows_5fnon_5fmaxima_5fsuppression',['detection_windows_non_maxima_suppression',['../namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#a206dcc57b5f0396164931c3e65f52e20',1,'arm_compute::test::validation::reference']]],
  ['detections_5fper_5fim',['detections_per_im',['../classarm__compute_1_1_box_n_m_s_limit_info.xhtml#af3ec399a9e0cea025fa9b37773a6eb13',1,'arm_compute::BoxNMSLimitInfo']]],
  ['detectionwindow',['DetectionWindow',['../structarm__compute_1_1_detection_window.xhtml',1,'DetectionWindow'],['../struct_detection_window.xhtml',1,'DetectionWindow'],['../src_2core_2_c_l_2cl__kernels_2_types_8h.xhtml#a978d6d1943577669ebbb535f9e4f284f',1,'DetectionWindow():&#160;types.h']]],
  ['detectionwindowarray',['DetectionWindowArray',['../namespacearm__compute.xhtml#a5fe01ab895629edd84a511b56657d79e',1,'arm_compute']]],
  ['determinant_5fthr',['DETERMINANT_THR',['../optical__flow__pyramid__lk_8cl.xhtml#a0f3927d942874a04e6464bdb946de046',1,'optical_flow_pyramid_lk.cl']]],
  ['device_5fsupports_5fextension',['device_supports_extension',['../namespacearm__compute.xhtml#a6c4a5ca34ebb51d4e2e119a110e4c8f0',1,'arm_compute']]],
  ['dfs',['dfs',['../namespacearm__compute_1_1graph.xhtml#a14abdeb0f575e919aa6d586a95f23920',1,'arm_compute::graph']]],
  ['dilate',['dilate',['../dilate_8cl.xhtml#ae69f64c97993985f7623a252cf9fbe69',1,'dilate():&#160;dilate.cl'],['../namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#a2e49a7bdf96ed64920234da737e1bf86',1,'arm_compute::test::validation::reference::dilate(const SimpleTensor&lt; T &gt; &amp;src, BorderMode border_mode, T constant_border_value)'],['../namespacearm__compute_1_1test_1_1validation_1_1reference.xhtml#a9b18443e2ca2d82d1e314cc568ab997f',1,'arm_compute::test::validation::reference::dilate(const SimpleTensor&lt; uint8_t &gt; &amp;src, BorderMode border_mode, uint8_t constant_border_value)']]],
  ['dilate_2ecl',['dilate.cl',['../dilate_8cl.xhtml',1,'']]],
  ['dilate_2ecpp',['Dilate.cpp',['../_c_l_2_dilate_8cpp.xhtml',1,'(Global Namespace)'],['../_n_e_o_n_2_dilate_8cpp.xhtml',1,'(Global Namespace)'],['../reference_2_dilate_8cpp.xhtml',1,'(Global Namespace)']]],
  ['dilate_2eh',['Dilate.h',['../_dilate_8h.xhtml',1,'']]],
  ['dilatedconvolutionlayer_2ecpp',['DilatedConvolutionLayer.cpp',['../_c_l_2_dilated_convolution_layer_8cpp.xhtml',1,'(Global Namespace)'],['../_n_e_o_n_2_dilated_convolution_layer_8cpp.xhtml',1,'(Global Namespace)']]],
  ['dimension',['Dimension',['../classarm__compute_1_1_window_1_1_dimension.xhtml',1,'Window::Dimension'],['../classarm__compute_1_1_window_1_1_dimension.xhtml#a2c532d398a5661ff04367252701fa3d4',1,'arm_compute::Window::Dimension::Dimension()'],['../classarm__compute_1_1_i_tensor_info.xhtml#a178f0d3d87f959e00a743328d95359d2',1,'arm_compute::ITensorInfo::dimension(size_t index) const =0'],['../classarm__compute_1_1_i_tensor_info.xhtml#ae3372a4569b4702a881b1606b0c144c4',1,'arm_compute::ITensorInfo::dimension(DataLayoutDimension dimension) const =0'],['../classarm__compute_1_1_sub_tensor_info.xhtml#a8813441b655b97c00139c6a5a6390e97',1,'arm_compute::SubTensorInfo::dimension(size_t index) const override'],['../classarm__compute_1_1_sub_tensor_info.xhtml#a650247f9a828d1ef60135b01f8f77765',1,'arm_compute::SubTensorInfo::dimension(DataLayoutDimension dimension) const override'],['../classarm__compute_1_1_tensor_info.xhtml#a8813441b655b97c00139c6a5a6390e97',1,'arm_compute::TensorInfo::dimension(size_t index) const override'],['../classarm__compute_1_1_tensor_info.xhtml#a650247f9a828d1ef60135b01f8f77765',1,'arm_compute::TensorInfo::dimension(DataLayoutDimension dimension) const override']]],
  ['dimensionroundingtype',['DimensionRoundingType',['../namespacearm__compute.xhtml#a1fece1bd804e64f39f602d1c3969849a',1,'arm_compute']]],
  ['dimensions',['Dimensions',['../classarm__compute_1_1_dimensions.xhtml',1,'Dimensions&lt; T &gt;'],['../classarm__compute_1_1_dimensions.xhtml#a669af0de951a474c4b443f7bc7c026e0',1,'arm_compute::Dimensions::Dimensions(Ts... dims)'],['../classarm__compute_1_1_dimensions.xhtml#a0d3c59537291735849c740364496a41c',1,'arm_compute::Dimensions::Dimensions(const Dimensions &amp;)=default'],['../classarm__compute_1_1_dimensions.xhtml#aa2c609345b3b6fa8da2486f75fff8ed8',1,'arm_compute::Dimensions::Dimensions(Dimensions &amp;&amp;)=default'],['../classarm__compute_1_1gles_1_1_n_d_range.xhtml#a38d1df78f2175f8f38f74d4357ad6a35',1,'arm_compute::gles::NDRange::dimensions()'],['../classarm__compute_1_1_i_distribution.xhtml#a254be7b34cd78d12ffc7ed2aba4882b1',1,'arm_compute::IDistribution::dimensions()'],['../classarm__compute_1_1_i_distribution1_d.xhtml#ad251169c06da412071bdfb6e92444e6e',1,'arm_compute::IDistribution1D::dimensions()']]],
  ['dimensions_2eh',['Dimensions.h',['../_dimensions_8h.xhtml',1,'']]],
  ['dimensions_3c_20int_20_3e',['Dimensions&lt; int &gt;',['../classarm__compute_1_1_dimensions.xhtml',1,'arm_compute']]],
  ['dimensions_3c_20size_5ft_20_3e',['Dimensions&lt; size_t &gt;',['../classarm__compute_1_1_dimensions.xhtml',1,'arm_compute']]],
  ['dimensions_3c_20unsigned_20int_20_3e',['Dimensions&lt; unsigned int &gt;',['../classarm__compute_1_1_dimensions.xhtml',1,'arm_compute']]],
  ['dimx',['DimX',['../classarm__compute_1_1_window.xhtml#aa96e81276ee4f87ab386cd05a5539a7d',1,'arm_compute::Window']]],
  ['dimy',['DimY',['../classarm__compute_1_1_window.xhtml#ad2d402364fa822b0b7775081291eeca9',1,'arm_compute::Window']]],
  ['dimz',['DimZ',['../classarm__compute_1_1_window.xhtml#a893d17b56b9abc4423ce26e9a24ac5dc',1,'arm_compute::Window']]],
  ['direct',['DIRECT',['../namespacearm__compute.xhtml#a683661ae75dcb7aef16b9c9bde31517da4c5d06b02c97731aaa976179c62dcf76',1,'arm_compute::DIRECT()'],['../namespacearm__compute_1_1graph.xhtml#a683661ae75dcb7aef16b9c9bde31517dafd1dd0c603be8170f9eae0be9f2f6afb',1,'arm_compute::graph::Direct()']]],
  ['direct_5fconvolution1x1_2ecl',['direct_convolution1x1.cl',['../direct__convolution1x1_8cl.xhtml',1,'']]],
  ['direct_5fconvolution3x3_2ecl',['direct_convolution3x3.cl',['../direct__convolution3x3_8cl.xhtml',1,'']]],
  ['direct_5fconvolution5x5_2ecl',['direct_convolution5x5.cl',['../direct__convolution5x5_8cl.xhtml',1,'']]],
  ['direct_5fconvolution_5f1x1_5f3x3_5f5x5_5fquantized_2ecl',['direct_convolution_1x1_3x3_5x5_quantized.cl',['../direct__convolution__1x1__3x3__5x5__quantized_8cl.xhtml',1,'']]],
  ['directconvolutionlayer_2ecpp',['DirectConvolutionLayer.cpp',['../benchmark_2_c_l_2_direct_convolution_layer_8cpp.xhtml',1,'(Global Namespace)'],['../benchmark_2_g_l_e_s___c_o_m_p_u_t_e_2_direct_convolution_layer_8cpp.xhtml',1,'(Global Namespace)'],['../benchmark_2_n_e_o_n_2_direct_convolution_layer_8cpp.xhtml',1,'(Global Namespace)'],['../validation_2_c_l_2_direct_convolution_layer_8cpp.xhtml',1,'(Global Namespace)'],['../validation_2_g_l_e_s___c_o_m_p_u_t_e_2_direct_convolution_layer_8cpp.xhtml',1,'(Global Namespace)'],['../validation_2_n_e_o_n_2_direct_convolution_layer_8cpp.xhtml',1,'(Global Namespace)']]],
  ['directconvolutionlayertensorshift_2ecpp',['DirectConvolutionLayerTensorShift.cpp',['../_direct_convolution_layer_tensor_shift_8cpp.xhtml',1,'']]],
  ['disabled',['DISABLED',['../classarm__compute_1_1test_1_1framework_1_1_test_case_factory.xhtml#a67a0db04d321a74b7e7fcfd3f1a3f70ba055c1a591abb0e8cd86dc969727bcc0b',1,'arm_compute::test::framework::TestCaseFactory::DISABLED()'],['../structarm__compute_1_1test_1_1framework_1_1_test_result.xhtml#a67a0db04d321a74b7e7fcfd3f1a3f70ba055c1a591abb0e8cd86dc969727bcc0b',1,'arm_compute::test::framework::TestResult::DISABLED()'],['../namespacearm__compute_1_1graph.xhtml#ac85a46f3ebd3ab09f576a994ac2dce11ab9f5c797ebbf55adccdd8539a65a0241',1,'arm_compute::graph::Disabled()'],['../namespacearm__compute_1_1test_1_1framework.xhtml#a7edf31944a6144ffd493d2f9a7bfb5cfa055c1a591abb0e8cd86dc969727bcc0b',1,'arm_compute::test::framework::DISABLED()']]],
  ['disabled_5fdata_5ftest_5fcase',['DISABLED_DATA_TEST_CASE',['../tests_2framework_2_macros_8h.xhtml#a2d0deff95a1325348da7d2a945982b59',1,'Macros.h']]],
  ['disabled_5ffixture_5fdata_5ftest_5fcase',['DISABLED_FIXTURE_DATA_TEST_CASE',['../tests_2framework_2_macros_8h.xhtml#a7fb6c2e21b15474448e1f50d8acc854b',1,'DISABLED_FIXTURE_DATA_TEST_CASE():&#160;Macros.h'],['../namespacearm__compute_1_1test_1_1validation.xhtml#ad96d45ec005f26e4a61e1ca1f8b8ee31',1,'arm_compute::test::validation::DISABLED_FIXTURE_DATA_TEST_CASE()']]],
  ['disabled_5ffixture_5ftest_5fcase',['DISABLED_FIXTURE_TEST_CASE',['../tests_2framework_2_macros_8h.xhtml#a55d3bef40f09e56dc87e8f351a275385',1,'Macros.h']]],
  ['disabled_5fregister_5ffixture_5fdata_5ftest_5fcase',['DISABLED_REGISTER_FIXTURE_DATA_TEST_CASE',['../tests_2framework_2_macros_8h.xhtml#a934ee9a7581b65523fd180c96b159fb8',1,'Macros.h']]],
  ['disabled_5fregister_5ffixture_5ftest_5fcase',['DISABLED_REGISTER_FIXTURE_TEST_CASE',['../tests_2framework_2_macros_8h.xhtml#a55d2ae62838572e7be1c87128d02b493',1,'Macros.h']]],
  ['disabled_5ftest_5fcase',['DISABLED_TEST_CASE',['../tests_2framework_2_macros_8h.xhtml#a89747ae30c60b9f052fbf9707c8301a9',1,'Macros.h']]],
  ['disk',['DISK',['../namespacearm__compute.xhtml#afdda916edc7502967bbec17ea3c06c02a290d4b81f4e2b47d86fd1b0170e9aab7',1,'arm_compute']]],
  ['dispatch',['dispatch',['../classarm__compute_1_1_g_c_scheduler.xhtml#a66a29e27a51a13250143981b0ee4ad19',1,'arm_compute::GCScheduler']]],
  ['distribution1d',['Distribution1D',['../classarm__compute_1_1_distribution1_d.xhtml',1,'Distribution1D'],['../classarm__compute_1_1_distribution1_d.xhtml#a243c829bced69df597b496eb7456efb0',1,'arm_compute::Distribution1D::Distribution1D()']]],
  ['distribution1d_2ecpp',['Distribution1D.cpp',['../_distribution1_d_8cpp.xhtml',1,'']]],
  ['distribution1d_2eh',['Distribution1D.h',['../_distribution1_d_8h.xhtml',1,'']]],
  ['div',['DIV',['../arithmetic__op_8cl.xhtml#a49f6fecffd852cda3b0ece53dcbb2b87',1,'DIV():&#160;arithmetic_op.cl'],['../namespacearm__compute_1_1test_1_1validation.xhtml#a7e7889ab8e84003a7f90aa2a590e1faa',1,'arm_compute::test::validation::div()']]],
  ['div_5fceil',['DIV_CEIL',['../namespacearm__compute.xhtml#acac1575c0edd329ceb4a54d9fe8dcb08',1,'arm_compute']]],
  ['div_5fop',['DIV_OP',['../normalization__layer_8cl.xhtml#a5db17889d824975fefb2ce2f4690637f',1,'DIV_OP():&#160;normalization_layer.cl'],['../pooling__layer_8cl.xhtml#a5db17889d824975fefb2ce2f4690637f',1,'DIV_OP():&#160;pooling_layer.cl'],['../pooling__layer__quantized_8cl.xhtml#a5db17889d824975fefb2ce2f4690637f',1,'DIV_OP():&#160;pooling_layer_quantized.cl'],['../softmax__layer_8cl.xhtml#a8cde99b1ce0f3c1dacd49261b0cf03d8',1,'DIV_OP():&#160;softmax_layer.cl']]],
  ['div_5fop_5fnhwc',['DIV_OP_NHWC',['../pooling__layer_8cl.xhtml#a6c01fa98d360a9d52926dc6a5a599711',1,'DIV_OP_NHWC():&#160;pooling_layer.cl'],['../pooling__layer__quantized_8cl.xhtml#a6c01fa98d360a9d52926dc6a5a599711',1,'DIV_OP_NHWC():&#160;pooling_layer_quantized.cl']]],
  ['do_5frun',['do_run',['../classarm__compute_1_1test_1_1framework_1_1_test_case.xhtml#a90b4bc2c4bae857bc3536f4a18e29772',1,'arm_compute::test::framework::TestCase::do_run()'],['../classarm__compute_1_1utils_1_1_example.xhtml#a90b4bc2c4bae857bc3536f4a18e29772',1,'arm_compute::utils::Example::do_run()']]],
  ['do_5fsetup',['do_setup',['../classarm__compute_1_1test_1_1framework_1_1_test_case.xhtml#a5bf6aaa253bb8a13013294d33e168c45',1,'arm_compute::test::framework::TestCase::do_setup()'],['../classarm__compute_1_1utils_1_1_example.xhtml#ae678db013a8393ad2799a7de8b2b9304',1,'arm_compute::utils::Example::do_setup()']]],
  ['do_5fsync',['do_sync',['../classarm__compute_1_1test_1_1framework_1_1_test_case.xhtml#a197634795f22ff5c0d7789f5ccb3f9bd',1,'arm_compute::test::framework::TestCase']]],
  ['do_5fteardown',['do_teardown',['../classarm__compute_1_1test_1_1framework_1_1_test_case.xhtml#a9b3acd6be09cf86066760caaa89f7be5',1,'arm_compute::test::framework::TestCase::do_teardown()'],['../classarm__compute_1_1utils_1_1_example.xhtml#a9b3acd6be09cf86066760caaa89f7be5',1,'arm_compute::utils::Example::do_teardown()']]],
  ['dot8_5facc_5fsupported',['dot8_acc_supported',['../namespacearm__compute.xhtml#a4878daab91c6d7173de20283766e0c2c',1,'arm_compute']]],
  ['dot8_5fsupported',['dot8_supported',['../namespacearm__compute.xhtml#ac07e02c0066cf540a5a2665fa7d54934',1,'arm_compute']]],
  ['dot_5ftoolchain_5fsupport_2eh',['dot_toolchain_support.h',['../a64__gemm__s8__12x8_2dot__toolchain__support_8h.xhtml',1,'(Global Namespace)'],['../a64__gemm__u8__12x8_2dot__toolchain__support_8h.xhtml',1,'(Global Namespace)']]],
  ['dotgraphprinter',['DotGraphPrinter',['../classarm__compute_1_1graph_1_1_dot_graph_printer.xhtml',1,'arm_compute::graph']]],
  ['dotgraphprinter_2ecpp',['DotGraphPrinter.cpp',['../_dot_graph_printer_8cpp.xhtml',1,'']]],
  ['dotgraphprinter_2eh',['DotGraphPrinter.h',['../_dot_graph_printer_8h.xhtml',1,'']]],
  ['dotgraphvisitor',['DotGraphVisitor',['../classarm__compute_1_1graph_1_1_dot_graph_visitor.xhtml',1,'DotGraphVisitor'],['../classarm__compute_1_1graph_1_1_dot_graph_visitor.xhtml#aba079420016162d60cc142401885db44',1,'arm_compute::graph::DotGraphVisitor::DotGraphVisitor()']]],
  ['draw_5fdetection_5frectangle',['draw_detection_rectangle',['../namespacearm__compute_1_1utils.xhtml#ad1b5373f466a3945e1f0ef1c9943c357',1,'arm_compute::utils']]],
  ['dropoutlayer_2ecpp',['DropoutLayer.cpp',['../_dropout_layer_8cpp.xhtml',1,'']]],
  ['dst',['dst',['../namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4',1,'arm_compute::test::validation']]],
  ['dst_5fpadding',['dst_padding',['../namespacearm__compute_1_1test_1_1validation.xhtml#a78ba31dffb7eb7f94cf5821f0092bf67',1,'arm_compute::test::validation']]],
  ['dst_5fvalid_5fregion',['dst_valid_region',['../namespacearm__compute_1_1test_1_1validation.xhtml#a1c697c8d77faa9d6f180635d6509873c',1,'arm_compute::test::validation']]],
  ['dt1',['dt1',['../namespacearm__compute_1_1test_1_1validation.xhtml#a291ba30858ed1dc2a1154ddfcf28eac9',1,'arm_compute::test::validation']]],
  ['dt2',['dt2',['../namespacearm__compute_1_1test_1_1validation.xhtml#a80668d60af0d74d7e9f33bf4a233d695',1,'arm_compute::test::validation']]],
  ['dummy',['dummy',['../structarm__compute_1_1detail_1_1dummy.xhtml',1,'dummy&lt; T, S &gt;'],['../structarm__compute_1_1_c_l_l_k_internal_keypoint.xhtml#aaf67d90c5e431e85ea2b7681537beab9',1,'arm_compute::CLLKInternalKeypoint::dummy()'],['../structarm__compute_1_1_c_l_old_value.xhtml#a7531a17738ce5ec5517e2d160e7508a0',1,'arm_compute::CLOldValue::dummy()'],['../struct_internal_keypoint.xhtml#aaf67d90c5e431e85ea2b7681537beab9',1,'InternalKeypoint::dummy()'],['../structarm__compute_1_1detail_1_1dummy.xhtml#a9459460908c5314f6ea5333a397fea5b',1,'arm_compute::detail::dummy::dummy()'],['../namespacearm__compute_1_1graph.xhtml#acac9cbaeea226ed297804c012dc12b16abcf036b6f33e182d4705f4f5b1af13ac',1,'arm_compute::graph::Dummy()']]],
  ['dummyaccessor',['DummyAccessor',['../classarm__compute_1_1graph__utils_1_1_dummy_accessor.xhtml',1,'DummyAccessor'],['../classarm__compute_1_1graph__utils_1_1_dummy_accessor.xhtml#ac5ae9597ba20e5581726743fe7c154b5',1,'arm_compute::graph_utils::DummyAccessor::DummyAccessor(unsigned int maximum=1)'],['../classarm__compute_1_1graph__utils_1_1_dummy_accessor.xhtml#a4a48cd865f33e4a907338c42d652d80f',1,'arm_compute::graph_utils::DummyAccessor::DummyAccessor(DummyAccessor &amp;&amp;)=default']]],
  ['dummylayer',['DummyLayer',['../classarm__compute_1_1graph_1_1frontend_1_1_dummy_layer.xhtml',1,'DummyLayer'],['../classarm__compute_1_1graph_1_1frontend_1_1_dummy_layer.xhtml#a3ec4fedf20ceaf0c7bc62be065150f40',1,'arm_compute::graph::frontend::DummyLayer::DummyLayer()']]],
  ['dummynode',['DummyNode',['../classarm__compute_1_1graph_1_1_dummy_node.xhtml',1,'DummyNode'],['../classarm__compute_1_1graph_1_1_dummy_node.xhtml#aefa24b710045e042672a5e887c3efaef',1,'arm_compute::graph::DummyNode::DummyNode()']]],
  ['dummynode_2ecpp',['DummyNode.cpp',['../_dummy_node_8cpp.xhtml',1,'']]],
  ['dummynode_2eh',['DummyNode.h',['../_dummy_node_8h.xhtml',1,'']]],
  ['dup_5fn_2eh',['dup_n.h',['../dup__n_8h.xhtml',1,'']]],
  ['duplicate',['duplicate',['../classarm__compute_1_1_blob_memory_pool.xhtml#a1854bcee41d35bbd99a3ff7b274e3819',1,'arm_compute::BlobMemoryPool::duplicate()'],['../classarm__compute_1_1_i_memory_pool.xhtml#af6c6c5e675fab42e482d11d02df2a79e',1,'arm_compute::IMemoryPool::duplicate()'],['../classarm__compute_1_1_offset_memory_pool.xhtml#a1854bcee41d35bbd99a3ff7b274e3819',1,'arm_compute::OffsetMemoryPool::duplicate()']]],
  ['dynamic',['DYNAMIC',['../classarm__compute_1_1_i_scheduler.xhtml#ad3ab921e075d1edd827faf95870aa808a0fcc90da4811c877ba9f9c12f7d60bc9',1,'arm_compute::IScheduler']]]
];
