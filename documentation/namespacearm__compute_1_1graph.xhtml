<!-- HTML header for doxygen 1.8.9.1-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.11"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: arm_compute::graph Namespace Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
  $(window).load(resizeHeight);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { init_search(); });
</script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">Compute Library
   &#160;<span id="projectnumber">18.08</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.11 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li class="current"><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li><a href="annotated.xhtml"><span>Data&#160;Structures</span></a></li>
      <li><a href="files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="namespaces.xhtml"><span>Namespace&#160;List</span></a></li>
      <li><a href="namespacemembers.xhtml"><span>Namespace&#160;Members</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('namespacearm__compute_1_1graph.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#namespaces">Namespaces</a> &#124;
<a href="#nested-classes">Data Structures</a> &#124;
<a href="#typedef-members">Typedefs</a> &#124;
<a href="#enum-members">Enumerations</a> &#124;
<a href="#func-members">Functions</a> &#124;
<a href="#var-members">Variables</a>  </div>
  <div class="headertitle">
<div class="title">arm_compute::graph Namespace Reference</div>  </div>
</div><!--header-->
<div class="contents">
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="namespaces"></a>
Namespaces</h2></td></tr>
<tr class="memitem:namespacearm__compute_1_1graph_1_1backends"><td class="memItemLeft" align="right" valign="top"> &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1graph_1_1backends.xhtml">backends</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:namespacearm__compute_1_1graph_1_1detail"><td class="memItemLeft" align="right" valign="top"> &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1graph_1_1detail.xhtml">detail</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:namespacearm__compute_1_1graph_1_1frontend"><td class="memItemLeft" align="right" valign="top"> &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1graph_1_1frontend.xhtml">frontend</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"></a>
Data Structures</h2></td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1graph_1_1_activation_layer_node.xhtml">ActivationLayerNode</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Activation Layer node.  <a href="classarm__compute_1_1graph_1_1_activation_layer_node.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1graph_1_1_batch_normalization_layer_node.xhtml">BatchNormalizationLayerNode</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Batch Normalization Layer node.  <a href="classarm__compute_1_1graph_1_1_batch_normalization_layer_node.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1graph_1_1_channel_shuffle_layer_node.xhtml">ChannelShuffleLayerNode</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Channel Shuffle Layer node.  <a href="classarm__compute_1_1graph_1_1_channel_shuffle_layer_node.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1graph_1_1_concatenate_layer_node.xhtml">ConcatenateLayerNode</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Concatenation Layer node.  <a href="classarm__compute_1_1graph_1_1_concatenate_layer_node.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1graph_1_1_const_node.xhtml">ConstNode</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Const node.  <a href="classarm__compute_1_1graph_1_1_const_node.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1graph_1_1_convolution_layer_node.xhtml">ConvolutionLayerNode</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Convolution Layer node.  <a href="classarm__compute_1_1graph_1_1_convolution_layer_node.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1graph_1_1_deconvolution_layer_node.xhtml">DeconvolutionLayerNode</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Deconvolution Layer node.  <a href="classarm__compute_1_1graph_1_1_deconvolution_layer_node.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1graph_1_1_default_node_visitor.xhtml">DefaultNodeVisitor</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Default visitor implementation.  <a href="classarm__compute_1_1graph_1_1_default_node_visitor.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1graph_1_1_depth_concat_sub_tensor_mutator.xhtml">DepthConcatSubTensorMutator</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Mutation pass to optimize depth concatenation operations by using sub-tensors.  <a href="classarm__compute_1_1graph_1_1_depth_concat_sub_tensor_mutator.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1graph_1_1_depthwise_convolution_layer_node.xhtml">DepthwiseConvolutionLayerNode</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Depthwise Convolution Layer node.  <a href="classarm__compute_1_1graph_1_1_depthwise_convolution_layer_node.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1graph_1_1_dot_graph_printer.xhtml">DotGraphPrinter</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight"><a class="el" href="classarm__compute_1_1graph_1_1_graph.xhtml" title="Graph class. ">Graph</a> printer interface.  <a href="classarm__compute_1_1graph_1_1_dot_graph_printer.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1graph_1_1_dot_graph_visitor.xhtml">DotGraphVisitor</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight"><a class="el" href="classarm__compute_1_1graph_1_1_graph.xhtml" title="Graph class. ">Graph</a> printer visitor.  <a href="classarm__compute_1_1graph_1_1_dot_graph_visitor.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1graph_1_1_dummy_node.xhtml">DummyNode</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Dummy Layer node.  <a href="classarm__compute_1_1graph_1_1_dummy_node.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1graph_1_1_edge.xhtml">Edge</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight"><a class="el" href="classarm__compute_1_1graph_1_1_graph.xhtml" title="Graph class. ">Graph</a> <a class="el" href="classarm__compute_1_1graph_1_1_edge.xhtml" title="Graph Edge. ">Edge</a>.  <a href="classarm__compute_1_1graph_1_1_edge.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1graph_1_1_eltwise_layer_node.xhtml">EltwiseLayerNode</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Eltwise Layer node.  <a href="classarm__compute_1_1graph_1_1_eltwise_layer_node.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarm__compute_1_1graph_1_1_execution_task.xhtml">ExecutionTask</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Execution task.  <a href="structarm__compute_1_1graph_1_1_execution_task.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarm__compute_1_1graph_1_1_execution_workload.xhtml">ExecutionWorkload</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Execution workload.  <a href="structarm__compute_1_1graph_1_1_execution_workload.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1graph_1_1_flatten_layer_node.xhtml">FlattenLayerNode</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Flatten Layer node.  <a href="classarm__compute_1_1graph_1_1_flatten_layer_node.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1graph_1_1_fully_connected_layer_node.xhtml">FullyConnectedLayerNode</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Fully Connected Layer node.  <a href="classarm__compute_1_1graph_1_1_fully_connected_layer_node.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1graph_1_1_graph.xhtml">Graph</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight"><a class="el" href="classarm__compute_1_1graph_1_1_graph.xhtml" title="Graph class. ">Graph</a> class.  <a href="classarm__compute_1_1graph_1_1_graph.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1graph_1_1_graph_builder.xhtml">GraphBuilder</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight"><a class="el" href="classarm__compute_1_1graph_1_1_graph.xhtml" title="Graph class. ">Graph</a> builder class.  <a href="classarm__compute_1_1graph_1_1_graph_builder.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarm__compute_1_1graph_1_1_graph_config.xhtml">GraphConfig</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight"><a class="el" href="classarm__compute_1_1graph_1_1_graph.xhtml" title="Graph class. ">Graph</a> configuration structure Device target types.  <a href="structarm__compute_1_1graph_1_1_graph_config.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1graph_1_1_graph_context.xhtml">GraphContext</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight"><a class="el" href="classarm__compute_1_1graph_1_1_graph.xhtml" title="Graph class. ">Graph</a> context.  <a href="classarm__compute_1_1graph_1_1_graph_context.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1graph_1_1_graph_manager.xhtml">GraphManager</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight"><a class="el" href="classarm__compute_1_1graph_1_1_graph.xhtml" title="Graph class. ">Graph</a> manager class.  <a href="classarm__compute_1_1graph_1_1_graph_manager.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1graph_1_1_grouped_convolution_mutator.xhtml">GroupedConvolutionMutator</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Mutation pass to implement/optimize grouped convolutions.  <a href="classarm__compute_1_1graph_1_1_grouped_convolution_mutator.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1graph_1_1_i_graph_mutator.xhtml">IGraphMutator</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight"><a class="el" href="classarm__compute_1_1graph_1_1_graph.xhtml" title="Graph class. ">Graph</a> mutator interface.  <a href="classarm__compute_1_1graph_1_1_i_graph_mutator.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1graph_1_1_i_graph_printer.xhtml">IGraphPrinter</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight"><a class="el" href="classarm__compute_1_1graph_1_1_graph.xhtml" title="Graph class. ">Graph</a> printer interface.  <a href="classarm__compute_1_1graph_1_1_i_graph_printer.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1graph_1_1_i_node.xhtml">INode</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Node interface.  <a href="classarm__compute_1_1graph_1_1_i_node.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1graph_1_1_i_node_visitor.xhtml">INodeVisitor</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Node visitor interface.  <a href="classarm__compute_1_1graph_1_1_i_node_visitor.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1graph_1_1_in_place_operation_mutator.xhtml">InPlaceOperationMutator</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Mutation pass to optimize operations that can be performed in-place.  <a href="classarm__compute_1_1graph_1_1_in_place_operation_mutator.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1graph_1_1_input_node.xhtml">InputNode</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Input Layer node.  <a href="classarm__compute_1_1graph_1_1_input_node.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1graph_1_1_i_tensor_accessor.xhtml">ITensorAccessor</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight"><a class="el" href="classarm__compute_1_1graph_1_1_tensor.xhtml" title="Tensor object. ">Tensor</a> accessor interface.  <a href="classarm__compute_1_1graph_1_1_i_tensor_accessor.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1graph_1_1_i_tensor_handle.xhtml">ITensorHandle</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight"><a class="el" href="classarm__compute_1_1graph_1_1_tensor.xhtml" title="Tensor object. ">Tensor</a> handle interface object.  <a href="classarm__compute_1_1graph_1_1_i_tensor_handle.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarm__compute_1_1graph_1_1_memory_manager_context.xhtml">MemoryManagerContext</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Contains structs required for memory management.  <a href="structarm__compute_1_1graph_1_1_memory_manager_context.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1graph_1_1_node_execution_method_mutator.xhtml">NodeExecutionMethodMutator</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Mutation pass to fall-back to default execution method.  <a href="classarm__compute_1_1graph_1_1_node_execution_method_mutator.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1graph_1_1_node_fusion_mutator.xhtml">NodeFusionMutator</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Mutation pass to fuss nodes.  <a href="classarm__compute_1_1graph_1_1_node_fusion_mutator.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarm__compute_1_1graph_1_1_node_idx_pair.xhtml">NodeIdxPair</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">NodeID-index struct.  <a href="structarm__compute_1_1graph_1_1_node_idx_pair.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarm__compute_1_1graph_1_1_node_params.xhtml">NodeParams</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Common node parameters.  <a href="structarm__compute_1_1graph_1_1_node_params.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1graph_1_1_normalization_layer_node.xhtml">NormalizationLayerNode</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Normalization Layer node.  <a href="classarm__compute_1_1graph_1_1_normalization_layer_node.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1graph_1_1_output_node.xhtml">OutputNode</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Output Layer node.  <a href="classarm__compute_1_1graph_1_1_output_node.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1graph_1_1_pass_manager.xhtml">PassManager</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Pass manager.  <a href="classarm__compute_1_1graph_1_1_pass_manager.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1graph_1_1_permute_layer_node.xhtml">PermuteLayerNode</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Permute Layer node.  <a href="classarm__compute_1_1graph_1_1_permute_layer_node.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1graph_1_1_pooling_layer_node.xhtml">PoolingLayerNode</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Pooling Layer node.  <a href="classarm__compute_1_1graph_1_1_pooling_layer_node.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1graph_1_1_reshape_layer_node.xhtml">ReshapeLayerNode</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Reshape Layer node.  <a href="classarm__compute_1_1graph_1_1_reshape_layer_node.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1graph_1_1_resize_layer_node.xhtml">ResizeLayerNode</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Resize Layer node.  <a href="classarm__compute_1_1graph_1_1_resize_layer_node.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1graph_1_1_softmax_layer_node.xhtml">SoftmaxLayerNode</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Softmax Layer node.  <a href="classarm__compute_1_1graph_1_1_softmax_layer_node.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1graph_1_1_split_layer_node.xhtml">SplitLayerNode</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Split Layer node.  <a href="classarm__compute_1_1graph_1_1_split_layer_node.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1graph_1_1_split_layer_sub_tensor_mutator.xhtml">SplitLayerSubTensorMutator</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Mutation pass to optimize split operations by using sub-tensors.  <a href="classarm__compute_1_1graph_1_1_split_layer_sub_tensor_mutator.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1graph_1_1_task_executor.xhtml">TaskExecutor</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Task executor.  <a href="classarm__compute_1_1graph_1_1_task_executor.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1graph_1_1_tensor.xhtml">Tensor</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight"><a class="el" href="classarm__compute_1_1graph_1_1_tensor.xhtml" title="Tensor object. ">Tensor</a> object.  <a href="classarm__compute_1_1graph_1_1_tensor.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structarm__compute_1_1graph_1_1_tensor_descriptor.xhtml">TensorDescriptor</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight"><a class="el" href="classarm__compute_1_1graph_1_1_tensor.xhtml" title="Tensor object. ">Tensor</a> metadata class.  <a href="structarm__compute_1_1graph_1_1_tensor_descriptor.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="typedef-members"></a>
Typedefs</h2></td></tr>
<tr class="memitem:a41c3f59161734b8492782359f583b676"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1graph.xhtml#a41c3f59161734b8492782359f583b676">ITensorAccessorUPtr</a> = std::unique_ptr&lt; <a class="el" href="classarm__compute_1_1graph_1_1_i_tensor_accessor.xhtml">ITensorAccessor</a> &gt;</td></tr>
<tr class="separator:a41c3f59161734b8492782359f583b676"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a615af95e19b5d9f74d2760183566a9a3"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1graph.xhtml#a615af95e19b5d9f74d2760183566a9a3">TensorID</a> = unsigned int</td></tr>
<tr class="separator:a615af95e19b5d9f74d2760183566a9a3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a56952a8591a9d8481450ae707ae355e7"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1graph.xhtml#a56952a8591a9d8481450ae707ae355e7">NodeID</a> = unsigned int</td></tr>
<tr class="separator:a56952a8591a9d8481450ae707ae355e7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abba17a56bbf16c7cbc7acd4aa54abcea"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1graph.xhtml#abba17a56bbf16c7cbc7acd4aa54abcea">EdgeID</a> = unsigned int</td></tr>
<tr class="separator:abba17a56bbf16c7cbc7acd4aa54abcea"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5f9016ea3e28a033b7cc216bdda912be"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1graph.xhtml#a5f9016ea3e28a033b7cc216bdda912be">Activation</a> = <a class="el" href="classarm__compute_1_1_activation_layer_info.xhtml#a56297e0f7b215eea46c818cb7528d9ea">arm_compute::ActivationLayerInfo::ActivationFunction</a></td></tr>
<tr class="memdesc:a5f9016ea3e28a033b7cc216bdda912be"><td class="mdescLeft">&#160;</td><td class="mdescRight">GraphID strong type.  <a href="#a5f9016ea3e28a033b7cc216bdda912be">More...</a><br /></td></tr>
<tr class="separator:a5f9016ea3e28a033b7cc216bdda912be"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a720ead698a117f7a16af6496f61aa6b4"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1graph.xhtml#a720ead698a117f7a16af6496f61aa6b4">GraphID</a> = <a class="el" href="classarm__compute_1_1strong__type_1_1_strong_type.xhtml">strong_type::StrongType</a>&lt; unsigned int, struct graph_id_t, <a class="el" href="structarm__compute_1_1strong__type_1_1_comparable.xhtml">strong_type::Comparable</a> &gt;</td></tr>
<tr class="memdesc:a720ead698a117f7a16af6496f61aa6b4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Constant TensorID specifying an equivalent of null tensor.  <a href="#a720ead698a117f7a16af6496f61aa6b4">More...</a><br /></td></tr>
<tr class="separator:a720ead698a117f7a16af6496f61aa6b4"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="enum-members"></a>
Enumerations</h2></td></tr>
<tr class="memitem:a31488d29805a596498c0234ae392d35d"><td class="memItemLeft" align="right" valign="top">enum &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1graph.xhtml#a31488d29805a596498c0234ae392d35d">Target</a> { <a class="el" href="namespacearm__compute_1_1graph.xhtml#a31488d29805a596498c0234ae392d35da1c04cc3823d476c3017238679a0fdf52">UNSPECIFIED</a>, 
<a class="el" href="namespacearm__compute_1_1graph.xhtml#a31488d29805a596498c0234ae392d35dacaf162e9233294cadf62d2a71a14ca09">NEON</a>, 
<a class="el" href="namespacearm__compute_1_1graph.xhtml#a31488d29805a596498c0234ae392d35da5bc574a47246f122016869b32a6aa6f0">CL</a>, 
<a class="el" href="namespacearm__compute_1_1graph.xhtml#a31488d29805a596498c0234ae392d35da7359c3eb5c57547295a76ac1bf775b29">GC</a>
 }</td></tr>
<tr class="separator:a31488d29805a596498c0234ae392d35d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa12973876c037bddff8e9ece94aca0e4"><td class="memItemLeft" align="right" valign="top">enum &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1graph.xhtml#aa12973876c037bddff8e9ece94aca0e4">EltwiseOperation</a> { <a class="el" href="namespacearm__compute_1_1graph.xhtml#aa12973876c037bddff8e9ece94aca0e4aec211f7c20af43e742bf2570c3cb84f9">Add</a>, 
<a class="el" href="namespacearm__compute_1_1graph.xhtml#aa12973876c037bddff8e9ece94aca0e4ae80155eceb940c89e2de63ad05868db2">Sub</a>, 
<a class="el" href="namespacearm__compute_1_1graph.xhtml#aa12973876c037bddff8e9ece94aca0e4a62b6d55816cf737bfc6f42e60df1a3f2">Mul</a>
 }<tr class="memdesc:aa12973876c037bddff8e9ece94aca0e4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Supported Element-wise operations.  <a href="namespacearm__compute_1_1graph.xhtml#aa12973876c037bddff8e9ece94aca0e4">More...</a><br /></td></tr>
</td></tr>
<tr class="separator:aa12973876c037bddff8e9ece94aca0e4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a683661ae75dcb7aef16b9c9bde31517d"><td class="memItemLeft" align="right" valign="top">enum &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1graph.xhtml#a683661ae75dcb7aef16b9c9bde31517d">ConvolutionMethod</a> { <a class="el" href="namespacearm__compute_1_1graph.xhtml#a683661ae75dcb7aef16b9c9bde31517da7a1920d61156abc05a60135aefe8bc67">Default</a>, 
<a class="el" href="namespacearm__compute_1_1graph.xhtml#a683661ae75dcb7aef16b9c9bde31517da5174aac3927faa9ee34befb7fc87a9e3">GEMM</a>, 
<a class="el" href="namespacearm__compute_1_1graph.xhtml#a683661ae75dcb7aef16b9c9bde31517dafd1dd0c603be8170f9eae0be9f2f6afb">Direct</a>, 
<a class="el" href="namespacearm__compute_1_1graph.xhtml#a683661ae75dcb7aef16b9c9bde31517da09db1dd1078ec6bdbe2722b4558e578f">Winograd</a>
 }<tr class="memdesc:a683661ae75dcb7aef16b9c9bde31517d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Supported Convolution layer methods.  <a href="namespacearm__compute_1_1graph.xhtml#a683661ae75dcb7aef16b9c9bde31517d">More...</a><br /></td></tr>
</td></tr>
<tr class="separator:a683661ae75dcb7aef16b9c9bde31517d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a75ce9b1baad4303a53124d6f0795821f"><td class="memItemLeft" align="right" valign="top">enum &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1graph.xhtml#a75ce9b1baad4303a53124d6f0795821f">DepthwiseConvolutionMethod</a> { <a class="el" href="namespacearm__compute_1_1graph.xhtml#a75ce9b1baad4303a53124d6f0795821fa7a1920d61156abc05a60135aefe8bc67">Default</a>, 
<a class="el" href="namespacearm__compute_1_1graph.xhtml#a75ce9b1baad4303a53124d6f0795821fa87dc825930f866018839a6374a5e68d2">GEMV</a>, 
<a class="el" href="namespacearm__compute_1_1graph.xhtml#a75ce9b1baad4303a53124d6f0795821fa3bb7b7f3f021a006e65111fc1d226938">Optimized3x3</a>
 }<tr class="memdesc:a75ce9b1baad4303a53124d6f0795821f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Supported Depthwise Convolution layer methods.  <a href="namespacearm__compute_1_1graph.xhtml#a75ce9b1baad4303a53124d6f0795821f">More...</a><br /></td></tr>
</td></tr>
<tr class="separator:a75ce9b1baad4303a53124d6f0795821f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac85a46f3ebd3ab09f576a994ac2dce11"><td class="memItemLeft" align="right" valign="top">enum &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1graph.xhtml#ac85a46f3ebd3ab09f576a994ac2dce11">FastMathHint</a> { <a class="el" href="namespacearm__compute_1_1graph.xhtml#ac85a46f3ebd3ab09f576a994ac2dce11a00d23a76e43b46dae9ec7aa9dcbebb32">Enabled</a>, 
<a class="el" href="namespacearm__compute_1_1graph.xhtml#ac85a46f3ebd3ab09f576a994ac2dce11ab9f5c797ebbf55adccdd8539a65a0241">Disabled</a>
 }<tr class="memdesc:ac85a46f3ebd3ab09f576a994ac2dce11"><td class="mdescLeft">&#160;</td><td class="mdescRight">Enable or disable fast math for Convolution layer.  <a href="namespacearm__compute_1_1graph.xhtml#ac85a46f3ebd3ab09f576a994ac2dce11">More...</a><br /></td></tr>
</td></tr>
<tr class="separator:ac85a46f3ebd3ab09f576a994ac2dce11"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acac9cbaeea226ed297804c012dc12b16"><td class="memItemLeft" align="right" valign="top">enum &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1graph.xhtml#acac9cbaeea226ed297804c012dc12b16">NodeType</a> { <br />
&#160;&#160;<a class="el" href="namespacearm__compute_1_1graph.xhtml#acac9cbaeea226ed297804c012dc12b16a041485a3394541feee82a34d40249d70">ActivationLayer</a>, 
<a class="el" href="namespacearm__compute_1_1graph.xhtml#acac9cbaeea226ed297804c012dc12b16ad0146d2051fad860923cf31f7e00a732">BatchNormalizationLayer</a>, 
<a class="el" href="namespacearm__compute_1_1graph.xhtml#acac9cbaeea226ed297804c012dc12b16af5505217824e3e9e8000ef0d63360158">ChannelShuffleLayer</a>, 
<a class="el" href="namespacearm__compute_1_1graph.xhtml#acac9cbaeea226ed297804c012dc12b16a5c436066fbad2e22ccab352c0d554809">ConcatenateLayer</a>, 
<br />
&#160;&#160;<a class="el" href="namespacearm__compute_1_1graph.xhtml#acac9cbaeea226ed297804c012dc12b16aa252659b59a03bc61e5ec827ab4448b7">ConvolutionLayer</a>, 
<a class="el" href="namespacearm__compute_1_1graph.xhtml#acac9cbaeea226ed297804c012dc12b16ac814c26a7c5317e2a2f58fe0e5a0d410">DeconvolutionLayer</a>, 
<a class="el" href="namespacearm__compute_1_1graph.xhtml#acac9cbaeea226ed297804c012dc12b16a5b7955cb74be105cc7e044a370d4fce8">DepthwiseConvolutionLayer</a>, 
<a class="el" href="namespacearm__compute_1_1graph.xhtml#acac9cbaeea226ed297804c012dc12b16ad1b3837fe6a80018e7002c7f7905439d">EltwiseLayer</a>, 
<br />
&#160;&#160;<a class="el" href="namespacearm__compute_1_1graph.xhtml#acac9cbaeea226ed297804c012dc12b16ad87240455a60f188b358a370fe1a83a5">FlattenLayer</a>, 
<a class="el" href="namespacearm__compute_1_1graph.xhtml#acac9cbaeea226ed297804c012dc12b16a658061ff1dac70c02116fae6c044da1a">FullyConnectedLayer</a>, 
<a class="el" href="namespacearm__compute_1_1graph.xhtml#acac9cbaeea226ed297804c012dc12b16a227ecc6e858c8d1f61664f1967173bea">NormalizationLayer</a>, 
<a class="el" href="namespacearm__compute_1_1graph.xhtml#acac9cbaeea226ed297804c012dc12b16aa84a001cb23ac473e7aae73a9eaf369a">PermuteLayer</a>, 
<br />
&#160;&#160;<a class="el" href="namespacearm__compute_1_1graph.xhtml#acac9cbaeea226ed297804c012dc12b16aea068ae5aae640d018c4300bc7619575">PoolingLayer</a>, 
<a class="el" href="namespacearm__compute_1_1graph.xhtml#acac9cbaeea226ed297804c012dc12b16a1ee0d44744be1e17e38ad5a4e9dcf5dd">ReshapeLayer</a>, 
<a class="el" href="namespacearm__compute_1_1graph.xhtml#acac9cbaeea226ed297804c012dc12b16aea2ded20d74b2bf7921551363737777e">ResizeLayer</a>, 
<a class="el" href="namespacearm__compute_1_1graph.xhtml#acac9cbaeea226ed297804c012dc12b16a4a9567bc4a6c28a527c973010eaf9a25">SoftmaxLayer</a>, 
<br />
&#160;&#160;<a class="el" href="namespacearm__compute_1_1graph.xhtml#acac9cbaeea226ed297804c012dc12b16af2ee14b628c0a45e1682de8f33983dc1">SplitLayer</a>, 
<a class="el" href="namespacearm__compute_1_1graph.xhtml#acac9cbaeea226ed297804c012dc12b16a324118a6721dd6b8a9b9f4e327df2bf5">Input</a>, 
<a class="el" href="namespacearm__compute_1_1graph.xhtml#acac9cbaeea226ed297804c012dc12b16a29c2c02a361c9d7028472e5d92cd4a54">Output</a>, 
<a class="el" href="namespacearm__compute_1_1graph.xhtml#acac9cbaeea226ed297804c012dc12b16a79ceee9f8e3c1f0cc74223e05d2448bf">Const</a>, 
<br />
&#160;&#160;<a class="el" href="namespacearm__compute_1_1graph.xhtml#acac9cbaeea226ed297804c012dc12b16abcf036b6f33e182d4705f4f5b1af13ac">Dummy</a>
<br />
 }<tr class="memdesc:acac9cbaeea226ed297804c012dc12b16"><td class="mdescLeft">&#160;</td><td class="mdescRight">Supported nodes.  <a href="namespacearm__compute_1_1graph.xhtml#acac9cbaeea226ed297804c012dc12b16">More...</a><br /></td></tr>
</td></tr>
<tr class="separator:acac9cbaeea226ed297804c012dc12b16"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac866c81ec0f5526139dfc62ddc3f206e"><td class="memItemLeft" align="right" valign="top">enum &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1graph.xhtml#ac866c81ec0f5526139dfc62ddc3f206e">MemoryManagerAffinity</a> { <a class="el" href="namespacearm__compute_1_1graph.xhtml#ac866c81ec0f5526139dfc62ddc3f206ea7e62bc342f41c946868f0ea6f0b712d8">Buffer</a>, 
<a class="el" href="namespacearm__compute_1_1graph.xhtml#ac866c81ec0f5526139dfc62ddc3f206eadfd0a82c4bf37b1e90b690a22a20692e">Offset</a>
 }<tr class="memdesc:ac866c81ec0f5526139dfc62ddc3f206e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Backend Memory Manager affinity.  <a href="namespacearm__compute_1_1graph.xhtml#ac866c81ec0f5526139dfc62ddc3f206e">More...</a><br /></td></tr>
</td></tr>
<tr class="separator:ac866c81ec0f5526139dfc62ddc3f206e"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:a96552dd9dcc894d118d68697efad8fd8"><td class="memItemLeft" align="right" valign="top">std::vector&lt; <a class="el" href="namespacearm__compute_1_1graph.xhtml#a56952a8591a9d8481450ae707ae355e7">NodeID</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1graph.xhtml#a96552dd9dcc894d118d68697efad8fd8">bfs</a> (<a class="el" href="classarm__compute_1_1graph_1_1_graph.xhtml">Graph</a> &amp;g)</td></tr>
<tr class="memdesc:a96552dd9dcc894d118d68697efad8fd8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Breadth first search traversal.  <a href="#a96552dd9dcc894d118d68697efad8fd8">More...</a><br /></td></tr>
<tr class="separator:a96552dd9dcc894d118d68697efad8fd8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aee3a27da0a4769cf70186029719495c5"><td class="memItemLeft" align="right" valign="top">std::vector&lt; <a class="el" href="namespacearm__compute_1_1graph.xhtml#a56952a8591a9d8481450ae707ae355e7">NodeID</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1graph.xhtml#aee3a27da0a4769cf70186029719495c5">dfs</a> (<a class="el" href="classarm__compute_1_1graph_1_1_graph.xhtml">Graph</a> &amp;g)</td></tr>
<tr class="memdesc:aee3a27da0a4769cf70186029719495c5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Depth first search traversal.  <a href="#aee3a27da0a4769cf70186029719495c5">More...</a><br /></td></tr>
<tr class="separator:aee3a27da0a4769cf70186029719495c5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4654d54572949314f2a3bd0163179897"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespacearm__compute_1_1graph.xhtml#a31488d29805a596498c0234ae392d35d">Target</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1graph.xhtml#a4654d54572949314f2a3bd0163179897">target_from_name</a> (const std::string &amp;name)</td></tr>
<tr class="memdesc:a4654d54572949314f2a3bd0163179897"><td class="mdescLeft">&#160;</td><td class="mdescRight">Converts a string to a strong types enumeration <a class="el" href="namespacearm__compute_1_1graph.xhtml#a31488d29805a596498c0234ae392d35d">Target</a>.  <a href="#a4654d54572949314f2a3bd0163179897">More...</a><br /></td></tr>
<tr class="separator:a4654d54572949314f2a3bd0163179897"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a81a73c1d68104f16b1d2f63e412b06be"><td class="memItemLeft" align="right" valign="top">inline::std::istream &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1graph.xhtml#a81a73c1d68104f16b1d2f63e412b06be">operator&gt;&gt;</a> (::std::istream &amp;stream, <a class="el" href="namespacearm__compute_1_1graph.xhtml#a31488d29805a596498c0234ae392d35d">Target</a> &amp;target)</td></tr>
<tr class="memdesc:a81a73c1d68104f16b1d2f63e412b06be"><td class="mdescLeft">&#160;</td><td class="mdescRight">Input Stream operator for <a class="el" href="namespacearm__compute_1_1graph.xhtml#a31488d29805a596498c0234ae392d35d">Target</a>.  <a href="#a81a73c1d68104f16b1d2f63e412b06be">More...</a><br /></td></tr>
<tr class="separator:a81a73c1d68104f16b1d2f63e412b06be"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7e067080ce8169b2f8be64c190edab9e"><td class="memItemLeft" align="right" valign="top">inline::std::ostream &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1graph.xhtml#a7e067080ce8169b2f8be64c190edab9e">operator&lt;&lt;</a> (::std::ostream &amp;os, const <a class="el" href="namespacearm__compute_1_1graph.xhtml#a31488d29805a596498c0234ae392d35d">Target</a> &amp;target)</td></tr>
<tr class="memdesc:a7e067080ce8169b2f8be64c190edab9e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Formatted output of the Target.  <a href="#a7e067080ce8169b2f8be64c190edab9e">More...</a><br /></td></tr>
<tr class="separator:a7e067080ce8169b2f8be64c190edab9e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a108f26d15227710831dbdb30e40e608e"><td class="memItemLeft" align="right" valign="top">inline::std::ostream &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1graph.xhtml#a108f26d15227710831dbdb30e40e608e">operator&lt;&lt;</a> (::std::ostream &amp;os, const <a class="el" href="namespacearm__compute_1_1graph.xhtml#acac9cbaeea226ed297804c012dc12b16">NodeType</a> &amp;node_type)</td></tr>
<tr class="separator:a108f26d15227710831dbdb30e40e608e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abcd88ed51472e534decef274fb32bcaa"><td class="memItemLeft" align="right" valign="top">inline::std::ostream &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1graph.xhtml#abcd88ed51472e534decef274fb32bcaa">operator&lt;&lt;</a> (::std::ostream &amp;os, const <a class="el" href="namespacearm__compute_1_1graph.xhtml#aa12973876c037bddff8e9ece94aca0e4">EltwiseOperation</a> &amp;eltwise_op)</td></tr>
<tr class="memdesc:abcd88ed51472e534decef274fb32bcaa"><td class="mdescLeft">&#160;</td><td class="mdescRight">Formatted output of the EltwiseOperation type.  <a href="#abcd88ed51472e534decef274fb32bcaa">More...</a><br /></td></tr>
<tr class="separator:abcd88ed51472e534decef274fb32bcaa"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab90b7a7fcc12792b0b6cb6486bb383dd"><td class="memItemLeft" align="right" valign="top">inline::std::ostream &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1graph.xhtml#ab90b7a7fcc12792b0b6cb6486bb383dd">operator&lt;&lt;</a> (::std::ostream &amp;os, const <a class="el" href="namespacearm__compute_1_1graph.xhtml#a683661ae75dcb7aef16b9c9bde31517d">ConvolutionMethod</a> &amp;method)</td></tr>
<tr class="memdesc:ab90b7a7fcc12792b0b6cb6486bb383dd"><td class="mdescLeft">&#160;</td><td class="mdescRight">Formatted output of the ConvolutionMethod type.  <a href="#ab90b7a7fcc12792b0b6cb6486bb383dd">More...</a><br /></td></tr>
<tr class="separator:ab90b7a7fcc12792b0b6cb6486bb383dd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6c721497fdfc121b38630f89b625ac39"><td class="memItemLeft" align="right" valign="top">inline::std::ostream &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1graph.xhtml#a6c721497fdfc121b38630f89b625ac39">operator&lt;&lt;</a> (::std::ostream &amp;os, const <a class="el" href="namespacearm__compute_1_1graph.xhtml#ac85a46f3ebd3ab09f576a994ac2dce11">FastMathHint</a> &amp;hint)</td></tr>
<tr class="memdesc:a6c721497fdfc121b38630f89b625ac39"><td class="mdescLeft">&#160;</td><td class="mdescRight">Formatted output of the FastMathHint type.  <a href="#a6c721497fdfc121b38630f89b625ac39">More...</a><br /></td></tr>
<tr class="separator:a6c721497fdfc121b38630f89b625ac39"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a36f71403d9328a10245a6d9d62518527"><td class="memItemLeft" align="right" valign="top">inline::std::ostream &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1graph.xhtml#a36f71403d9328a10245a6d9d62518527">operator&lt;&lt;</a> (::std::ostream &amp;os, const <a class="el" href="namespacearm__compute_1_1graph.xhtml#a75ce9b1baad4303a53124d6f0795821f">DepthwiseConvolutionMethod</a> &amp;method)</td></tr>
<tr class="memdesc:a36f71403d9328a10245a6d9d62518527"><td class="mdescLeft">&#160;</td><td class="mdescRight">Formatted output of the DepthwiseConvolutionMethod type.  <a href="#a36f71403d9328a10245a6d9d62518527">More...</a><br /></td></tr>
<tr class="separator:a36f71403d9328a10245a6d9d62518527"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ade2275ecfd6f344e3ec7086427863aa8"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structarm__compute_1_1graph_1_1_tensor_descriptor.xhtml">TensorDescriptor</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1graph.xhtml#ade2275ecfd6f344e3ec7086427863aa8">get_tensor_descriptor</a> (const <a class="el" href="classarm__compute_1_1graph_1_1_graph.xhtml">Graph</a> &amp;g, <a class="el" href="namespacearm__compute_1_1graph.xhtml#a615af95e19b5d9f74d2760183566a9a3">TensorID</a> tid)</td></tr>
<tr class="memdesc:ade2275ecfd6f344e3ec7086427863aa8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the tensor descriptor of a given tensor.  <a href="#ade2275ecfd6f344e3ec7086427863aa8">More...</a><br /></td></tr>
<tr class="separator:ade2275ecfd6f344e3ec7086427863aa8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4ebedbbf720dd9a5bd14584f723b056e"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm__compute_1_1_status.xhtml">Status</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1graph.xhtml#a4ebedbbf720dd9a5bd14584f723b056e">set_tensor_accessor</a> (<a class="el" href="classarm__compute_1_1graph_1_1_tensor.xhtml">Tensor</a> *tensor, std::unique_ptr&lt; <a class="el" href="classarm__compute_1_1graph_1_1_i_tensor_accessor.xhtml">ITensorAccessor</a> &gt; accessor)</td></tr>
<tr class="memdesc:a4ebedbbf720dd9a5bd14584f723b056e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets an accessor on a given tensor.  <a href="#a4ebedbbf720dd9a5bd14584f723b056e">More...</a><br /></td></tr>
<tr class="separator:a4ebedbbf720dd9a5bd14584f723b056e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6f7790ee9fa15226c7f31e0c74f1d20c"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1graph.xhtml#a6f7790ee9fa15226c7f31e0c74f1d20c">is_target_supported</a> (<a class="el" href="namespacearm__compute_1_1graph.xhtml#a31488d29805a596498c0234ae392d35d">Target</a> target)</td></tr>
<tr class="memdesc:a6f7790ee9fa15226c7f31e0c74f1d20c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Checks if a specific target is supported.  <a href="#a6f7790ee9fa15226c7f31e0c74f1d20c">More...</a><br /></td></tr>
<tr class="separator:a6f7790ee9fa15226c7f31e0c74f1d20c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abf6f9982517bc455c2ea36250e61419e"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespacearm__compute_1_1graph.xhtml#a31488d29805a596498c0234ae392d35d">Target</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1graph.xhtml#abf6f9982517bc455c2ea36250e61419e">get_default_target</a> ()</td></tr>
<tr class="memdesc:abf6f9982517bc455c2ea36250e61419e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns default target for execution.  <a href="#abf6f9982517bc455c2ea36250e61419e">More...</a><br /></td></tr>
<tr class="separator:abf6f9982517bc455c2ea36250e61419e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aae59dce83cb7fc9cfa5e445ef6e5d27d"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1graph.xhtml#aae59dce83cb7fc9cfa5e445ef6e5d27d">force_target_to_graph</a> (<a class="el" href="classarm__compute_1_1graph_1_1_graph.xhtml">Graph</a> &amp;g, <a class="el" href="namespacearm__compute_1_1graph.xhtml#a31488d29805a596498c0234ae392d35d">Target</a> target)</td></tr>
<tr class="memdesc:aae59dce83cb7fc9cfa5e445ef6e5d27d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Forces a single target to all graph constructs.  <a href="#aae59dce83cb7fc9cfa5e445ef6e5d27d">More...</a><br /></td></tr>
<tr class="separator:aae59dce83cb7fc9cfa5e445ef6e5d27d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a119ab96867c279bb7769e0b050cd0cec"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm__compute_1_1graph_1_1_pass_manager.xhtml">PassManager</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1graph.xhtml#a119ab96867c279bb7769e0b050cd0cec">create_default_pass_manager</a> (<a class="el" href="namespacearm__compute_1_1graph.xhtml#a31488d29805a596498c0234ae392d35d">Target</a> target)</td></tr>
<tr class="memdesc:a119ab96867c279bb7769e0b050cd0cec"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates a default <a class="el" href="classarm__compute_1_1graph_1_1_pass_manager.xhtml">PassManager</a>.  <a href="#a119ab96867c279bb7769e0b050cd0cec">More...</a><br /></td></tr>
<tr class="separator:a119ab96867c279bb7769e0b050cd0cec"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4e9f20d289a4880de2a2937fe363ccc0"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1graph.xhtml#a4e9f20d289a4880de2a2937fe363ccc0">setup_default_graph_context</a> (<a class="el" href="classarm__compute_1_1graph_1_1_graph_context.xhtml">GraphContext</a> &amp;ctx)</td></tr>
<tr class="memdesc:a4e9f20d289a4880de2a2937fe363ccc0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Default setups the graph context if not done manually.  <a href="#a4e9f20d289a4880de2a2937fe363ccc0">More...</a><br /></td></tr>
<tr class="separator:a4e9f20d289a4880de2a2937fe363ccc0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af1e24c6fcb185d532695bce9bd9b0d8d"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1graph.xhtml#af1e24c6fcb185d532695bce9bd9b0d8d">release_default_graph_context</a> (<a class="el" href="classarm__compute_1_1graph_1_1_graph_context.xhtml">GraphContext</a> &amp;ctx)</td></tr>
<tr class="memdesc:af1e24c6fcb185d532695bce9bd9b0d8d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Default releases the graph context if not done manually.  <a href="#af1e24c6fcb185d532695bce9bd9b0d8d">More...</a><br /></td></tr>
<tr class="separator:af1e24c6fcb185d532695bce9bd9b0d8d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7be409872d37c8922e485ca70d845621"><td class="memItemLeft" align="right" valign="top">size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1graph.xhtml#a7be409872d37c8922e485ca70d845621">get_dimension_size</a> (const <a class="el" href="structarm__compute_1_1graph_1_1_tensor_descriptor.xhtml">TensorDescriptor</a> &amp;descriptor, const <a class="el" href="namespacearm__compute.xhtml#a74ce3f7420453d3446218ff3b7453e02">DataLayoutDimension</a> data_layout_dimension)</td></tr>
<tr class="memdesc:a7be409872d37c8922e485ca70d845621"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get size of a tensor's given dimension depending on its layout.  <a href="#a7be409872d37c8922e485ca70d845621">More...</a><br /></td></tr>
<tr class="separator:a7be409872d37c8922e485ca70d845621"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a415d13754baa4f3d60d41b1691d1225b"><td class="memItemLeft" align="right" valign="top">size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1graph.xhtml#a415d13754baa4f3d60d41b1691d1225b">get_dimension_idx</a> (const <a class="el" href="structarm__compute_1_1graph_1_1_tensor_descriptor.xhtml">TensorDescriptor</a> &amp;descriptor, const <a class="el" href="namespacearm__compute.xhtml#a74ce3f7420453d3446218ff3b7453e02">DataLayoutDimension</a> data_layout_dimension)</td></tr>
<tr class="memdesc:a415d13754baa4f3d60d41b1691d1225b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get index of a tensor's given dimension depending on its layout.  <a href="#a415d13754baa4f3d60d41b1691d1225b">More...</a><br /></td></tr>
<tr class="separator:a415d13754baa4f3d60d41b1691d1225b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2591ebfbe2a99276469d4c27710b0bde"><td class="memItemLeft" align="right" valign="top">std::vector&lt; <a class="el" href="structarm__compute_1_1graph_1_1_node_idx_pair.xhtml">NodeIdxPair</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1graph.xhtml#a2591ebfbe2a99276469d4c27710b0bde">get_driving_nodes</a> (const <a class="el" href="classarm__compute_1_1graph_1_1_i_node.xhtml">INode</a> &amp;node)</td></tr>
<tr class="memdesc:a2591ebfbe2a99276469d4c27710b0bde"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the list of driving nodes of a given node.  <a href="#a2591ebfbe2a99276469d4c27710b0bde">More...</a><br /></td></tr>
<tr class="separator:a2591ebfbe2a99276469d4c27710b0bde"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6fdc4f8803626c0be9af825b976ae1bd"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1graph.xhtml#a6fdc4f8803626c0be9af825b976ae1bd">configure_tensor</a> (<a class="el" href="classarm__compute_1_1graph_1_1_tensor.xhtml">Tensor</a> *tensor)</td></tr>
<tr class="memdesc:a6fdc4f8803626c0be9af825b976ae1bd"><td class="mdescLeft">&#160;</td><td class="mdescRight">Configures tensor.  <a href="#a6fdc4f8803626c0be9af825b976ae1bd">More...</a><br /></td></tr>
<tr class="separator:a6fdc4f8803626c0be9af825b976ae1bd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2f68147a36e1fdd0468e746e02a4b487"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1graph.xhtml#a2f68147a36e1fdd0468e746e02a4b487">execute_task</a> (<a class="el" href="structarm__compute_1_1graph_1_1_execution_task.xhtml">ExecutionTask</a> &amp;task)</td></tr>
<tr class="separator:a2f68147a36e1fdd0468e746e02a4b487"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="var-members"></a>
Variables</h2></td></tr>
<tr class="memitem:aa94938a3eb11fda4724c362c53c28f24"><td class="memItemLeft" align="right" valign="top">constexpr <a class="el" href="namespacearm__compute_1_1graph.xhtml#a615af95e19b5d9f74d2760183566a9a3">TensorID</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1graph.xhtml#aa94938a3eb11fda4724c362c53c28f24">NullTensorID</a> = std::numeric_limits&lt;<a class="el" href="namespacearm__compute_1_1graph.xhtml#a615af95e19b5d9f74d2760183566a9a3">TensorID</a>&gt;::max()</td></tr>
<tr class="memdesc:aa94938a3eb11fda4724c362c53c28f24"><td class="mdescLeft">&#160;</td><td class="mdescRight">Constant NodeID specifying an equivalent of null node.  <a href="#aa94938a3eb11fda4724c362c53c28f24">More...</a><br /></td></tr>
<tr class="separator:aa94938a3eb11fda4724c362c53c28f24"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aad3f5296ec88b9d552c109b04b89ad9f"><td class="memItemLeft" align="right" valign="top">constexpr <a class="el" href="namespacearm__compute_1_1graph.xhtml#a56952a8591a9d8481450ae707ae355e7">NodeID</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1graph.xhtml#aad3f5296ec88b9d552c109b04b89ad9f">EmptyNodeID</a> = std::numeric_limits&lt;<a class="el" href="namespacearm__compute_1_1graph.xhtml#a56952a8591a9d8481450ae707ae355e7">NodeID</a>&gt;::max()</td></tr>
<tr class="memdesc:aad3f5296ec88b9d552c109b04b89ad9f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Constant EdgeID specifying an equivalent of null edge.  <a href="#aad3f5296ec88b9d552c109b04b89ad9f">More...</a><br /></td></tr>
<tr class="separator:aad3f5296ec88b9d552c109b04b89ad9f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8e0b093eda0649ddbce791bb5076104f"><td class="memItemLeft" align="right" valign="top">constexpr <a class="el" href="namespacearm__compute_1_1graph.xhtml#abba17a56bbf16c7cbc7acd4aa54abcea">EdgeID</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1graph.xhtml#a8e0b093eda0649ddbce791bb5076104f">EmptyEdgeID</a> = std::numeric_limits&lt;<a class="el" href="namespacearm__compute_1_1graph.xhtml#abba17a56bbf16c7cbc7acd4aa54abcea">EdgeID</a>&gt;::max()</td></tr>
<tr class="separator:a8e0b093eda0649ddbce791bb5076104f"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Typedef Documentation</h2>
<a class="anchor" id="a5f9016ea3e28a033b7cc216bdda912be"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="classarm__compute_1_1_activation_layer_info.xhtml#a56297e0f7b215eea46c818cb7528d9ea">Activation</a> =  <a class="el" href="classarm__compute_1_1_activation_layer_info.xhtml#a56297e0f7b215eea46c818cb7528d9ea">arm_compute::ActivationLayerInfo::ActivationFunction</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>GraphID strong type. </p>

<p>Definition at line <a class="el" href="arm__compute_2graph_2_types_8h_source.xhtml#l00064">64</a> of file <a class="el" href="arm__compute_2graph_2_types_8h_source.xhtml">Types.h</a>.</p>

</div>
</div>
<a class="anchor" id="abba17a56bbf16c7cbc7acd4aa54abcea"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="namespacearm__compute_1_1graph.xhtml#abba17a56bbf16c7cbc7acd4aa54abcea">EdgeID</a> =  unsigned int</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="arm__compute_2graph_2_types_8h_source.xhtml#l00061">61</a> of file <a class="el" href="arm__compute_2graph_2_types_8h_source.xhtml">Types.h</a>.</p>

</div>
</div>
<a class="anchor" id="a720ead698a117f7a16af6496f61aa6b4"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="namespacearm__compute_1_1graph.xhtml#a720ead698a117f7a16af6496f61aa6b4">GraphID</a> =  <a class="el" href="classarm__compute_1_1strong__type_1_1_strong_type.xhtml">strong_type::StrongType</a>&lt;unsigned int, struct graph_id_t, <a class="el" href="structarm__compute_1_1strong__type_1_1_comparable.xhtml">strong_type::Comparable</a>&gt;</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Constant TensorID specifying an equivalent of null tensor. </p>

<p>Definition at line <a class="el" href="arm__compute_2graph_2_types_8h_source.xhtml#l00067">67</a> of file <a class="el" href="arm__compute_2graph_2_types_8h_source.xhtml">Types.h</a>.</p>

</div>
</div>
<a class="anchor" id="a41c3f59161734b8492782359f583b676"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="namespacearm__compute_1_1graph.xhtml#a41c3f59161734b8492782359f583b676">ITensorAccessorUPtr</a> =  std::unique_ptr&lt;<a class="el" href="classarm__compute_1_1graph_1_1_i_tensor_accessor.xhtml">ITensorAccessor</a>&gt;</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="_i_tensor_accessor_8h_source.xhtml#l00050">50</a> of file <a class="el" href="_i_tensor_accessor_8h_source.xhtml">ITensorAccessor.h</a>.</p>

</div>
</div>
<a class="anchor" id="a56952a8591a9d8481450ae707ae355e7"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="namespacearm__compute_1_1graph.xhtml#a56952a8591a9d8481450ae707ae355e7">NodeID</a> =  unsigned int</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="arm__compute_2graph_2_types_8h_source.xhtml#l00060">60</a> of file <a class="el" href="arm__compute_2graph_2_types_8h_source.xhtml">Types.h</a>.</p>

</div>
</div>
<a class="anchor" id="a615af95e19b5d9f74d2760183566a9a3"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="namespacearm__compute_1_1graph.xhtml#a615af95e19b5d9f74d2760183566a9a3">TensorID</a> =  unsigned int</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="arm__compute_2graph_2_types_8h_source.xhtml#l00059">59</a> of file <a class="el" href="arm__compute_2graph_2_types_8h_source.xhtml">Types.h</a>.</p>

</div>
</div>
<h2 class="groupheader">Enumeration Type Documentation</h2>
<a class="anchor" id="a683661ae75dcb7aef16b9c9bde31517d"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">enum <a class="el" href="namespacearm__compute_1_1graph.xhtml#a683661ae75dcb7aef16b9c9bde31517d">ConvolutionMethod</a></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">strong</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Supported Convolution layer methods. </p>
<table class="fieldtable">
<tr><th colspan="2">Enumerator</th></tr><tr><td class="fieldname"><a class="anchor" id="a683661ae75dcb7aef16b9c9bde31517da7a1920d61156abc05a60135aefe8bc67"></a>Default&#160;</td><td class="fielddoc">
<p>Default approach using internal heuristics. </p>
</td></tr>
<tr><td class="fieldname"><a class="anchor" id="a683661ae75dcb7aef16b9c9bde31517da5174aac3927faa9ee34befb7fc87a9e3"></a>GEMM&#160;</td><td class="fielddoc">
<p>GEMM based convolution. </p>
</td></tr>
<tr><td class="fieldname"><a class="anchor" id="a683661ae75dcb7aef16b9c9bde31517dafd1dd0c603be8170f9eae0be9f2f6afb"></a>Direct&#160;</td><td class="fielddoc">
<p>Deep direct convolution. </p>
</td></tr>
<tr><td class="fieldname"><a class="anchor" id="a683661ae75dcb7aef16b9c9bde31517da09db1dd1078ec6bdbe2722b4558e578f"></a>Winograd&#160;</td><td class="fielddoc">
<p>Winograd based convolution. </p>
</td></tr>
</table>

<p>Definition at line <a class="el" href="arm__compute_2graph_2_types_8h_source.xhtml#l00105">105</a> of file <a class="el" href="arm__compute_2graph_2_types_8h_source.xhtml">Types.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;{</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;    <a class="code" href="namespacearm__compute_1_1graph.xhtml#a683661ae75dcb7aef16b9c9bde31517da7a1920d61156abc05a60135aefe8bc67">Default</a>, </div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#a683661ae75dcb7aef16b9c9bde31517da5174aac3927faa9ee34befb7fc87a9e3">GEMM</a>,    </div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;    <a class="code" href="namespacearm__compute_1_1graph.xhtml#a683661ae75dcb7aef16b9c9bde31517dafd1dd0c603be8170f9eae0be9f2f6afb">Direct</a>,  </div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;    <a class="code" href="namespacearm__compute_1_1graph.xhtml#a683661ae75dcb7aef16b9c9bde31517da09db1dd1078ec6bdbe2722b4558e578f">Winograd</a> </div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;};</div><div class="ttc" id="namespacearm__compute_1_1graph_xhtml_a683661ae75dcb7aef16b9c9bde31517dafd1dd0c603be8170f9eae0be9f2f6afb"><div class="ttname"><a href="namespacearm__compute_1_1graph.xhtml#a683661ae75dcb7aef16b9c9bde31517dafd1dd0c603be8170f9eae0be9f2f6afb">arm_compute::graph::ConvolutionMethod::Direct</a></div><div class="ttdoc">Deep direct convolution. </div></div>
<div class="ttc" id="namespacearm__compute_1_1graph_xhtml_a683661ae75dcb7aef16b9c9bde31517da7a1920d61156abc05a60135aefe8bc67"><div class="ttname"><a href="namespacearm__compute_1_1graph.xhtml#a683661ae75dcb7aef16b9c9bde31517da7a1920d61156abc05a60135aefe8bc67">arm_compute::graph::ConvolutionMethod::Default</a></div><div class="ttdoc">Default approach using internal heuristics. </div></div>
<div class="ttc" id="namespacearm__compute_1_1graph_xhtml_a683661ae75dcb7aef16b9c9bde31517da09db1dd1078ec6bdbe2722b4558e578f"><div class="ttname"><a href="namespacearm__compute_1_1graph.xhtml#a683661ae75dcb7aef16b9c9bde31517da09db1dd1078ec6bdbe2722b4558e578f">arm_compute::graph::ConvolutionMethod::Winograd</a></div><div class="ttdoc">Winograd based convolution. </div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a683661ae75dcb7aef16b9c9bde31517da5174aac3927faa9ee34befb7fc87a9e3"><div class="ttname"><a href="namespacearm__compute.xhtml#a683661ae75dcb7aef16b9c9bde31517da5174aac3927faa9ee34befb7fc87a9e3">arm_compute::ConvolutionMethod::GEMM</a></div><div class="ttdoc">Convolution using GEMM. </div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a75ce9b1baad4303a53124d6f0795821f"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">enum <a class="el" href="namespacearm__compute_1_1graph.xhtml#a75ce9b1baad4303a53124d6f0795821f">DepthwiseConvolutionMethod</a></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">strong</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Supported Depthwise Convolution layer methods. </p>
<table class="fieldtable">
<tr><th colspan="2">Enumerator</th></tr><tr><td class="fieldname"><a class="anchor" id="a75ce9b1baad4303a53124d6f0795821fa7a1920d61156abc05a60135aefe8bc67"></a>Default&#160;</td><td class="fielddoc">
<p>Default approach using internal heuristics. </p>
</td></tr>
<tr><td class="fieldname"><a class="anchor" id="a75ce9b1baad4303a53124d6f0795821fa87dc825930f866018839a6374a5e68d2"></a>GEMV&#160;</td><td class="fielddoc">
<p>Generic GEMV based depthwise convolution. </p>
</td></tr>
<tr><td class="fieldname"><a class="anchor" id="a75ce9b1baad4303a53124d6f0795821fa3bb7b7f3f021a006e65111fc1d226938"></a>Optimized3x3&#160;</td><td class="fielddoc">
<p>Optimized 3x3 direct depthwise convolution. </p>
</td></tr>
</table>

<p>Definition at line <a class="el" href="arm__compute_2graph_2_types_8h_source.xhtml#l00114">114</a> of file <a class="el" href="arm__compute_2graph_2_types_8h_source.xhtml">Types.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;{</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;    <a class="code" href="namespacearm__compute_1_1graph.xhtml#a683661ae75dcb7aef16b9c9bde31517da7a1920d61156abc05a60135aefe8bc67">Default</a>,      </div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;    <a class="code" href="namespacearm__compute_1_1graph.xhtml#a75ce9b1baad4303a53124d6f0795821fa87dc825930f866018839a6374a5e68d2">GEMV</a>,         </div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;    <a class="code" href="namespacearm__compute_1_1graph.xhtml#a75ce9b1baad4303a53124d6f0795821fa3bb7b7f3f021a006e65111fc1d226938">Optimized3x3</a>, </div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;};</div><div class="ttc" id="namespacearm__compute_1_1graph_xhtml_a75ce9b1baad4303a53124d6f0795821fa87dc825930f866018839a6374a5e68d2"><div class="ttname"><a href="namespacearm__compute_1_1graph.xhtml#a75ce9b1baad4303a53124d6f0795821fa87dc825930f866018839a6374a5e68d2">arm_compute::graph::DepthwiseConvolutionMethod::GEMV</a></div><div class="ttdoc">Generic GEMV based depthwise convolution. </div></div>
<div class="ttc" id="namespacearm__compute_1_1graph_xhtml_a683661ae75dcb7aef16b9c9bde31517da7a1920d61156abc05a60135aefe8bc67"><div class="ttname"><a href="namespacearm__compute_1_1graph.xhtml#a683661ae75dcb7aef16b9c9bde31517da7a1920d61156abc05a60135aefe8bc67">arm_compute::graph::ConvolutionMethod::Default</a></div><div class="ttdoc">Default approach using internal heuristics. </div></div>
<div class="ttc" id="namespacearm__compute_1_1graph_xhtml_a75ce9b1baad4303a53124d6f0795821fa3bb7b7f3f021a006e65111fc1d226938"><div class="ttname"><a href="namespacearm__compute_1_1graph.xhtml#a75ce9b1baad4303a53124d6f0795821fa3bb7b7f3f021a006e65111fc1d226938">arm_compute::graph::DepthwiseConvolutionMethod::Optimized3x3</a></div><div class="ttdoc">Optimized 3x3 direct depthwise convolution. </div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="aa12973876c037bddff8e9ece94aca0e4"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">enum <a class="el" href="namespacearm__compute_1_1graph.xhtml#aa12973876c037bddff8e9ece94aca0e4">EltwiseOperation</a></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">strong</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Supported Element-wise operations. </p>
<table class="fieldtable">
<tr><th colspan="2">Enumerator</th></tr><tr><td class="fieldname"><a class="anchor" id="aa12973876c037bddff8e9ece94aca0e4aec211f7c20af43e742bf2570c3cb84f9"></a>Add&#160;</td><td class="fielddoc">
<p>Arithmetic addition. </p>
</td></tr>
<tr><td class="fieldname"><a class="anchor" id="aa12973876c037bddff8e9ece94aca0e4ae80155eceb940c89e2de63ad05868db2"></a>Sub&#160;</td><td class="fielddoc">
<p>Arithmetic subtraction. </p>
</td></tr>
<tr><td class="fieldname"><a class="anchor" id="aa12973876c037bddff8e9ece94aca0e4a62b6d55816cf737bfc6f42e60df1a3f2"></a>Mul&#160;</td><td class="fielddoc">
<p>Arithmetic multiplication. </p>
</td></tr>
</table>

<p>Definition at line <a class="el" href="arm__compute_2graph_2_types_8h_source.xhtml#l00097">97</a> of file <a class="el" href="arm__compute_2graph_2_types_8h_source.xhtml">Types.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;{</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;    <a class="code" href="namespacearm__compute_1_1graph.xhtml#aa12973876c037bddff8e9ece94aca0e4aec211f7c20af43e742bf2570c3cb84f9">Add</a>, </div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;    <a class="code" href="namespacearm__compute_1_1graph.xhtml#aa12973876c037bddff8e9ece94aca0e4ae80155eceb940c89e2de63ad05868db2">Sub</a>, </div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;    <a class="code" href="namespacearm__compute_1_1graph.xhtml#aa12973876c037bddff8e9ece94aca0e4a62b6d55816cf737bfc6f42e60df1a3f2">Mul</a>  </div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;};</div><div class="ttc" id="namespacearm__compute_1_1graph_xhtml_aa12973876c037bddff8e9ece94aca0e4ae80155eceb940c89e2de63ad05868db2"><div class="ttname"><a href="namespacearm__compute_1_1graph.xhtml#aa12973876c037bddff8e9ece94aca0e4ae80155eceb940c89e2de63ad05868db2">arm_compute::graph::EltwiseOperation::Sub</a></div><div class="ttdoc">Arithmetic subtraction. </div></div>
<div class="ttc" id="namespacearm__compute_1_1graph_xhtml_aa12973876c037bddff8e9ece94aca0e4aec211f7c20af43e742bf2570c3cb84f9"><div class="ttname"><a href="namespacearm__compute_1_1graph.xhtml#aa12973876c037bddff8e9ece94aca0e4aec211f7c20af43e742bf2570c3cb84f9">arm_compute::graph::EltwiseOperation::Add</a></div><div class="ttdoc">Arithmetic addition. </div></div>
<div class="ttc" id="namespacearm__compute_1_1graph_xhtml_aa12973876c037bddff8e9ece94aca0e4a62b6d55816cf737bfc6f42e60df1a3f2"><div class="ttname"><a href="namespacearm__compute_1_1graph.xhtml#aa12973876c037bddff8e9ece94aca0e4a62b6d55816cf737bfc6f42e60df1a3f2">arm_compute::graph::EltwiseOperation::Mul</a></div><div class="ttdoc">Arithmetic multiplication. </div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="ac85a46f3ebd3ab09f576a994ac2dce11"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">enum <a class="el" href="namespacearm__compute_1_1graph.xhtml#ac85a46f3ebd3ab09f576a994ac2dce11">FastMathHint</a></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">strong</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Enable or disable fast math for Convolution layer. </p>
<table class="fieldtable">
<tr><th colspan="2">Enumerator</th></tr><tr><td class="fieldname"><a class="anchor" id="ac85a46f3ebd3ab09f576a994ac2dce11a00d23a76e43b46dae9ec7aa9dcbebb32"></a>Enabled&#160;</td><td class="fielddoc">
<p>Fast math enabled for Convolution layer. </p>
</td></tr>
<tr><td class="fieldname"><a class="anchor" id="ac85a46f3ebd3ab09f576a994ac2dce11ab9f5c797ebbf55adccdd8539a65a0241"></a>Disabled&#160;</td><td class="fielddoc">
<p>Fast math disabled for Convolution layer. </p>
</td></tr>
</table>

<p>Definition at line <a class="el" href="arm__compute_2graph_2_types_8h_source.xhtml#l00122">122</a> of file <a class="el" href="arm__compute_2graph_2_types_8h_source.xhtml">Types.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;{</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;    <a class="code" href="namespacearm__compute_1_1graph.xhtml#ac85a46f3ebd3ab09f576a994ac2dce11a00d23a76e43b46dae9ec7aa9dcbebb32">Enabled</a>,  </div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;    <a class="code" href="namespacearm__compute_1_1graph.xhtml#ac85a46f3ebd3ab09f576a994ac2dce11ab9f5c797ebbf55adccdd8539a65a0241">Disabled</a>, </div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;};</div><div class="ttc" id="namespacearm__compute_1_1graph_xhtml_ac85a46f3ebd3ab09f576a994ac2dce11a00d23a76e43b46dae9ec7aa9dcbebb32"><div class="ttname"><a href="namespacearm__compute_1_1graph.xhtml#ac85a46f3ebd3ab09f576a994ac2dce11a00d23a76e43b46dae9ec7aa9dcbebb32">arm_compute::graph::FastMathHint::Enabled</a></div><div class="ttdoc">Fast math enabled for Convolution layer. </div></div>
<div class="ttc" id="namespacearm__compute_1_1graph_xhtml_ac85a46f3ebd3ab09f576a994ac2dce11ab9f5c797ebbf55adccdd8539a65a0241"><div class="ttname"><a href="namespacearm__compute_1_1graph.xhtml#ac85a46f3ebd3ab09f576a994ac2dce11ab9f5c797ebbf55adccdd8539a65a0241">arm_compute::graph::FastMathHint::Disabled</a></div><div class="ttdoc">Fast math disabled for Convolution layer. </div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="ac866c81ec0f5526139dfc62ddc3f206e"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">enum <a class="el" href="namespacearm__compute_1_1graph.xhtml#ac866c81ec0f5526139dfc62ddc3f206e">MemoryManagerAffinity</a></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">strong</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Backend <a class="el" href="classarm__compute_1_1_memory.xhtml" title="CPU implementation of memory object. ">Memory</a> Manager affinity. </p>
<table class="fieldtable">
<tr><th colspan="2">Enumerator</th></tr><tr><td class="fieldname"><a class="anchor" id="ac866c81ec0f5526139dfc62ddc3f206ea7e62bc342f41c946868f0ea6f0b712d8"></a>Buffer&#160;</td><td class="fielddoc">
<p>Affinity at buffer level. </p>
</td></tr>
<tr><td class="fieldname"><a class="anchor" id="ac866c81ec0f5526139dfc62ddc3f206eadfd0a82c4bf37b1e90b690a22a20692e"></a>Offset&#160;</td><td class="fielddoc">
<p>Affinity at offset level. </p>
</td></tr>
</table>

<p>Definition at line <a class="el" href="arm__compute_2graph_2_types_8h_source.xhtml#l00157">157</a> of file <a class="el" href="arm__compute_2graph_2_types_8h_source.xhtml">Types.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;{</div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;    <a class="code" href="namespacearm__compute_1_1graph.xhtml#ac866c81ec0f5526139dfc62ddc3f206ea7e62bc342f41c946868f0ea6f0b712d8">Buffer</a>, </div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;    <a class="code" href="namespacearm__compute_1_1graph.xhtml#ac866c81ec0f5526139dfc62ddc3f206eadfd0a82c4bf37b1e90b690a22a20692e">Offset</a>  </div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;};</div><div class="ttc" id="namespacearm__compute_1_1graph_xhtml_ac866c81ec0f5526139dfc62ddc3f206ea7e62bc342f41c946868f0ea6f0b712d8"><div class="ttname"><a href="namespacearm__compute_1_1graph.xhtml#ac866c81ec0f5526139dfc62ddc3f206ea7e62bc342f41c946868f0ea6f0b712d8">arm_compute::graph::MemoryManagerAffinity::Buffer</a></div><div class="ttdoc">Affinity at buffer level. </div></div>
<div class="ttc" id="namespacearm__compute_1_1graph_xhtml_ac866c81ec0f5526139dfc62ddc3f206eadfd0a82c4bf37b1e90b690a22a20692e"><div class="ttname"><a href="namespacearm__compute_1_1graph.xhtml#ac866c81ec0f5526139dfc62ddc3f206eadfd0a82c4bf37b1e90b690a22a20692e">arm_compute::graph::MemoryManagerAffinity::Offset</a></div><div class="ttdoc">Affinity at offset level. </div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="acac9cbaeea226ed297804c012dc12b16"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">enum <a class="el" href="namespacearm__compute_1_1graph.xhtml#acac9cbaeea226ed297804c012dc12b16">NodeType</a></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">strong</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Supported nodes. </p>
<table class="fieldtable">
<tr><th colspan="2">Enumerator</th></tr><tr><td class="fieldname"><a class="anchor" id="acac9cbaeea226ed297804c012dc12b16a041485a3394541feee82a34d40249d70"></a>ActivationLayer&#160;</td><td class="fielddoc">
</td></tr>
<tr><td class="fieldname"><a class="anchor" id="acac9cbaeea226ed297804c012dc12b16ad0146d2051fad860923cf31f7e00a732"></a>BatchNormalizationLayer&#160;</td><td class="fielddoc">
</td></tr>
<tr><td class="fieldname"><a class="anchor" id="acac9cbaeea226ed297804c012dc12b16af5505217824e3e9e8000ef0d63360158"></a>ChannelShuffleLayer&#160;</td><td class="fielddoc">
</td></tr>
<tr><td class="fieldname"><a class="anchor" id="acac9cbaeea226ed297804c012dc12b16a5c436066fbad2e22ccab352c0d554809"></a>ConcatenateLayer&#160;</td><td class="fielddoc">
</td></tr>
<tr><td class="fieldname"><a class="anchor" id="acac9cbaeea226ed297804c012dc12b16aa252659b59a03bc61e5ec827ab4448b7"></a>ConvolutionLayer&#160;</td><td class="fielddoc">
</td></tr>
<tr><td class="fieldname"><a class="anchor" id="acac9cbaeea226ed297804c012dc12b16ac814c26a7c5317e2a2f58fe0e5a0d410"></a>DeconvolutionLayer&#160;</td><td class="fielddoc">
</td></tr>
<tr><td class="fieldname"><a class="anchor" id="acac9cbaeea226ed297804c012dc12b16a5b7955cb74be105cc7e044a370d4fce8"></a>DepthwiseConvolutionLayer&#160;</td><td class="fielddoc">
</td></tr>
<tr><td class="fieldname"><a class="anchor" id="acac9cbaeea226ed297804c012dc12b16ad1b3837fe6a80018e7002c7f7905439d"></a>EltwiseLayer&#160;</td><td class="fielddoc">
</td></tr>
<tr><td class="fieldname"><a class="anchor" id="acac9cbaeea226ed297804c012dc12b16ad87240455a60f188b358a370fe1a83a5"></a>FlattenLayer&#160;</td><td class="fielddoc">
</td></tr>
<tr><td class="fieldname"><a class="anchor" id="acac9cbaeea226ed297804c012dc12b16a658061ff1dac70c02116fae6c044da1a"></a>FullyConnectedLayer&#160;</td><td class="fielddoc">
</td></tr>
<tr><td class="fieldname"><a class="anchor" id="acac9cbaeea226ed297804c012dc12b16a227ecc6e858c8d1f61664f1967173bea"></a>NormalizationLayer&#160;</td><td class="fielddoc">
</td></tr>
<tr><td class="fieldname"><a class="anchor" id="acac9cbaeea226ed297804c012dc12b16aa84a001cb23ac473e7aae73a9eaf369a"></a>PermuteLayer&#160;</td><td class="fielddoc">
</td></tr>
<tr><td class="fieldname"><a class="anchor" id="acac9cbaeea226ed297804c012dc12b16aea068ae5aae640d018c4300bc7619575"></a>PoolingLayer&#160;</td><td class="fielddoc">
</td></tr>
<tr><td class="fieldname"><a class="anchor" id="acac9cbaeea226ed297804c012dc12b16a1ee0d44744be1e17e38ad5a4e9dcf5dd"></a>ReshapeLayer&#160;</td><td class="fielddoc">
</td></tr>
<tr><td class="fieldname"><a class="anchor" id="acac9cbaeea226ed297804c012dc12b16aea2ded20d74b2bf7921551363737777e"></a>ResizeLayer&#160;</td><td class="fielddoc">
</td></tr>
<tr><td class="fieldname"><a class="anchor" id="acac9cbaeea226ed297804c012dc12b16a4a9567bc4a6c28a527c973010eaf9a25"></a>SoftmaxLayer&#160;</td><td class="fielddoc">
</td></tr>
<tr><td class="fieldname"><a class="anchor" id="acac9cbaeea226ed297804c012dc12b16af2ee14b628c0a45e1682de8f33983dc1"></a>SplitLayer&#160;</td><td class="fielddoc">
</td></tr>
<tr><td class="fieldname"><a class="anchor" id="acac9cbaeea226ed297804c012dc12b16a324118a6721dd6b8a9b9f4e327df2bf5"></a>Input&#160;</td><td class="fielddoc">
</td></tr>
<tr><td class="fieldname"><a class="anchor" id="acac9cbaeea226ed297804c012dc12b16a29c2c02a361c9d7028472e5d92cd4a54"></a>Output&#160;</td><td class="fielddoc">
</td></tr>
<tr><td class="fieldname"><a class="anchor" id="acac9cbaeea226ed297804c012dc12b16a79ceee9f8e3c1f0cc74223e05d2448bf"></a>Const&#160;</td><td class="fielddoc">
</td></tr>
<tr><td class="fieldname"><a class="anchor" id="acac9cbaeea226ed297804c012dc12b16abcf036b6f33e182d4705f4f5b1af13ac"></a>Dummy&#160;</td><td class="fielddoc">
</td></tr>
</table>

<p>Definition at line <a class="el" href="arm__compute_2graph_2_types_8h_source.xhtml#l00129">129</a> of file <a class="el" href="arm__compute_2graph_2_types_8h_source.xhtml">Types.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;{</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;    <a class="code" href="namespacearm__compute_1_1graph.xhtml#acac9cbaeea226ed297804c012dc12b16a041485a3394541feee82a34d40249d70">ActivationLayer</a>,</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;    <a class="code" href="namespacearm__compute_1_1graph.xhtml#acac9cbaeea226ed297804c012dc12b16ad0146d2051fad860923cf31f7e00a732">BatchNormalizationLayer</a>,</div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;    <a class="code" href="namespacearm__compute_1_1graph.xhtml#acac9cbaeea226ed297804c012dc12b16af5505217824e3e9e8000ef0d63360158">ChannelShuffleLayer</a>,</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;    <a class="code" href="namespacearm__compute_1_1graph.xhtml#acac9cbaeea226ed297804c012dc12b16a5c436066fbad2e22ccab352c0d554809">ConcatenateLayer</a>,</div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;    <a class="code" href="namespacearm__compute_1_1graph.xhtml#acac9cbaeea226ed297804c012dc12b16aa252659b59a03bc61e5ec827ab4448b7">ConvolutionLayer</a>,</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;    <a class="code" href="namespacearm__compute_1_1graph.xhtml#acac9cbaeea226ed297804c012dc12b16ac814c26a7c5317e2a2f58fe0e5a0d410">DeconvolutionLayer</a>,</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;    <a class="code" href="namespacearm__compute_1_1graph.xhtml#acac9cbaeea226ed297804c012dc12b16a5b7955cb74be105cc7e044a370d4fce8">DepthwiseConvolutionLayer</a>,</div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;    <a class="code" href="namespacearm__compute_1_1graph.xhtml#acac9cbaeea226ed297804c012dc12b16ad1b3837fe6a80018e7002c7f7905439d">EltwiseLayer</a>,</div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;    <a class="code" href="namespacearm__compute_1_1graph.xhtml#acac9cbaeea226ed297804c012dc12b16ad87240455a60f188b358a370fe1a83a5">FlattenLayer</a>,</div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;    <a class="code" href="namespacearm__compute_1_1graph.xhtml#acac9cbaeea226ed297804c012dc12b16a658061ff1dac70c02116fae6c044da1a">FullyConnectedLayer</a>,</div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;    <a class="code" href="namespacearm__compute_1_1graph.xhtml#acac9cbaeea226ed297804c012dc12b16a227ecc6e858c8d1f61664f1967173bea">NormalizationLayer</a>,</div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;    <a class="code" href="namespacearm__compute_1_1graph.xhtml#acac9cbaeea226ed297804c012dc12b16aa84a001cb23ac473e7aae73a9eaf369a">PermuteLayer</a>,</div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;    <a class="code" href="namespacearm__compute_1_1graph.xhtml#acac9cbaeea226ed297804c012dc12b16aea068ae5aae640d018c4300bc7619575">PoolingLayer</a>,</div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;    <a class="code" href="namespacearm__compute_1_1graph.xhtml#acac9cbaeea226ed297804c012dc12b16a1ee0d44744be1e17e38ad5a4e9dcf5dd">ReshapeLayer</a>,</div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;    <a class="code" href="namespacearm__compute_1_1graph.xhtml#acac9cbaeea226ed297804c012dc12b16aea2ded20d74b2bf7921551363737777e">ResizeLayer</a>,</div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;    <a class="code" href="namespacearm__compute_1_1graph.xhtml#acac9cbaeea226ed297804c012dc12b16a4a9567bc4a6c28a527c973010eaf9a25">SoftmaxLayer</a>,</div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;    <a class="code" href="namespacearm__compute_1_1graph.xhtml#acac9cbaeea226ed297804c012dc12b16af2ee14b628c0a45e1682de8f33983dc1">SplitLayer</a>,</div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;</div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;    <a class="code" href="namespacearm__compute_1_1graph.xhtml#acac9cbaeea226ed297804c012dc12b16a324118a6721dd6b8a9b9f4e327df2bf5">Input</a>,</div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;    <a class="code" href="namespacearm__compute_1_1graph.xhtml#acac9cbaeea226ed297804c012dc12b16a29c2c02a361c9d7028472e5d92cd4a54">Output</a>,</div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;    <a class="code" href="namespacearm__compute_1_1graph.xhtml#acac9cbaeea226ed297804c012dc12b16a79ceee9f8e3c1f0cc74223e05d2448bf">Const</a>,</div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;</div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;    <a class="code" href="namespacearm__compute_1_1graph.xhtml#acac9cbaeea226ed297804c012dc12b16abcf036b6f33e182d4705f4f5b1af13ac">Dummy</a></div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;};</div><div class="ttc" id="namespacearm__compute_1_1graph_xhtml_acac9cbaeea226ed297804c012dc12b16a041485a3394541feee82a34d40249d70"><div class="ttname"><a href="namespacearm__compute_1_1graph.xhtml#acac9cbaeea226ed297804c012dc12b16a041485a3394541feee82a34d40249d70">arm_compute::graph::NodeType::ActivationLayer</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1graph_xhtml_acac9cbaeea226ed297804c012dc12b16aea068ae5aae640d018c4300bc7619575"><div class="ttname"><a href="namespacearm__compute_1_1graph.xhtml#acac9cbaeea226ed297804c012dc12b16aea068ae5aae640d018c4300bc7619575">arm_compute::graph::NodeType::PoolingLayer</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1graph_xhtml_acac9cbaeea226ed297804c012dc12b16ad0146d2051fad860923cf31f7e00a732"><div class="ttname"><a href="namespacearm__compute_1_1graph.xhtml#acac9cbaeea226ed297804c012dc12b16ad0146d2051fad860923cf31f7e00a732">arm_compute::graph::NodeType::BatchNormalizationLayer</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1graph_xhtml_acac9cbaeea226ed297804c012dc12b16ac814c26a7c5317e2a2f58fe0e5a0d410"><div class="ttname"><a href="namespacearm__compute_1_1graph.xhtml#acac9cbaeea226ed297804c012dc12b16ac814c26a7c5317e2a2f58fe0e5a0d410">arm_compute::graph::NodeType::DeconvolutionLayer</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1graph_xhtml_acac9cbaeea226ed297804c012dc12b16ad87240455a60f188b358a370fe1a83a5"><div class="ttname"><a href="namespacearm__compute_1_1graph.xhtml#acac9cbaeea226ed297804c012dc12b16ad87240455a60f188b358a370fe1a83a5">arm_compute::graph::NodeType::FlattenLayer</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1graph_xhtml_acac9cbaeea226ed297804c012dc12b16abcf036b6f33e182d4705f4f5b1af13ac"><div class="ttname"><a href="namespacearm__compute_1_1graph.xhtml#acac9cbaeea226ed297804c012dc12b16abcf036b6f33e182d4705f4f5b1af13ac">arm_compute::graph::NodeType::Dummy</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1graph_xhtml_acac9cbaeea226ed297804c012dc12b16aa84a001cb23ac473e7aae73a9eaf369a"><div class="ttname"><a href="namespacearm__compute_1_1graph.xhtml#acac9cbaeea226ed297804c012dc12b16aa84a001cb23ac473e7aae73a9eaf369a">arm_compute::graph::NodeType::PermuteLayer</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1graph_xhtml_acac9cbaeea226ed297804c012dc12b16ad1b3837fe6a80018e7002c7f7905439d"><div class="ttname"><a href="namespacearm__compute_1_1graph.xhtml#acac9cbaeea226ed297804c012dc12b16ad1b3837fe6a80018e7002c7f7905439d">arm_compute::graph::NodeType::EltwiseLayer</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1graph_xhtml_acac9cbaeea226ed297804c012dc12b16a227ecc6e858c8d1f61664f1967173bea"><div class="ttname"><a href="namespacearm__compute_1_1graph.xhtml#acac9cbaeea226ed297804c012dc12b16a227ecc6e858c8d1f61664f1967173bea">arm_compute::graph::NodeType::NormalizationLayer</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1graph_xhtml_acac9cbaeea226ed297804c012dc12b16a1ee0d44744be1e17e38ad5a4e9dcf5dd"><div class="ttname"><a href="namespacearm__compute_1_1graph.xhtml#acac9cbaeea226ed297804c012dc12b16a1ee0d44744be1e17e38ad5a4e9dcf5dd">arm_compute::graph::NodeType::ReshapeLayer</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1graph_xhtml_acac9cbaeea226ed297804c012dc12b16aa252659b59a03bc61e5ec827ab4448b7"><div class="ttname"><a href="namespacearm__compute_1_1graph.xhtml#acac9cbaeea226ed297804c012dc12b16aa252659b59a03bc61e5ec827ab4448b7">arm_compute::graph::NodeType::ConvolutionLayer</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1graph_xhtml_acac9cbaeea226ed297804c012dc12b16a4a9567bc4a6c28a527c973010eaf9a25"><div class="ttname"><a href="namespacearm__compute_1_1graph.xhtml#acac9cbaeea226ed297804c012dc12b16a4a9567bc4a6c28a527c973010eaf9a25">arm_compute::graph::NodeType::SoftmaxLayer</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1graph_xhtml_acac9cbaeea226ed297804c012dc12b16a658061ff1dac70c02116fae6c044da1a"><div class="ttname"><a href="namespacearm__compute_1_1graph.xhtml#acac9cbaeea226ed297804c012dc12b16a658061ff1dac70c02116fae6c044da1a">arm_compute::graph::NodeType::FullyConnectedLayer</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1graph_xhtml_acac9cbaeea226ed297804c012dc12b16a79ceee9f8e3c1f0cc74223e05d2448bf"><div class="ttname"><a href="namespacearm__compute_1_1graph.xhtml#acac9cbaeea226ed297804c012dc12b16a79ceee9f8e3c1f0cc74223e05d2448bf">arm_compute::graph::NodeType::Const</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1graph_xhtml_acac9cbaeea226ed297804c012dc12b16af5505217824e3e9e8000ef0d63360158"><div class="ttname"><a href="namespacearm__compute_1_1graph.xhtml#acac9cbaeea226ed297804c012dc12b16af5505217824e3e9e8000ef0d63360158">arm_compute::graph::NodeType::ChannelShuffleLayer</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1graph_xhtml_acac9cbaeea226ed297804c012dc12b16aea2ded20d74b2bf7921551363737777e"><div class="ttname"><a href="namespacearm__compute_1_1graph.xhtml#acac9cbaeea226ed297804c012dc12b16aea2ded20d74b2bf7921551363737777e">arm_compute::graph::NodeType::ResizeLayer</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1graph_xhtml_acac9cbaeea226ed297804c012dc12b16af2ee14b628c0a45e1682de8f33983dc1"><div class="ttname"><a href="namespacearm__compute_1_1graph.xhtml#acac9cbaeea226ed297804c012dc12b16af2ee14b628c0a45e1682de8f33983dc1">arm_compute::graph::NodeType::SplitLayer</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1graph_xhtml_acac9cbaeea226ed297804c012dc12b16a324118a6721dd6b8a9b9f4e327df2bf5"><div class="ttname"><a href="namespacearm__compute_1_1graph.xhtml#acac9cbaeea226ed297804c012dc12b16a324118a6721dd6b8a9b9f4e327df2bf5">arm_compute::graph::NodeType::Input</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1graph_xhtml_acac9cbaeea226ed297804c012dc12b16a5c436066fbad2e22ccab352c0d554809"><div class="ttname"><a href="namespacearm__compute_1_1graph.xhtml#acac9cbaeea226ed297804c012dc12b16a5c436066fbad2e22ccab352c0d554809">arm_compute::graph::NodeType::ConcatenateLayer</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1graph_xhtml_acac9cbaeea226ed297804c012dc12b16a5b7955cb74be105cc7e044a370d4fce8"><div class="ttname"><a href="namespacearm__compute_1_1graph.xhtml#acac9cbaeea226ed297804c012dc12b16a5b7955cb74be105cc7e044a370d4fce8">arm_compute::graph::NodeType::DepthwiseConvolutionLayer</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1graph_xhtml_acac9cbaeea226ed297804c012dc12b16a29c2c02a361c9d7028472e5d92cd4a54"><div class="ttname"><a href="namespacearm__compute_1_1graph.xhtml#acac9cbaeea226ed297804c012dc12b16a29c2c02a361c9d7028472e5d92cd4a54">arm_compute::graph::NodeType::Output</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a31488d29805a596498c0234ae392d35d"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">enum <a class="el" href="namespacearm__compute_1_1graph.xhtml#a31488d29805a596498c0234ae392d35d">Target</a></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">strong</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<table class="fieldtable">
<tr><th colspan="2">Enumerator</th></tr><tr><td class="fieldname"><a class="anchor" id="a31488d29805a596498c0234ae392d35da1c04cc3823d476c3017238679a0fdf52"></a>UNSPECIFIED&#160;</td><td class="fielddoc">
<p>Unspecified Target. </p>
</td></tr>
<tr><td class="fieldname"><a class="anchor" id="a31488d29805a596498c0234ae392d35dacaf162e9233294cadf62d2a71a14ca09"></a>NEON&#160;</td><td class="fielddoc">
<p>NEON capable target device. </p>
</td></tr>
<tr><td class="fieldname"><a class="anchor" id="a31488d29805a596498c0234ae392d35da5bc574a47246f122016869b32a6aa6f0"></a>CL&#160;</td><td class="fielddoc">
<p>OpenCL capable target device. </p>
</td></tr>
<tr><td class="fieldname"><a class="anchor" id="a31488d29805a596498c0234ae392d35da7359c3eb5c57547295a76ac1bf775b29"></a>GC&#160;</td><td class="fielddoc">
<p>GLES compute capable target device. </p>
</td></tr>
</table>

<p>Definition at line <a class="el" href="arm__compute_2graph_2_types_8h_source.xhtml#l00088">88</a> of file <a class="el" href="arm__compute_2graph_2_types_8h_source.xhtml">Types.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;{</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;    <a class="code" href="namespacearm__compute_1_1graph.xhtml#a31488d29805a596498c0234ae392d35da1c04cc3823d476c3017238679a0fdf52">UNSPECIFIED</a>, </div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;    <a class="code" href="namespacearm__compute_1_1graph.xhtml#a31488d29805a596498c0234ae392d35dacaf162e9233294cadf62d2a71a14ca09">NEON</a>,        </div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;    <a class="code" href="namespacearm__compute_1_1graph.xhtml#a31488d29805a596498c0234ae392d35da5bc574a47246f122016869b32a6aa6f0">CL</a>,          </div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;    <a class="code" href="namespacearm__compute_1_1graph.xhtml#a31488d29805a596498c0234ae392d35da7359c3eb5c57547295a76ac1bf775b29">GC</a>,          </div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;};</div><div class="ttc" id="namespacearm__compute_1_1graph_xhtml_a31488d29805a596498c0234ae392d35dacaf162e9233294cadf62d2a71a14ca09"><div class="ttname"><a href="namespacearm__compute_1_1graph.xhtml#a31488d29805a596498c0234ae392d35dacaf162e9233294cadf62d2a71a14ca09">arm_compute::graph::Target::NEON</a></div><div class="ttdoc">NEON capable target device. </div></div>
<div class="ttc" id="namespacearm__compute_1_1graph_xhtml_a31488d29805a596498c0234ae392d35da7359c3eb5c57547295a76ac1bf775b29"><div class="ttname"><a href="namespacearm__compute_1_1graph.xhtml#a31488d29805a596498c0234ae392d35da7359c3eb5c57547295a76ac1bf775b29">arm_compute::graph::Target::GC</a></div><div class="ttdoc">GLES compute capable target device. </div></div>
<div class="ttc" id="namespacearm__compute_1_1graph_xhtml_a31488d29805a596498c0234ae392d35da1c04cc3823d476c3017238679a0fdf52"><div class="ttname"><a href="namespacearm__compute_1_1graph.xhtml#a31488d29805a596498c0234ae392d35da1c04cc3823d476c3017238679a0fdf52">arm_compute::graph::Target::UNSPECIFIED</a></div><div class="ttdoc">Unspecified Target. </div></div>
<div class="ttc" id="namespacearm__compute_1_1graph_xhtml_a31488d29805a596498c0234ae392d35da5bc574a47246f122016869b32a6aa6f0"><div class="ttname"><a href="namespacearm__compute_1_1graph.xhtml#a31488d29805a596498c0234ae392d35da5bc574a47246f122016869b32a6aa6f0">arm_compute::graph::Target::CL</a></div><div class="ttdoc">OpenCL capable target device. </div></div>
</div><!-- fragment -->
</div>
</div>
<h2 class="groupheader">Function Documentation</h2>
<a class="anchor" id="a96552dd9dcc894d118d68697efad8fd8"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::vector&lt;<a class="el" href="namespacearm__compute_1_1graph.xhtml#a56952a8591a9d8481450ae707ae355e7">NodeID</a>&gt; arm_compute::graph::bfs </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1graph_1_1_graph.xhtml">Graph</a> &amp;&#160;</td>
          <td class="paramname"><em>g</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Breadth first search traversal. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">g</td><td><a class="el" href="classarm__compute_1_1graph_1_1_graph.xhtml" title="Graph class. ">Graph</a> to traverse</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>A vector with the node id traversal order </dd></dl>

</div>
</div>
<a class="anchor" id="a6fdc4f8803626c0be9af825b976ae1bd"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void arm_compute::graph::configure_tensor </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1graph_1_1_tensor.xhtml">Tensor</a> *&#160;</td>
          <td class="paramname"><em>tensor</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Configures tensor. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in,out]</td><td class="paramname">tensor</td><td><a class="el" href="classarm__compute_1_1graph_1_1_tensor.xhtml" title="Tensor object. ">Tensor</a> to configure </td></tr>
  </table>
  </dd>
</dl>

<p>Referenced by <a class="el" href="arm__compute_2graph_2_utils_8h_source.xhtml#l00056">set_tensor_accessor()</a>.</p>

</div>
</div>
<a class="anchor" id="a119ab96867c279bb7769e0b050cd0cec"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1graph_1_1_pass_manager.xhtml">PassManager</a> arm_compute::graph::create_default_pass_manager </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespacearm__compute_1_1graph.xhtml#a31488d29805a596498c0234ae392d35d">Target</a>&#160;</td>
          <td class="paramname"><em>target</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Creates a default <a class="el" href="classarm__compute_1_1graph_1_1_pass_manager.xhtml">PassManager</a>. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">target</td><td>Target to create the pass manager for</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>A <a class="el" href="classarm__compute_1_1graph_1_1_pass_manager.xhtml" title="Pass manager. ">PassManager</a> with default mutating passes </dd></dl>

<p>Referenced by <a class="el" href="arm__compute_2graph_2_utils_8h_source.xhtml#l00056">set_tensor_accessor()</a>.</p>

</div>
</div>
<a class="anchor" id="aee3a27da0a4769cf70186029719495c5"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::vector&lt;<a class="el" href="namespacearm__compute_1_1graph.xhtml#a56952a8591a9d8481450ae707ae355e7">NodeID</a>&gt; arm_compute::graph::dfs </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1graph_1_1_graph.xhtml">Graph</a> &amp;&#160;</td>
          <td class="paramname"><em>g</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Depth first search traversal. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">g</td><td><a class="el" href="classarm__compute_1_1graph_1_1_graph.xhtml" title="Graph class. ">Graph</a> to traverse</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>A vector with the node id traversal order </dd></dl>

</div>
</div>
<a class="anchor" id="a2f68147a36e1fdd0468e746e02a4b487"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void arm_compute::graph::execute_task </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structarm__compute_1_1graph_1_1_execution_task.xhtml">ExecutionTask</a> &amp;&#160;</td>
          <td class="paramname"><em>task</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="aae59dce83cb7fc9cfa5e445ef6e5d27d"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void arm_compute::graph::force_target_to_graph </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1graph_1_1_graph.xhtml">Graph</a> &amp;&#160;</td>
          <td class="paramname"><em>g</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespacearm__compute_1_1graph.xhtml#a31488d29805a596498c0234ae392d35d">Target</a>&#160;</td>
          <td class="paramname"><em>target</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Forces a single target to all graph constructs. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">g</td><td><a class="el" href="classarm__compute_1_1graph_1_1_graph.xhtml" title="Graph class. ">Graph</a> to force target on </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">target</td><td>Target to force </td></tr>
  </table>
  </dd>
</dl>

<p>Referenced by <a class="el" href="arm__compute_2graph_2_utils_8h_source.xhtml#l00056">set_tensor_accessor()</a>.</p>

</div>
</div>
<a class="anchor" id="abf6f9982517bc455c2ea36250e61419e"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespacearm__compute_1_1graph.xhtml#a31488d29805a596498c0234ae392d35d">Target</a> arm_compute::graph::get_default_target </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Returns default target for execution. </p>
<dl class="section note"><dt>Note</dt><dd>If an OpenCL backend exists then OpenCL is returned, else if the NEON backend exists returns NEON as target. If no backends are registered an error is raised.</dd></dl>
<dl class="section return"><dt>Returns</dt><dd>Default target </dd></dl>

<p>Referenced by <a class="el" href="arm__compute_2graph_2_utils_8h_source.xhtml#l00056">set_tensor_accessor()</a>.</p>

</div>
</div>
<a class="anchor" id="a415d13754baa4f3d60d41b1691d1225b"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">size_t arm_compute::graph::get_dimension_idx </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structarm__compute_1_1graph_1_1_tensor_descriptor.xhtml">TensorDescriptor</a> &amp;&#160;</td>
          <td class="paramname"><em>descriptor</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespacearm__compute.xhtml#a74ce3f7420453d3446218ff3b7453e02">DataLayoutDimension</a>&#160;</td>
          <td class="paramname"><em>data_layout_dimension</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Get index of a tensor's given dimension depending on its layout. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">descriptor</td><td>Descriptor </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">data_layout_dimension</td><td><a class="el" href="classarm__compute_1_1graph_1_1_tensor.xhtml" title="Tensor object. ">Tensor</a> data layout dimension</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Idx of given dimension </dd></dl>

<p>Referenced by <a class="el" href="arm__compute_2graph_2_utils_8h_source.xhtml#l00056">set_tensor_accessor()</a>.</p>

</div>
</div>
<a class="anchor" id="a7be409872d37c8922e485ca70d845621"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">size_t arm_compute::graph::get_dimension_size </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structarm__compute_1_1graph_1_1_tensor_descriptor.xhtml">TensorDescriptor</a> &amp;&#160;</td>
          <td class="paramname"><em>descriptor</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespacearm__compute.xhtml#a74ce3f7420453d3446218ff3b7453e02">DataLayoutDimension</a>&#160;</td>
          <td class="paramname"><em>data_layout_dimension</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Get size of a tensor's given dimension depending on its layout. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">descriptor</td><td>Descriptor </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">data_layout_dimension</td><td><a class="el" href="classarm__compute_1_1graph_1_1_tensor.xhtml" title="Tensor object. ">Tensor</a> data layout dimension</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Size of requested dimension </dd></dl>

<p>Referenced by <a class="el" href="arm__compute_2graph_2_utils_8h_source.xhtml#l00056">set_tensor_accessor()</a>.</p>

</div>
</div>
<a class="anchor" id="a2591ebfbe2a99276469d4c27710b0bde"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::vector&lt;<a class="el" href="structarm__compute_1_1graph_1_1_node_idx_pair.xhtml">NodeIdxPair</a>&gt; arm_compute::graph::get_driving_nodes </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1graph_1_1_i_node.xhtml">INode</a> &amp;&#160;</td>
          <td class="paramname"><em>node</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Get the list of driving nodes of a given node. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">node</td><td>Node to find the driving node of</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>A list with the driving node of a given node </dd></dl>

<p>Referenced by <a class="el" href="arm__compute_2graph_2_utils_8h_source.xhtml#l00056">set_tensor_accessor()</a>.</p>

</div>
</div>
<a class="anchor" id="ade2275ecfd6f344e3ec7086427863aa8"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structarm__compute_1_1graph_1_1_tensor_descriptor.xhtml">TensorDescriptor</a> arm_compute::graph::get_tensor_descriptor </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classarm__compute_1_1graph_1_1_graph.xhtml">Graph</a> &amp;&#160;</td>
          <td class="paramname"><em>g</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespacearm__compute_1_1graph.xhtml#a615af95e19b5d9f74d2760183566a9a3">TensorID</a>&#160;</td>
          <td class="paramname"><em>tid</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Returns the tensor descriptor of a given tensor. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">g</td><td><a class="el" href="classarm__compute_1_1graph_1_1_graph.xhtml" title="Graph class. ">Graph</a> that the tensor belongs to </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">tid</td><td><a class="el" href="classarm__compute_1_1graph_1_1_tensor.xhtml" title="Tensor object. ">Tensor</a> ID</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd><a class="el" href="classarm__compute_1_1graph_1_1_tensor.xhtml" title="Tensor object. ">Tensor</a> descriptor if tensor was found else empty descriptor </dd></dl>

<p>Definition at line <a class="el" href="arm__compute_2graph_2_utils_8h_source.xhtml#l00044">44</a> of file <a class="el" href="arm__compute_2graph_2_utils_8h_source.xhtml">Utils.h</a>.</p>

<p>References <a class="el" href="classarm__compute_1_1graph_1_1_tensor.xhtml#ace1b6c0005a4c373e54bcfdc6d5b7d68">Tensor::desc()</a>, and <a class="el" href="classarm__compute_1_1graph_1_1_graph.xhtml#acf084c3010b986e758555e922f373684">Graph::tensor()</a>.</p>
<div class="fragment"><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;{</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;    <span class="keyword">const</span> Tensor *tensor = g.tensor(tid);</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;    <span class="keywordflow">return</span> (tensor != <span class="keyword">nullptr</span>) ? tensor-&gt;desc() : TensorDescriptor();</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;}</div></div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a6f7790ee9fa15226c7f31e0c74f1d20c"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool arm_compute::graph::is_target_supported </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespacearm__compute_1_1graph.xhtml#a31488d29805a596498c0234ae392d35d">Target</a>&#160;</td>
          <td class="paramname"><em>target</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Checks if a specific target is supported. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">target</td><td>Target to check</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>True if target is support else false </dd></dl>

<p>Referenced by <a class="el" href="arm__compute_2graph_2_utils_8h_source.xhtml#l00056">set_tensor_accessor()</a>.</p>

</div>
</div>
<a class="anchor" id="a7e067080ce8169b2f8be64c190edab9e"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">inline ::std::ostream&amp; arm_compute::graph::operator&lt;&lt; </td>
          <td>(</td>
          <td class="paramtype">::std::ostream &amp;&#160;</td>
          <td class="paramname"><em>os</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespacearm__compute_1_1graph.xhtml#a31488d29805a596498c0234ae392d35d">Target</a> &amp;&#160;</td>
          <td class="paramname"><em>target</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Formatted output of the Target. </p>

<p>Definition at line <a class="el" href="arm__compute_2graph_2_type_printer_8h_source.xhtml#l00038">38</a> of file <a class="el" href="arm__compute_2graph_2_type_printer_8h_source.xhtml">TypePrinter.h</a>.</p>

<p>References <a class="el" href="_error_8h_source.xhtml#l00261">ARM_COMPUTE_ERROR</a>, <a class="el" href="namespacearm__compute_1_1graph.xhtml#a31488d29805a596498c0234ae392d35da5bc574a47246f122016869b32a6aa6f0">CL</a>, <a class="el" href="namespacearm__compute_1_1graph.xhtml#a31488d29805a596498c0234ae392d35da7359c3eb5c57547295a76ac1bf775b29">GC</a>, <a class="el" href="namespacearm__compute_1_1graph.xhtml#a31488d29805a596498c0234ae392d35dacaf162e9233294cadf62d2a71a14ca09">NEON</a>, and <a class="el" href="namespacearm__compute_1_1graph.xhtml#a31488d29805a596498c0234ae392d35da1c04cc3823d476c3017238679a0fdf52">UNSPECIFIED</a>.</p>
<div class="fragment"><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;{</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;    <span class="keywordflow">switch</span>(target)</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;    {</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;        <span class="keywordflow">case</span> Target::UNSPECIFIED:</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;            os &lt;&lt; <span class="stringliteral">&quot;UNSPECIFIED&quot;</span>;</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;            <span class="keywordflow">break</span>;</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;        <span class="keywordflow">case</span> Target::NEON:</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;            os &lt;&lt; <span class="stringliteral">&quot;NEON&quot;</span>;</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;            <span class="keywordflow">break</span>;</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;        <span class="keywordflow">case</span> Target::CL:</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;            os &lt;&lt; <span class="stringliteral">&quot;CL&quot;</span>;</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;            <span class="keywordflow">break</span>;</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;        <span class="keywordflow">case</span> Target::GC:</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;            os &lt;&lt; <span class="stringliteral">&quot;GC&quot;</span>;</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;            <span class="keywordflow">break</span>;</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;        <span class="keywordflow">default</span>:</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;            <a class="code" href="_error_8h.xhtml#a05b19c75afe9c24200a62b9724734bbd">ARM_COMPUTE_ERROR</a>(<span class="stringliteral">&quot;NOT_SUPPORTED!&quot;</span>);</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;    }</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;    <span class="keywordflow">return</span> os;</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;}</div><div class="ttc" id="_error_8h_xhtml_a05b19c75afe9c24200a62b9724734bbd"><div class="ttname"><a href="_error_8h.xhtml#a05b19c75afe9c24200a62b9724734bbd">ARM_COMPUTE_ERROR</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR(...)</div><div class="ttdoc">Print the given message then throw an std::runtime_error. </div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00261">Error.h:261</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a108f26d15227710831dbdb30e40e608e"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">inline ::std::ostream&amp; arm_compute::graph::operator&lt;&lt; </td>
          <td>(</td>
          <td class="paramtype">::std::ostream &amp;&#160;</td>
          <td class="paramname"><em>os</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespacearm__compute_1_1graph.xhtml#acac9cbaeea226ed297804c012dc12b16">NodeType</a> &amp;&#160;</td>
          <td class="paramname"><em>node_type</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="arm__compute_2graph_2_type_printer_8h_source.xhtml#l00061">61</a> of file <a class="el" href="arm__compute_2graph_2_type_printer_8h_source.xhtml">TypePrinter.h</a>.</p>

<p>References <a class="el" href="namespacearm__compute_1_1graph.xhtml#acac9cbaeea226ed297804c012dc12b16a041485a3394541feee82a34d40249d70">ActivationLayer</a>, <a class="el" href="_error_8h_source.xhtml#l00261">ARM_COMPUTE_ERROR</a>, <a class="el" href="namespacearm__compute_1_1graph.xhtml#acac9cbaeea226ed297804c012dc12b16ad0146d2051fad860923cf31f7e00a732">BatchNormalizationLayer</a>, <a class="el" href="namespacearm__compute_1_1graph.xhtml#acac9cbaeea226ed297804c012dc12b16af5505217824e3e9e8000ef0d63360158">ChannelShuffleLayer</a>, <a class="el" href="namespacearm__compute_1_1graph.xhtml#acac9cbaeea226ed297804c012dc12b16a5c436066fbad2e22ccab352c0d554809">ConcatenateLayer</a>, <a class="el" href="namespacearm__compute_1_1graph.xhtml#acac9cbaeea226ed297804c012dc12b16a79ceee9f8e3c1f0cc74223e05d2448bf">Const</a>, <a class="el" href="namespacearm__compute_1_1graph.xhtml#acac9cbaeea226ed297804c012dc12b16aa252659b59a03bc61e5ec827ab4448b7">ConvolutionLayer</a>, <a class="el" href="namespacearm__compute_1_1graph.xhtml#acac9cbaeea226ed297804c012dc12b16ac814c26a7c5317e2a2f58fe0e5a0d410">DeconvolutionLayer</a>, <a class="el" href="namespacearm__compute_1_1graph.xhtml#acac9cbaeea226ed297804c012dc12b16a5b7955cb74be105cc7e044a370d4fce8">DepthwiseConvolutionLayer</a>, <a class="el" href="namespacearm__compute_1_1graph.xhtml#acac9cbaeea226ed297804c012dc12b16abcf036b6f33e182d4705f4f5b1af13ac">Dummy</a>, <a class="el" href="namespacearm__compute_1_1graph.xhtml#acac9cbaeea226ed297804c012dc12b16ad1b3837fe6a80018e7002c7f7905439d">EltwiseLayer</a>, <a class="el" href="namespacearm__compute_1_1graph.xhtml#acac9cbaeea226ed297804c012dc12b16ad87240455a60f188b358a370fe1a83a5">FlattenLayer</a>, <a class="el" href="namespacearm__compute_1_1graph.xhtml#acac9cbaeea226ed297804c012dc12b16a658061ff1dac70c02116fae6c044da1a">FullyConnectedLayer</a>, <a class="el" href="namespacearm__compute_1_1graph.xhtml#acac9cbaeea226ed297804c012dc12b16a324118a6721dd6b8a9b9f4e327df2bf5">Input</a>, <a class="el" href="namespacearm__compute_1_1graph.xhtml#acac9cbaeea226ed297804c012dc12b16a227ecc6e858c8d1f61664f1967173bea">NormalizationLayer</a>, <a class="el" href="namespacearm__compute_1_1graph.xhtml#acac9cbaeea226ed297804c012dc12b16a29c2c02a361c9d7028472e5d92cd4a54">Output</a>, <a class="el" href="namespacearm__compute_1_1graph.xhtml#acac9cbaeea226ed297804c012dc12b16aa84a001cb23ac473e7aae73a9eaf369a">PermuteLayer</a>, <a class="el" href="namespacearm__compute_1_1graph.xhtml#acac9cbaeea226ed297804c012dc12b16aea068ae5aae640d018c4300bc7619575">PoolingLayer</a>, <a class="el" href="namespacearm__compute_1_1graph.xhtml#acac9cbaeea226ed297804c012dc12b16a1ee0d44744be1e17e38ad5a4e9dcf5dd">ReshapeLayer</a>, <a class="el" href="namespacearm__compute_1_1graph.xhtml#acac9cbaeea226ed297804c012dc12b16aea2ded20d74b2bf7921551363737777e">ResizeLayer</a>, <a class="el" href="namespacearm__compute_1_1graph.xhtml#acac9cbaeea226ed297804c012dc12b16a4a9567bc4a6c28a527c973010eaf9a25">SoftmaxLayer</a>, and <a class="el" href="namespacearm__compute_1_1graph.xhtml#acac9cbaeea226ed297804c012dc12b16af2ee14b628c0a45e1682de8f33983dc1">SplitLayer</a>.</p>
<div class="fragment"><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;{</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;    <span class="keywordflow">switch</span>(node_type)</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;    {</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;        <span class="keywordflow">case</span> NodeType::ActivationLayer:</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;            os &lt;&lt; <span class="stringliteral">&quot;ActivationLayer&quot;</span>;</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;            <span class="keywordflow">break</span>;</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;        <span class="keywordflow">case</span> NodeType::BatchNormalizationLayer:</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;            os &lt;&lt; <span class="stringliteral">&quot;BatchNormalizationLayer&quot;</span>;</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;            <span class="keywordflow">break</span>;</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;        <span class="keywordflow">case</span> NodeType::ChannelShuffleLayer:</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;            os &lt;&lt; <span class="stringliteral">&quot;ChannelShuffleLayer&quot;</span>;</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;            <span class="keywordflow">break</span>;</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;        <span class="keywordflow">case</span> NodeType::ConcatenateLayer:</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;            os &lt;&lt; <span class="stringliteral">&quot;ConcatenateLayer&quot;</span>;</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;            <span class="keywordflow">break</span>;</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;        <span class="keywordflow">case</span> NodeType::ConvolutionLayer:</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;            os &lt;&lt; <span class="stringliteral">&quot;ConvolutionLayer&quot;</span>;</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;            <span class="keywordflow">break</span>;</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;        <span class="keywordflow">case</span> NodeType::DeconvolutionLayer:</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;            os &lt;&lt; <span class="stringliteral">&quot;DeconvolutionLayer&quot;</span>;</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;            <span class="keywordflow">break</span>;</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;        <span class="keywordflow">case</span> NodeType::DepthwiseConvolutionLayer:</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;            os &lt;&lt; <span class="stringliteral">&quot;DepthwiseConvolutionLayer&quot;</span>;</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;            <span class="keywordflow">break</span>;</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;        <span class="keywordflow">case</span> NodeType::EltwiseLayer:</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;            os &lt;&lt; <span class="stringliteral">&quot;EltwiseLayer&quot;</span>;</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;            <span class="keywordflow">break</span>;</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;        <span class="keywordflow">case</span> NodeType::FlattenLayer:</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;            os &lt;&lt; <span class="stringliteral">&quot;FlattenLayer&quot;</span>;</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;            <span class="keywordflow">break</span>;</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;        <span class="keywordflow">case</span> NodeType::FullyConnectedLayer:</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;            os &lt;&lt; <span class="stringliteral">&quot;FullyConnectedLayer&quot;</span>;</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;            <span class="keywordflow">break</span>;</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;        <span class="keywordflow">case</span> NodeType::NormalizationLayer:</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;            os &lt;&lt; <span class="stringliteral">&quot;NormalizationLayer&quot;</span>;</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;            <span class="keywordflow">break</span>;</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;        <span class="keywordflow">case</span> NodeType::PermuteLayer:</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;            os &lt;&lt; <span class="stringliteral">&quot;PermuteLayer&quot;</span>;</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;            <span class="keywordflow">break</span>;</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;        <span class="keywordflow">case</span> NodeType::PoolingLayer:</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;            os &lt;&lt; <span class="stringliteral">&quot;PoolingLayer&quot;</span>;</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;            <span class="keywordflow">break</span>;</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;        <span class="keywordflow">case</span> NodeType::ReshapeLayer:</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;            os &lt;&lt; <span class="stringliteral">&quot;ReshapeLayer&quot;</span>;</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;            <span class="keywordflow">break</span>;</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;        <span class="keywordflow">case</span> NodeType::ResizeLayer:</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;            os &lt;&lt; <span class="stringliteral">&quot;ResizeLayer&quot;</span>;</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;            <span class="keywordflow">break</span>;</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;        <span class="keywordflow">case</span> NodeType::SoftmaxLayer:</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;            os &lt;&lt; <span class="stringliteral">&quot;SoftmaxLayer&quot;</span>;</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;            <span class="keywordflow">break</span>;</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;        <span class="keywordflow">case</span> NodeType::SplitLayer:</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;            os &lt;&lt; <span class="stringliteral">&quot;SplitLayer&quot;</span>;</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;            <span class="keywordflow">break</span>;</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;        <span class="keywordflow">case</span> NodeType::Input:</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;            os &lt;&lt; <span class="stringliteral">&quot;Input&quot;</span>;</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;            <span class="keywordflow">break</span>;</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;        <span class="keywordflow">case</span> NodeType::Output:</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;            os &lt;&lt; <span class="stringliteral">&quot;Output&quot;</span>;</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;            <span class="keywordflow">break</span>;</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;        <span class="keywordflow">case</span> NodeType::Const:</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;            os &lt;&lt; <span class="stringliteral">&quot;Const&quot;</span>;</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;            <span class="keywordflow">break</span>;</div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;        <span class="keywordflow">case</span> NodeType::Dummy:</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;            os &lt;&lt; <span class="stringliteral">&quot;Dummy&quot;</span>;</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;            <span class="keywordflow">break</span>;</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;        <span class="keywordflow">default</span>:</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;            <a class="code" href="_error_8h.xhtml#a05b19c75afe9c24200a62b9724734bbd">ARM_COMPUTE_ERROR</a>(<span class="stringliteral">&quot;NOT_SUPPORTED!&quot;</span>);</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;    }</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;    <span class="keywordflow">return</span> os;</div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;}</div><div class="ttc" id="_error_8h_xhtml_a05b19c75afe9c24200a62b9724734bbd"><div class="ttname"><a href="_error_8h.xhtml#a05b19c75afe9c24200a62b9724734bbd">ARM_COMPUTE_ERROR</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR(...)</div><div class="ttdoc">Print the given message then throw an std::runtime_error. </div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00261">Error.h:261</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="abcd88ed51472e534decef274fb32bcaa"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">inline ::std::ostream&amp; arm_compute::graph::operator&lt;&lt; </td>
          <td>(</td>
          <td class="paramtype">::std::ostream &amp;&#160;</td>
          <td class="paramname"><em>os</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespacearm__compute_1_1graph.xhtml#aa12973876c037bddff8e9ece94aca0e4">EltwiseOperation</a> &amp;&#160;</td>
          <td class="paramname"><em>eltwise_op</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Formatted output of the EltwiseOperation type. </p>

<p>Definition at line <a class="el" href="arm__compute_2graph_2_type_printer_8h_source.xhtml#l00136">136</a> of file <a class="el" href="arm__compute_2graph_2_type_printer_8h_source.xhtml">TypePrinter.h</a>.</p>

<p>References <a class="el" href="namespacearm__compute_1_1graph.xhtml#aa12973876c037bddff8e9ece94aca0e4aec211f7c20af43e742bf2570c3cb84f9">Add</a>, <a class="el" href="_error_8h_source.xhtml#l00261">ARM_COMPUTE_ERROR</a>, <a class="el" href="namespacearm__compute_1_1graph.xhtml#aa12973876c037bddff8e9ece94aca0e4a62b6d55816cf737bfc6f42e60df1a3f2">Mul</a>, and <a class="el" href="namespacearm__compute_1_1graph.xhtml#aa12973876c037bddff8e9ece94aca0e4ae80155eceb940c89e2de63ad05868db2">Sub</a>.</p>
<div class="fragment"><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;{</div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;    <span class="keywordflow">switch</span>(eltwise_op)</div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;    {</div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;        <span class="keywordflow">case</span> EltwiseOperation::Add:</div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;            os &lt;&lt; <span class="stringliteral">&quot;Add&quot;</span>;</div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;            <span class="keywordflow">break</span>;</div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;        <span class="keywordflow">case</span> EltwiseOperation::Mul:</div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;            os &lt;&lt; <span class="stringliteral">&quot;Mul&quot;</span>;</div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;            <span class="keywordflow">break</span>;</div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;        <span class="keywordflow">case</span> EltwiseOperation::Sub:</div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;            os &lt;&lt; <span class="stringliteral">&quot;Sub&quot;</span>;</div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;            <span class="keywordflow">break</span>;</div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;        <span class="keywordflow">default</span>:</div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;            <a class="code" href="_error_8h.xhtml#a05b19c75afe9c24200a62b9724734bbd">ARM_COMPUTE_ERROR</a>(<span class="stringliteral">&quot;NOT_SUPPORTED!&quot;</span>);</div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;    }</div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;</div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;    <span class="keywordflow">return</span> os;</div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;}</div><div class="ttc" id="_error_8h_xhtml_a05b19c75afe9c24200a62b9724734bbd"><div class="ttname"><a href="_error_8h.xhtml#a05b19c75afe9c24200a62b9724734bbd">ARM_COMPUTE_ERROR</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR(...)</div><div class="ttdoc">Print the given message then throw an std::runtime_error. </div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00261">Error.h:261</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="ab90b7a7fcc12792b0b6cb6486bb383dd"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">inline ::std::ostream&amp; arm_compute::graph::operator&lt;&lt; </td>
          <td>(</td>
          <td class="paramtype">::std::ostream &amp;&#160;</td>
          <td class="paramname"><em>os</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespacearm__compute_1_1graph.xhtml#a683661ae75dcb7aef16b9c9bde31517d">ConvolutionMethod</a> &amp;&#160;</td>
          <td class="paramname"><em>method</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Formatted output of the ConvolutionMethod type. </p>

<p>Definition at line <a class="el" href="arm__compute_2graph_2_type_printer_8h_source.xhtml#l00157">157</a> of file <a class="el" href="arm__compute_2graph_2_type_printer_8h_source.xhtml">TypePrinter.h</a>.</p>

<p>References <a class="el" href="_error_8h_source.xhtml#l00261">ARM_COMPUTE_ERROR</a>, <a class="el" href="namespacearm__compute_1_1graph.xhtml#a683661ae75dcb7aef16b9c9bde31517da7a1920d61156abc05a60135aefe8bc67">Default</a>, <a class="el" href="namespacearm__compute_1_1graph.xhtml#a683661ae75dcb7aef16b9c9bde31517dafd1dd0c603be8170f9eae0be9f2f6afb">Direct</a>, <a class="el" href="namespacearm__compute_1_1graph.xhtml#a683661ae75dcb7aef16b9c9bde31517da5174aac3927faa9ee34befb7fc87a9e3">GEMM</a>, and <a class="el" href="namespacearm__compute_1_1graph.xhtml#a683661ae75dcb7aef16b9c9bde31517da09db1dd1078ec6bdbe2722b4558e578f">Winograd</a>.</p>
<div class="fragment"><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;{</div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;    <span class="keywordflow">switch</span>(method)</div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;    {</div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;        <span class="keywordflow">case</span> ConvolutionMethod::Default:</div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;            os &lt;&lt; <span class="stringliteral">&quot;Default&quot;</span>;</div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;            <span class="keywordflow">break</span>;</div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;        <span class="keywordflow">case</span> ConvolutionMethod::Direct:</div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;            os &lt;&lt; <span class="stringliteral">&quot;Direct&quot;</span>;</div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;            <span class="keywordflow">break</span>;</div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;        <span class="keywordflow">case</span> ConvolutionMethod::GEMM:</div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;            os &lt;&lt; <span class="stringliteral">&quot;GEMM&quot;</span>;</div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;            <span class="keywordflow">break</span>;</div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;        <span class="keywordflow">case</span> ConvolutionMethod::Winograd:</div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;            os &lt;&lt; <span class="stringliteral">&quot;Winograd&quot;</span>;</div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;            <span class="keywordflow">break</span>;</div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;        <span class="keywordflow">default</span>:</div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;            <a class="code" href="_error_8h.xhtml#a05b19c75afe9c24200a62b9724734bbd">ARM_COMPUTE_ERROR</a>(<span class="stringliteral">&quot;NOT_SUPPORTED!&quot;</span>);</div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;    }</div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;</div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;    <span class="keywordflow">return</span> os;</div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;}</div><div class="ttc" id="_error_8h_xhtml_a05b19c75afe9c24200a62b9724734bbd"><div class="ttname"><a href="_error_8h.xhtml#a05b19c75afe9c24200a62b9724734bbd">ARM_COMPUTE_ERROR</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR(...)</div><div class="ttdoc">Print the given message then throw an std::runtime_error. </div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00261">Error.h:261</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a6c721497fdfc121b38630f89b625ac39"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">inline ::std::ostream&amp; arm_compute::graph::operator&lt;&lt; </td>
          <td>(</td>
          <td class="paramtype">::std::ostream &amp;&#160;</td>
          <td class="paramname"><em>os</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespacearm__compute_1_1graph.xhtml#ac85a46f3ebd3ab09f576a994ac2dce11">FastMathHint</a> &amp;&#160;</td>
          <td class="paramname"><em>hint</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Formatted output of the FastMathHint type. </p>

<p>Definition at line <a class="el" href="arm__compute_2graph_2_type_printer_8h_source.xhtml#l00181">181</a> of file <a class="el" href="arm__compute_2graph_2_type_printer_8h_source.xhtml">TypePrinter.h</a>.</p>

<p>References <a class="el" href="_error_8h_source.xhtml#l00261">ARM_COMPUTE_ERROR</a>, <a class="el" href="namespacearm__compute_1_1graph.xhtml#ac85a46f3ebd3ab09f576a994ac2dce11ab9f5c797ebbf55adccdd8539a65a0241">Disabled</a>, and <a class="el" href="namespacearm__compute_1_1graph.xhtml#ac85a46f3ebd3ab09f576a994ac2dce11a00d23a76e43b46dae9ec7aa9dcbebb32">Enabled</a>.</p>
<div class="fragment"><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;{</div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;    <span class="keywordflow">switch</span>(hint)</div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;    {</div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;        <span class="keywordflow">case</span> FastMathHint::Enabled:</div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;            os &lt;&lt; <span class="stringliteral">&quot;Enabled&quot;</span>;</div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;            <span class="keywordflow">break</span>;</div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;        <span class="keywordflow">case</span> FastMathHint::Disabled:</div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;            os &lt;&lt; <span class="stringliteral">&quot;Disabled&quot;</span>;</div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;            <span class="keywordflow">break</span>;</div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;        <span class="keywordflow">default</span>:</div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;            <a class="code" href="_error_8h.xhtml#a05b19c75afe9c24200a62b9724734bbd">ARM_COMPUTE_ERROR</a>(<span class="stringliteral">&quot;NOT_SUPPORTED!&quot;</span>);</div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;    }</div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;</div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;    <span class="keywordflow">return</span> os;</div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;}</div><div class="ttc" id="_error_8h_xhtml_a05b19c75afe9c24200a62b9724734bbd"><div class="ttname"><a href="_error_8h.xhtml#a05b19c75afe9c24200a62b9724734bbd">ARM_COMPUTE_ERROR</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR(...)</div><div class="ttdoc">Print the given message then throw an std::runtime_error. </div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00261">Error.h:261</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a36f71403d9328a10245a6d9d62518527"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">inline ::std::ostream&amp; arm_compute::graph::operator&lt;&lt; </td>
          <td>(</td>
          <td class="paramtype">::std::ostream &amp;&#160;</td>
          <td class="paramname"><em>os</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespacearm__compute_1_1graph.xhtml#a75ce9b1baad4303a53124d6f0795821f">DepthwiseConvolutionMethod</a> &amp;&#160;</td>
          <td class="paramname"><em>method</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Formatted output of the DepthwiseConvolutionMethod type. </p>

<p>Definition at line <a class="el" href="arm__compute_2graph_2_type_printer_8h_source.xhtml#l00199">199</a> of file <a class="el" href="arm__compute_2graph_2_type_printer_8h_source.xhtml">TypePrinter.h</a>.</p>

<p>References <a class="el" href="_error_8h_source.xhtml#l00261">ARM_COMPUTE_ERROR</a>, <a class="el" href="namespacearm__compute_1_1graph.xhtml#a75ce9b1baad4303a53124d6f0795821fa7a1920d61156abc05a60135aefe8bc67">Default</a>, <a class="el" href="namespacearm__compute_1_1graph.xhtml#a75ce9b1baad4303a53124d6f0795821fa87dc825930f866018839a6374a5e68d2">GEMV</a>, and <a class="el" href="namespacearm__compute_1_1graph.xhtml#a75ce9b1baad4303a53124d6f0795821fa3bb7b7f3f021a006e65111fc1d226938">Optimized3x3</a>.</p>
<div class="fragment"><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;{</div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;    <span class="keywordflow">switch</span>(method)</div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;    {</div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;        <span class="keywordflow">case</span> DepthwiseConvolutionMethod::Default:</div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;            os &lt;&lt; <span class="stringliteral">&quot;DEFAULT&quot;</span>;</div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;            <span class="keywordflow">break</span>;</div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;        <span class="keywordflow">case</span> DepthwiseConvolutionMethod::GEMV:</div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;            os &lt;&lt; <span class="stringliteral">&quot;GEMV&quot;</span>;</div><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;            <span class="keywordflow">break</span>;</div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;        <span class="keywordflow">case</span> DepthwiseConvolutionMethod::Optimized3x3:</div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;            os &lt;&lt; <span class="stringliteral">&quot;Optimized3x3&quot;</span>;</div><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;            <span class="keywordflow">break</span>;</div><div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;        <span class="keywordflow">default</span>:</div><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;            <a class="code" href="_error_8h.xhtml#a05b19c75afe9c24200a62b9724734bbd">ARM_COMPUTE_ERROR</a>(<span class="stringliteral">&quot;NOT_SUPPORTED!&quot;</span>);</div><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;    }</div><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;</div><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;    <span class="keywordflow">return</span> os;</div><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;}</div><div class="ttc" id="_error_8h_xhtml_a05b19c75afe9c24200a62b9724734bbd"><div class="ttname"><a href="_error_8h.xhtml#a05b19c75afe9c24200a62b9724734bbd">ARM_COMPUTE_ERROR</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR(...)</div><div class="ttdoc">Print the given message then throw an std::runtime_error. </div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00261">Error.h:261</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a81a73c1d68104f16b1d2f63e412b06be"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">inline ::std::istream&amp; arm_compute::graph::operator&gt;&gt; </td>
          <td>(</td>
          <td class="paramtype">::std::istream &amp;&#160;</td>
          <td class="paramname"><em>stream</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespacearm__compute_1_1graph.xhtml#a31488d29805a596498c0234ae392d35d">Target</a> &amp;&#160;</td>
          <td class="paramname"><em>target</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Input Stream operator for <a class="el" href="namespacearm__compute_1_1graph.xhtml#a31488d29805a596498c0234ae392d35d">Target</a>. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">stream</td><td>Stream to parse </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">target</td><td>Output target</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Updated stream </dd></dl>

<p>Definition at line <a class="el" href="_type_loader_8h_source.xhtml#l00096">96</a> of file <a class="el" href="_type_loader_8h_source.xhtml">TypeLoader.h</a>.</p>

<p>References <a class="el" href="namespacearm__compute_1_1graph.xhtml#a4654d54572949314f2a3bd0163179897">target_from_name()</a>.</p>
<div class="fragment"><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;{</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;    std::string value;</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;    stream &gt;&gt; value;</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;    target = <a class="code" href="namespacearm__compute_1_1graph.xhtml#a4654d54572949314f2a3bd0163179897">target_from_name</a>(value);</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;    <span class="keywordflow">return</span> stream;</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;}</div><div class="ttc" id="namespacearm__compute_1_1graph_xhtml_a4654d54572949314f2a3bd0163179897"><div class="ttname"><a href="namespacearm__compute_1_1graph.xhtml#a4654d54572949314f2a3bd0163179897">arm_compute::graph::target_from_name</a></div><div class="ttdeci">Target target_from_name(const std::string &amp;name)</div><div class="ttdoc">Converts a string to a strong types enumeration Target. </div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="af1e24c6fcb185d532695bce9bd9b0d8d"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void arm_compute::graph::release_default_graph_context </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1graph_1_1_graph_context.xhtml">GraphContext</a> &amp;&#160;</td>
          <td class="paramname"><em>ctx</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Default releases the graph context if not done manually. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in,out]</td><td class="paramname">ctx</td><td><a class="el" href="classarm__compute_1_1graph_1_1_graph.xhtml" title="Graph class. ">Graph</a> Context </td></tr>
  </table>
  </dd>
</dl>

<p>Referenced by <a class="el" href="arm__compute_2graph_2_utils_8h_source.xhtml#l00056">set_tensor_accessor()</a>.</p>

</div>
</div>
<a class="anchor" id="a4ebedbbf720dd9a5bd14584f723b056e"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1_status.xhtml">Status</a> arm_compute::graph::set_tensor_accessor </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1graph_1_1_tensor.xhtml">Tensor</a> *&#160;</td>
          <td class="paramname"><em>tensor</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">std::unique_ptr&lt; <a class="el" href="classarm__compute_1_1graph_1_1_i_tensor_accessor.xhtml">ITensorAccessor</a> &gt;&#160;</td>
          <td class="paramname"><em>accessor</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Sets an accessor on a given tensor. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">tensor</td><td><a class="el" href="classarm__compute_1_1graph_1_1_tensor.xhtml" title="Tensor object. ">Tensor</a> to set the accessor to </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">accessor</td><td>Accessor to set</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>True if accessor was set else false </dd></dl>

<p>Definition at line <a class="el" href="arm__compute_2graph_2_utils_8h_source.xhtml#l00056">56</a> of file <a class="el" href="arm__compute_2graph_2_utils_8h_source.xhtml">Utils.h</a>.</p>

<p>References <a class="el" href="_error_8h_source.xhtml#l00244">ARM_COMPUTE_RETURN_ERROR_ON</a>, <a class="el" href="namespacearm__compute_1_1graph.xhtml#a6fdc4f8803626c0be9af825b976ae1bd">configure_tensor()</a>, <a class="el" href="namespacearm__compute_1_1graph.xhtml#a119ab96867c279bb7769e0b050cd0cec">create_default_pass_manager()</a>, <a class="el" href="namespacearm__compute_1_1graph.xhtml#aae59dce83cb7fc9cfa5e445ef6e5d27d">force_target_to_graph()</a>, <a class="el" href="namespacearm__compute_1_1graph.xhtml#abf6f9982517bc455c2ea36250e61419e">get_default_target()</a>, <a class="el" href="namespacearm__compute_1_1graph.xhtml#a415d13754baa4f3d60d41b1691d1225b">get_dimension_idx()</a>, <a class="el" href="namespacearm__compute_1_1graph.xhtml#a7be409872d37c8922e485ca70d845621">get_dimension_size()</a>, <a class="el" href="namespacearm__compute_1_1graph.xhtml#a2591ebfbe2a99276469d4c27710b0bde">get_driving_nodes()</a>, <a class="el" href="namespacearm__compute_1_1graph.xhtml#a6f7790ee9fa15226c7f31e0c74f1d20c">is_target_supported()</a>, <a class="el" href="namespacearm__compute_1_1graph.xhtml#af1e24c6fcb185d532695bce9bd9b0d8d">release_default_graph_context()</a>, <a class="el" href="classarm__compute_1_1graph_1_1_tensor.xhtml#a7ca865118188dd8c307ae9e84f8a75f6">Tensor::set_accessor()</a>, and <a class="el" href="namespacearm__compute_1_1graph.xhtml#a4e9f20d289a4880de2a2937fe363ccc0">setup_default_graph_context()</a>.</p>
<div class="fragment"><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;{</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;    <a class="code" href="_error_8h.xhtml#a206d6e247e0957ac3dee45d27756fc25">ARM_COMPUTE_RETURN_ERROR_ON</a>(tensor == <span class="keyword">nullptr</span>);</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;    tensor-&gt;set_accessor(std::move(accessor));</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;    <span class="keywordflow">return</span> Status{};</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;}</div><div class="ttc" id="_error_8h_xhtml_a206d6e247e0957ac3dee45d27756fc25"><div class="ttname"><a href="_error_8h.xhtml#a206d6e247e0957ac3dee45d27756fc25">ARM_COMPUTE_RETURN_ERROR_ON</a></div><div class="ttdeci">#define ARM_COMPUTE_RETURN_ERROR_ON(cond)</div><div class="ttdoc">If the condition is true, an error is returned. </div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00244">Error.h:244</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="a4e9f20d289a4880de2a2937fe363ccc0"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void arm_compute::graph::setup_default_graph_context </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1graph_1_1_graph_context.xhtml">GraphContext</a> &amp;&#160;</td>
          <td class="paramname"><em>ctx</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Default setups the graph context if not done manually. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in,out]</td><td class="paramname">ctx</td><td><a class="el" href="classarm__compute_1_1graph_1_1_graph.xhtml" title="Graph class. ">Graph</a> Context </td></tr>
  </table>
  </dd>
</dl>

<p>Referenced by <a class="el" href="arm__compute_2graph_2_utils_8h_source.xhtml#l00056">set_tensor_accessor()</a>.</p>

</div>
</div>
<a class="anchor" id="a4654d54572949314f2a3bd0163179897"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespacearm__compute_1_1graph.xhtml#a31488d29805a596498c0234ae392d35d">Target</a> arm_compute::graph::target_from_name </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>name</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Converts a string to a strong types enumeration <a class="el" href="namespacearm__compute_1_1graph.xhtml#a31488d29805a596498c0234ae392d35d">Target</a>. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">name</td><td>String to convert</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Converted Target enumeration </dd></dl>

<p>Referenced by <a class="el" href="_type_loader_8h_source.xhtml#l00071">arm_compute::operator&gt;&gt;()</a>, and <a class="el" href="_type_loader_8h_source.xhtml#l00096">operator&gt;&gt;()</a>.</p>

</div>
</div>
<h2 class="groupheader">Variable Documentation</h2>
<a class="anchor" id="a8e0b093eda0649ddbce791bb5076104f"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">constexpr <a class="el" href="namespacearm__compute_1_1graph.xhtml#abba17a56bbf16c7cbc7acd4aa54abcea">EdgeID</a> EmptyEdgeID = std::numeric_limits&lt;<a class="el" href="namespacearm__compute_1_1graph.xhtml#abba17a56bbf16c7cbc7acd4aa54abcea">EdgeID</a>&gt;::max()</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="arm__compute_2graph_2_types_8h_source.xhtml#l00072">72</a> of file <a class="el" href="arm__compute_2graph_2_types_8h_source.xhtml">Types.h</a>.</p>

</div>
</div>
<a class="anchor" id="aad3f5296ec88b9d552c109b04b89ad9f"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">constexpr <a class="el" href="namespacearm__compute_1_1graph.xhtml#a56952a8591a9d8481450ae707ae355e7">NodeID</a> EmptyNodeID = std::numeric_limits&lt;<a class="el" href="namespacearm__compute_1_1graph.xhtml#a56952a8591a9d8481450ae707ae355e7">NodeID</a>&gt;::max()</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Constant EdgeID specifying an equivalent of null edge. </p>

<p>Definition at line <a class="el" href="arm__compute_2graph_2_types_8h_source.xhtml#l00070">70</a> of file <a class="el" href="arm__compute_2graph_2_types_8h_source.xhtml">Types.h</a>.</p>

<p>Referenced by <a class="el" href="_edge_8h_source.xhtml#l00076">Edge::consumer_id()</a>, <a class="el" href="_layers_8h_source.xhtml#l00630">BranchLayer::create_layer()</a>, <a class="el" href="_i_stream_8h_source.xhtml#l00081">IStream::forward_tail()</a>, and <a class="el" href="_edge_8h_source.xhtml#l00068">Edge::producer_id()</a>.</p>

</div>
</div>
<a class="anchor" id="aa94938a3eb11fda4724c362c53c28f24"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">constexpr <a class="el" href="namespacearm__compute_1_1graph.xhtml#a615af95e19b5d9f74d2760183566a9a3">TensorID</a> NullTensorID = std::numeric_limits&lt;<a class="el" href="namespacearm__compute_1_1graph.xhtml#a615af95e19b5d9f74d2760183566a9a3">TensorID</a>&gt;::max()</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Constant NodeID specifying an equivalent of null node. </p>

<p>Definition at line <a class="el" href="arm__compute_2graph_2_types_8h_source.xhtml#l00068">68</a> of file <a class="el" href="arm__compute_2graph_2_types_8h_source.xhtml">Types.h</a>.</p>

<p>Referenced by <a class="el" href="_i_stream_8h_source.xhtml#l00081">IStream::forward_tail()</a>, and <a class="el" href="_edge_8h_source.xhtml#l00124">Edge::tensor_id()</a>.</p>

</div>
</div>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespacearm__compute.xhtml">arm_compute</a></li><li class="navelem"><a class="el" href="namespacearm__compute_1_1graph.xhtml">graph</a></li>
    <li class="footer">Generated on Wed Aug 29 2018 15:31:50 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.11 </li>
  </ul>
</div>
</body>
</html>
