<!-- HTML header for doxygen 1.8.9.1-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.11"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: GraphBuilder Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
  $(window).load(resizeHeight);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { init_search(); });
</script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">Compute Library
   &#160;<span id="projectnumber">18.08</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.11 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li class="current"><a href="annotated.xhtml"><span>Data&#160;Structures</span></a></li>
      <li><a href="files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.xhtml"><span>Data&#160;Structures</span></a></li>
      <li><a href="classes.xhtml"><span>Data&#160;Structure&#160;Index</span></a></li>
      <li><a href="inherits.xhtml"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="functions.xhtml"><span>Data&#160;Fields</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('classarm__compute_1_1graph_1_1_graph_builder.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-static-methods">Static Public Member Functions</a>  </div>
  <div class="headertitle">
<div class="title">GraphBuilder Class Reference<span class="mlabels"><span class="mlabel">final</span></span></div>  </div>
</div><!--header-->
<div class="contents">

<p><a class="el" href="classarm__compute_1_1graph_1_1_graph.xhtml" title="Graph class. ">Graph</a> builder class.  
 <a href="classarm__compute_1_1graph_1_1_graph_builder.xhtml#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="_graph_builder_8h_source.xhtml">GraphBuilder.h</a>&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-static-methods"></a>
Static Public Member Functions</h2></td></tr>
<tr class="memitem:ac304c66615e62c6b4aa40e8728920002"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="namespacearm__compute_1_1graph.xhtml#a56952a8591a9d8481450ae707ae355e7">NodeID</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1graph_1_1_graph_builder.xhtml#ac304c66615e62c6b4aa40e8728920002">add_const_node</a> (<a class="el" href="classarm__compute_1_1graph_1_1_graph.xhtml">Graph</a> &amp;g, <a class="el" href="structarm__compute_1_1graph_1_1_node_params.xhtml">NodeParams</a> params, <a class="el" href="structarm__compute_1_1graph_1_1_tensor_descriptor.xhtml">TensorDescriptor</a> desc, <a class="el" href="namespacearm__compute_1_1graph.xhtml#a41c3f59161734b8492782359f583b676">ITensorAccessorUPtr</a> accessor=nullptr)</td></tr>
<tr class="memdesc:ac304c66615e62c6b4aa40e8728920002"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds a Const node to the graph.  <a href="#ac304c66615e62c6b4aa40e8728920002">More...</a><br /></td></tr>
<tr class="separator:ac304c66615e62c6b4aa40e8728920002"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4bed63b35b24f8f44260237558e8a02b"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="namespacearm__compute_1_1graph.xhtml#a56952a8591a9d8481450ae707ae355e7">NodeID</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1graph_1_1_graph_builder.xhtml#a4bed63b35b24f8f44260237558e8a02b">add_input_node</a> (<a class="el" href="classarm__compute_1_1graph_1_1_graph.xhtml">Graph</a> &amp;g, <a class="el" href="structarm__compute_1_1graph_1_1_node_params.xhtml">NodeParams</a> params, <a class="el" href="structarm__compute_1_1graph_1_1_tensor_descriptor.xhtml">TensorDescriptor</a> desc, <a class="el" href="namespacearm__compute_1_1graph.xhtml#a41c3f59161734b8492782359f583b676">ITensorAccessorUPtr</a> accessor=nullptr)</td></tr>
<tr class="memdesc:a4bed63b35b24f8f44260237558e8a02b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds an input layer node to the graph.  <a href="#a4bed63b35b24f8f44260237558e8a02b">More...</a><br /></td></tr>
<tr class="separator:a4bed63b35b24f8f44260237558e8a02b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab87ec51542d159d5efae373c82b7944c"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="namespacearm__compute_1_1graph.xhtml#a56952a8591a9d8481450ae707ae355e7">NodeID</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1graph_1_1_graph_builder.xhtml#ab87ec51542d159d5efae373c82b7944c">add_output_node</a> (<a class="el" href="classarm__compute_1_1graph_1_1_graph.xhtml">Graph</a> &amp;g, <a class="el" href="structarm__compute_1_1graph_1_1_node_params.xhtml">NodeParams</a> params, <a class="el" href="structarm__compute_1_1graph_1_1_node_idx_pair.xhtml">NodeIdxPair</a> input, <a class="el" href="namespacearm__compute_1_1graph.xhtml#a41c3f59161734b8492782359f583b676">ITensorAccessorUPtr</a> accessor=nullptr)</td></tr>
<tr class="memdesc:ab87ec51542d159d5efae373c82b7944c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds an output layer node to the graph.  <a href="#ab87ec51542d159d5efae373c82b7944c">More...</a><br /></td></tr>
<tr class="separator:ab87ec51542d159d5efae373c82b7944c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a890a11b240837645352791b2e89632b1"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="namespacearm__compute_1_1graph.xhtml#a56952a8591a9d8481450ae707ae355e7">NodeID</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1graph_1_1_graph_builder.xhtml#a890a11b240837645352791b2e89632b1">add_activation_node</a> (<a class="el" href="classarm__compute_1_1graph_1_1_graph.xhtml">Graph</a> &amp;g, <a class="el" href="structarm__compute_1_1graph_1_1_node_params.xhtml">NodeParams</a> params, <a class="el" href="structarm__compute_1_1graph_1_1_node_idx_pair.xhtml">NodeIdxPair</a> input, <a class="el" href="classarm__compute_1_1_activation_layer_info.xhtml">ActivationLayerInfo</a> act_info)</td></tr>
<tr class="memdesc:a890a11b240837645352791b2e89632b1"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds an activation layer node to the graph.  <a href="#a890a11b240837645352791b2e89632b1">More...</a><br /></td></tr>
<tr class="separator:a890a11b240837645352791b2e89632b1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acc31c037c3eac4234abae6ec0e080d2f"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="namespacearm__compute_1_1graph.xhtml#a56952a8591a9d8481450ae707ae355e7">NodeID</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1graph_1_1_graph_builder.xhtml#acc31c037c3eac4234abae6ec0e080d2f">add_batch_normalization_node</a> (<a class="el" href="classarm__compute_1_1graph_1_1_graph.xhtml">Graph</a> &amp;g, <a class="el" href="structarm__compute_1_1graph_1_1_node_params.xhtml">NodeParams</a> params, <a class="el" href="structarm__compute_1_1graph_1_1_node_idx_pair.xhtml">NodeIdxPair</a> input, float epsilon, <a class="el" href="namespacearm__compute_1_1graph.xhtml#a41c3f59161734b8492782359f583b676">ITensorAccessorUPtr</a> mean_accessor=nullptr, <a class="el" href="namespacearm__compute_1_1graph.xhtml#a41c3f59161734b8492782359f583b676">ITensorAccessorUPtr</a> var_accessor=nullptr, <a class="el" href="namespacearm__compute_1_1graph.xhtml#a41c3f59161734b8492782359f583b676">ITensorAccessorUPtr</a> beta_accessor=nullptr, <a class="el" href="namespacearm__compute_1_1graph.xhtml#a41c3f59161734b8492782359f583b676">ITensorAccessorUPtr</a> gamma_accessor=nullptr)</td></tr>
<tr class="memdesc:acc31c037c3eac4234abae6ec0e080d2f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds a batch normalization layer node to the graph.  <a href="#acc31c037c3eac4234abae6ec0e080d2f">More...</a><br /></td></tr>
<tr class="separator:acc31c037c3eac4234abae6ec0e080d2f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a06a2546f9cc520a15aa18981cbc48537"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="namespacearm__compute_1_1graph.xhtml#a56952a8591a9d8481450ae707ae355e7">NodeID</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1graph_1_1_graph_builder.xhtml#a06a2546f9cc520a15aa18981cbc48537">add_channel_shuffle_node</a> (<a class="el" href="classarm__compute_1_1graph_1_1_graph.xhtml">Graph</a> &amp;g, <a class="el" href="structarm__compute_1_1graph_1_1_node_params.xhtml">NodeParams</a> params, <a class="el" href="structarm__compute_1_1graph_1_1_node_idx_pair.xhtml">NodeIdxPair</a> input, unsigned int num_groups)</td></tr>
<tr class="memdesc:a06a2546f9cc520a15aa18981cbc48537"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds an channel shuffle layer node to the graph.  <a href="#a06a2546f9cc520a15aa18981cbc48537">More...</a><br /></td></tr>
<tr class="separator:a06a2546f9cc520a15aa18981cbc48537"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1da6bd31124ec2036d37d09b76cf9ffa"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="namespacearm__compute_1_1graph.xhtml#a56952a8591a9d8481450ae707ae355e7">NodeID</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1graph_1_1_graph_builder.xhtml#a1da6bd31124ec2036d37d09b76cf9ffa">add_convolution_node</a> (<a class="el" href="classarm__compute_1_1graph_1_1_graph.xhtml">Graph</a> &amp;g, <a class="el" href="structarm__compute_1_1graph_1_1_node_params.xhtml">NodeParams</a> params, <a class="el" href="structarm__compute_1_1graph_1_1_node_idx_pair.xhtml">NodeIdxPair</a> input, <a class="el" href="classarm__compute_1_1_size2_d.xhtml">Size2D</a> kernel_spatial_extend, unsigned int depth, <a class="el" href="classarm__compute_1_1_pad_stride_info.xhtml">PadStrideInfo</a> conv_info, unsigned int num_groups=1, <a class="el" href="namespacearm__compute_1_1graph.xhtml#a683661ae75dcb7aef16b9c9bde31517d">ConvolutionMethod</a> method=<a class="el" href="namespacearm__compute_1_1graph.xhtml#a683661ae75dcb7aef16b9c9bde31517da7a1920d61156abc05a60135aefe8bc67">ConvolutionMethod::Default</a>, <a class="el" href="namespacearm__compute_1_1graph.xhtml#ac85a46f3ebd3ab09f576a994ac2dce11">FastMathHint</a> fast_math_hint=<a class="el" href="namespacearm__compute_1_1graph.xhtml#ac85a46f3ebd3ab09f576a994ac2dce11ab9f5c797ebbf55adccdd8539a65a0241">FastMathHint::Disabled</a>, <a class="el" href="namespacearm__compute_1_1graph.xhtml#a41c3f59161734b8492782359f583b676">ITensorAccessorUPtr</a> weights_accessor=nullptr, <a class="el" href="namespacearm__compute_1_1graph.xhtml#a41c3f59161734b8492782359f583b676">ITensorAccessorUPtr</a> bias_accessor=nullptr, const <a class="el" href="structarm__compute_1_1_quantization_info.xhtml">QuantizationInfo</a> weights_quant_info=<a class="el" href="structarm__compute_1_1_quantization_info.xhtml">QuantizationInfo</a>(), const <a class="el" href="structarm__compute_1_1_quantization_info.xhtml">QuantizationInfo</a> out_quant_info=<a class="el" href="structarm__compute_1_1_quantization_info.xhtml">QuantizationInfo</a>())</td></tr>
<tr class="memdesc:a1da6bd31124ec2036d37d09b76cf9ffa"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds a convolution layer node to the graph.  <a href="#a1da6bd31124ec2036d37d09b76cf9ffa">More...</a><br /></td></tr>
<tr class="separator:a1da6bd31124ec2036d37d09b76cf9ffa"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac37002ce0fe85fb0ac99e530475b2aa4"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="namespacearm__compute_1_1graph.xhtml#a56952a8591a9d8481450ae707ae355e7">NodeID</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1graph_1_1_graph_builder.xhtml#ac37002ce0fe85fb0ac99e530475b2aa4">add_deconvolution_node</a> (<a class="el" href="classarm__compute_1_1graph_1_1_graph.xhtml">Graph</a> &amp;g, <a class="el" href="structarm__compute_1_1graph_1_1_node_params.xhtml">NodeParams</a> params, <a class="el" href="structarm__compute_1_1graph_1_1_node_idx_pair.xhtml">NodeIdxPair</a> input, <a class="el" href="classarm__compute_1_1_size2_d.xhtml">Size2D</a> kernel_spatial_extend, unsigned int depth, <a class="el" href="classarm__compute_1_1_pad_stride_info.xhtml">PadStrideInfo</a> deconv_info, <a class="el" href="classarm__compute_1_1_size2_d.xhtml">Size2D</a> inner_border, <a class="el" href="namespacearm__compute_1_1graph.xhtml#a41c3f59161734b8492782359f583b676">ITensorAccessorUPtr</a> weights_accessor=nullptr, <a class="el" href="namespacearm__compute_1_1graph.xhtml#a41c3f59161734b8492782359f583b676">ITensorAccessorUPtr</a> bias_accessor=nullptr)</td></tr>
<tr class="memdesc:ac37002ce0fe85fb0ac99e530475b2aa4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds a deconvolution layer node to the graph.  <a href="#ac37002ce0fe85fb0ac99e530475b2aa4">More...</a><br /></td></tr>
<tr class="separator:ac37002ce0fe85fb0ac99e530475b2aa4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a13b857340205ae26f8ca1fd30a648b75"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="namespacearm__compute_1_1graph.xhtml#a56952a8591a9d8481450ae707ae355e7">NodeID</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1graph_1_1_graph_builder.xhtml#a13b857340205ae26f8ca1fd30a648b75">add_concatenate_node</a> (<a class="el" href="classarm__compute_1_1graph_1_1_graph.xhtml">Graph</a> &amp;g, <a class="el" href="structarm__compute_1_1graph_1_1_node_params.xhtml">NodeParams</a> params, std::vector&lt; <a class="el" href="structarm__compute_1_1graph_1_1_node_idx_pair.xhtml">NodeIdxPair</a> &gt; inputs, <a class="el" href="namespacearm__compute.xhtml#a74ce3f7420453d3446218ff3b7453e02">DataLayoutDimension</a> axis)</td></tr>
<tr class="memdesc:a13b857340205ae26f8ca1fd30a648b75"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds a depth concatenate node to the graph.  <a href="#a13b857340205ae26f8ca1fd30a648b75">More...</a><br /></td></tr>
<tr class="separator:a13b857340205ae26f8ca1fd30a648b75"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab590239276adf8207d12ed010c0c8667"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="namespacearm__compute_1_1graph.xhtml#a56952a8591a9d8481450ae707ae355e7">NodeID</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1graph_1_1_graph_builder.xhtml#ab590239276adf8207d12ed010c0c8667">add_depthwise_convolution_node</a> (<a class="el" href="classarm__compute_1_1graph_1_1_graph.xhtml">Graph</a> &amp;g, <a class="el" href="structarm__compute_1_1graph_1_1_node_params.xhtml">NodeParams</a> params, <a class="el" href="structarm__compute_1_1graph_1_1_node_idx_pair.xhtml">NodeIdxPair</a> input, <a class="el" href="classarm__compute_1_1_size2_d.xhtml">Size2D</a> kernel_spatial_extend, <a class="el" href="classarm__compute_1_1_pad_stride_info.xhtml">PadStrideInfo</a> conv_info, <a class="el" href="namespacearm__compute_1_1graph.xhtml#a75ce9b1baad4303a53124d6f0795821f">DepthwiseConvolutionMethod</a> method=<a class="el" href="namespacearm__compute_1_1graph.xhtml#a75ce9b1baad4303a53124d6f0795821fa7a1920d61156abc05a60135aefe8bc67">DepthwiseConvolutionMethod::Default</a>, <a class="el" href="namespacearm__compute_1_1graph.xhtml#a41c3f59161734b8492782359f583b676">ITensorAccessorUPtr</a> weights_accessor=nullptr, <a class="el" href="namespacearm__compute_1_1graph.xhtml#a41c3f59161734b8492782359f583b676">ITensorAccessorUPtr</a> bias_accessor=nullptr, const <a class="el" href="structarm__compute_1_1_quantization_info.xhtml">QuantizationInfo</a> quant_info=<a class="el" href="structarm__compute_1_1_quantization_info.xhtml">QuantizationInfo</a>())</td></tr>
<tr class="memdesc:ab590239276adf8207d12ed010c0c8667"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds a depth-wise convolution layer node to the graph.  <a href="#ab590239276adf8207d12ed010c0c8667">More...</a><br /></td></tr>
<tr class="separator:ab590239276adf8207d12ed010c0c8667"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7d0d78c3fe7a6530cf184a8f99172214"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="namespacearm__compute_1_1graph.xhtml#a56952a8591a9d8481450ae707ae355e7">NodeID</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1graph_1_1_graph_builder.xhtml#a7d0d78c3fe7a6530cf184a8f99172214">add_elementwise_node</a> (<a class="el" href="classarm__compute_1_1graph_1_1_graph.xhtml">Graph</a> &amp;g, <a class="el" href="structarm__compute_1_1graph_1_1_node_params.xhtml">NodeParams</a> params, <a class="el" href="structarm__compute_1_1graph_1_1_node_idx_pair.xhtml">NodeIdxPair</a> input0, <a class="el" href="structarm__compute_1_1graph_1_1_node_idx_pair.xhtml">NodeIdxPair</a> input1, <a class="el" href="namespacearm__compute_1_1graph.xhtml#aa12973876c037bddff8e9ece94aca0e4">EltwiseOperation</a> operation)</td></tr>
<tr class="memdesc:a7d0d78c3fe7a6530cf184a8f99172214"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds an element-wise layer node to the graph.  <a href="#a7d0d78c3fe7a6530cf184a8f99172214">More...</a><br /></td></tr>
<tr class="separator:a7d0d78c3fe7a6530cf184a8f99172214"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab00bf734b4da419ec25f0705a7ff30e9"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="namespacearm__compute_1_1graph.xhtml#a56952a8591a9d8481450ae707ae355e7">NodeID</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1graph_1_1_graph_builder.xhtml#ab00bf734b4da419ec25f0705a7ff30e9">add_dummy_node</a> (<a class="el" href="classarm__compute_1_1graph_1_1_graph.xhtml">Graph</a> &amp;g, <a class="el" href="structarm__compute_1_1graph_1_1_node_params.xhtml">NodeParams</a> params, <a class="el" href="structarm__compute_1_1graph_1_1_node_idx_pair.xhtml">NodeIdxPair</a> input, <a class="el" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a> shape)</td></tr>
<tr class="memdesc:ab00bf734b4da419ec25f0705a7ff30e9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds a Dummy node to the graph.  <a href="#ab00bf734b4da419ec25f0705a7ff30e9">More...</a><br /></td></tr>
<tr class="separator:ab00bf734b4da419ec25f0705a7ff30e9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a822583f5b38ff029ea1e1c221dbfe19f"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="namespacearm__compute_1_1graph.xhtml#a56952a8591a9d8481450ae707ae355e7">NodeID</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1graph_1_1_graph_builder.xhtml#a822583f5b38ff029ea1e1c221dbfe19f">add_flatten_node</a> (<a class="el" href="classarm__compute_1_1graph_1_1_graph.xhtml">Graph</a> &amp;g, <a class="el" href="structarm__compute_1_1graph_1_1_node_params.xhtml">NodeParams</a> params, <a class="el" href="structarm__compute_1_1graph_1_1_node_idx_pair.xhtml">NodeIdxPair</a> input)</td></tr>
<tr class="memdesc:a822583f5b38ff029ea1e1c221dbfe19f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds a flatten layer node to the graph.  <a href="#a822583f5b38ff029ea1e1c221dbfe19f">More...</a><br /></td></tr>
<tr class="separator:a822583f5b38ff029ea1e1c221dbfe19f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aece87863ae55a12320fb369677f1f22d"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="namespacearm__compute_1_1graph.xhtml#a56952a8591a9d8481450ae707ae355e7">NodeID</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1graph_1_1_graph_builder.xhtml#aece87863ae55a12320fb369677f1f22d">add_fully_connected_layer</a> (<a class="el" href="classarm__compute_1_1graph_1_1_graph.xhtml">Graph</a> &amp;g, <a class="el" href="structarm__compute_1_1graph_1_1_node_params.xhtml">NodeParams</a> params, <a class="el" href="structarm__compute_1_1graph_1_1_node_idx_pair.xhtml">NodeIdxPair</a> input, unsigned int num_outputs, <a class="el" href="namespacearm__compute_1_1graph.xhtml#a41c3f59161734b8492782359f583b676">ITensorAccessorUPtr</a> weights_accessor=nullptr, <a class="el" href="namespacearm__compute_1_1graph.xhtml#a41c3f59161734b8492782359f583b676">ITensorAccessorUPtr</a> bias_accessor=nullptr, const <a class="el" href="structarm__compute_1_1_fully_connected_layer_info.xhtml">FullyConnectedLayerInfo</a> fc_info=<a class="el" href="structarm__compute_1_1_fully_connected_layer_info.xhtml">FullyConnectedLayerInfo</a>(), const <a class="el" href="structarm__compute_1_1_quantization_info.xhtml">QuantizationInfo</a> weights_quant_info=<a class="el" href="structarm__compute_1_1_quantization_info.xhtml">QuantizationInfo</a>(), const <a class="el" href="structarm__compute_1_1_quantization_info.xhtml">QuantizationInfo</a> out_quant_info=<a class="el" href="structarm__compute_1_1_quantization_info.xhtml">QuantizationInfo</a>())</td></tr>
<tr class="memdesc:aece87863ae55a12320fb369677f1f22d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds a fully connected layer node to the graph.  <a href="#aece87863ae55a12320fb369677f1f22d">More...</a><br /></td></tr>
<tr class="separator:aece87863ae55a12320fb369677f1f22d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a15885529ec64ecf2b388f6229c5a65fa"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="namespacearm__compute_1_1graph.xhtml#a56952a8591a9d8481450ae707ae355e7">NodeID</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1graph_1_1_graph_builder.xhtml#a15885529ec64ecf2b388f6229c5a65fa">add_normalization_node</a> (<a class="el" href="classarm__compute_1_1graph_1_1_graph.xhtml">Graph</a> &amp;g, <a class="el" href="structarm__compute_1_1graph_1_1_node_params.xhtml">NodeParams</a> params, <a class="el" href="structarm__compute_1_1graph_1_1_node_idx_pair.xhtml">NodeIdxPair</a> input, <a class="el" href="classarm__compute_1_1_normalization_layer_info.xhtml">NormalizationLayerInfo</a> norm_info)</td></tr>
<tr class="memdesc:a15885529ec64ecf2b388f6229c5a65fa"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds a normalization layer node to the graph.  <a href="#a15885529ec64ecf2b388f6229c5a65fa">More...</a><br /></td></tr>
<tr class="separator:a15885529ec64ecf2b388f6229c5a65fa"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a31b691e746b095214ad519a960fd1f92"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="namespacearm__compute_1_1graph.xhtml#a56952a8591a9d8481450ae707ae355e7">NodeID</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1graph_1_1_graph_builder.xhtml#a31b691e746b095214ad519a960fd1f92">add_permute_node</a> (<a class="el" href="classarm__compute_1_1graph_1_1_graph.xhtml">Graph</a> &amp;g, <a class="el" href="structarm__compute_1_1graph_1_1_node_params.xhtml">NodeParams</a> params, <a class="el" href="structarm__compute_1_1graph_1_1_node_idx_pair.xhtml">NodeIdxPair</a> input, <a class="el" href="namespacearm__compute.xhtml#a33e65be485104e2e9e69fca551d6f492">PermutationVector</a> perm, <a class="el" href="namespacearm__compute.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0">DataLayout</a> layout=<a class="el" href="namespacearm__compute.xhtml#a3a440b3893fa10608d4428958be1c52ea696b031073e74bf2cb98e5ef201d4aa3">DataLayout::UNKNOWN</a>)</td></tr>
<tr class="memdesc:a31b691e746b095214ad519a960fd1f92"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds a permute layer node to the graph.  <a href="#a31b691e746b095214ad519a960fd1f92">More...</a><br /></td></tr>
<tr class="separator:a31b691e746b095214ad519a960fd1f92"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af8eae85804c35bc91d26fe28efc3936a"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="namespacearm__compute_1_1graph.xhtml#a56952a8591a9d8481450ae707ae355e7">NodeID</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1graph_1_1_graph_builder.xhtml#af8eae85804c35bc91d26fe28efc3936a">add_pooling_node</a> (<a class="el" href="classarm__compute_1_1graph_1_1_graph.xhtml">Graph</a> &amp;g, <a class="el" href="structarm__compute_1_1graph_1_1_node_params.xhtml">NodeParams</a> params, <a class="el" href="structarm__compute_1_1graph_1_1_node_idx_pair.xhtml">NodeIdxPair</a> input, <a class="el" href="classarm__compute_1_1_pooling_layer_info.xhtml">PoolingLayerInfo</a> pool_info)</td></tr>
<tr class="memdesc:af8eae85804c35bc91d26fe28efc3936a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds a pooling layer node to the graph.  <a href="#af8eae85804c35bc91d26fe28efc3936a">More...</a><br /></td></tr>
<tr class="separator:af8eae85804c35bc91d26fe28efc3936a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a30a1530d919a233e389f32ad9a6e2b25"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="namespacearm__compute_1_1graph.xhtml#a56952a8591a9d8481450ae707ae355e7">NodeID</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1graph_1_1_graph_builder.xhtml#a30a1530d919a233e389f32ad9a6e2b25">add_reshape_node</a> (<a class="el" href="classarm__compute_1_1graph_1_1_graph.xhtml">Graph</a> &amp;g, <a class="el" href="structarm__compute_1_1graph_1_1_node_params.xhtml">NodeParams</a> params, <a class="el" href="structarm__compute_1_1graph_1_1_node_idx_pair.xhtml">NodeIdxPair</a> input, <a class="el" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a> shape)</td></tr>
<tr class="memdesc:a30a1530d919a233e389f32ad9a6e2b25"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds a reshape layer node to the graph.  <a href="#a30a1530d919a233e389f32ad9a6e2b25">More...</a><br /></td></tr>
<tr class="separator:a30a1530d919a233e389f32ad9a6e2b25"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ade08649ceffaa6e410a213c87b71d1f0"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="namespacearm__compute_1_1graph.xhtml#a56952a8591a9d8481450ae707ae355e7">NodeID</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1graph_1_1_graph_builder.xhtml#ade08649ceffaa6e410a213c87b71d1f0">add_resize_node</a> (<a class="el" href="classarm__compute_1_1graph_1_1_graph.xhtml">Graph</a> &amp;g, <a class="el" href="structarm__compute_1_1graph_1_1_node_params.xhtml">NodeParams</a> params, <a class="el" href="structarm__compute_1_1graph_1_1_node_idx_pair.xhtml">NodeIdxPair</a> input, <a class="el" href="namespacearm__compute.xhtml#a966a9c417ce5e94dca08d9b5e745c0c9">InterpolationPolicy</a> policy, float width_scale, float height_scale)</td></tr>
<tr class="memdesc:ade08649ceffaa6e410a213c87b71d1f0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds a resize layer node to the graph.  <a href="#ade08649ceffaa6e410a213c87b71d1f0">More...</a><br /></td></tr>
<tr class="separator:ade08649ceffaa6e410a213c87b71d1f0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9065925e20c5b5aa449d3ef9dc371085"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="namespacearm__compute_1_1graph.xhtml#a56952a8591a9d8481450ae707ae355e7">NodeID</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1graph_1_1_graph_builder.xhtml#a9065925e20c5b5aa449d3ef9dc371085">add_scale_layer</a> (<a class="el" href="classarm__compute_1_1graph_1_1_graph.xhtml">Graph</a> &amp;g, const <a class="el" href="structarm__compute_1_1graph_1_1_node_params.xhtml">NodeParams</a> &amp;params, <a class="el" href="structarm__compute_1_1graph_1_1_node_idx_pair.xhtml">NodeIdxPair</a> input, <a class="el" href="namespacearm__compute_1_1graph.xhtml#a41c3f59161734b8492782359f583b676">ITensorAccessorUPtr</a> mul_accessor=nullptr, <a class="el" href="namespacearm__compute_1_1graph.xhtml#a41c3f59161734b8492782359f583b676">ITensorAccessorUPtr</a> add_accessor=nullptr)</td></tr>
<tr class="memdesc:a9065925e20c5b5aa449d3ef9dc371085"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds a scale layer node to the graph This layer computes a product of the input with a scale (read from mul_accessor) and it applies an offset (read from add_accessor).  <a href="#a9065925e20c5b5aa449d3ef9dc371085">More...</a><br /></td></tr>
<tr class="separator:a9065925e20c5b5aa449d3ef9dc371085"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acb202d26a81ff465a95e5f869d6ee141"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="namespacearm__compute_1_1graph.xhtml#a56952a8591a9d8481450ae707ae355e7">NodeID</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1graph_1_1_graph_builder.xhtml#acb202d26a81ff465a95e5f869d6ee141">add_softmax_node</a> (<a class="el" href="classarm__compute_1_1graph_1_1_graph.xhtml">Graph</a> &amp;g, <a class="el" href="structarm__compute_1_1graph_1_1_node_params.xhtml">NodeParams</a> params, <a class="el" href="structarm__compute_1_1graph_1_1_node_idx_pair.xhtml">NodeIdxPair</a> input, float beta=1.f)</td></tr>
<tr class="memdesc:acb202d26a81ff465a95e5f869d6ee141"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds a softmax node to the graph.  <a href="#acb202d26a81ff465a95e5f869d6ee141">More...</a><br /></td></tr>
<tr class="separator:acb202d26a81ff465a95e5f869d6ee141"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afbe47092174c74b23af3312c02341e09"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="namespacearm__compute_1_1graph.xhtml#a56952a8591a9d8481450ae707ae355e7">NodeID</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1graph_1_1_graph_builder.xhtml#afbe47092174c74b23af3312c02341e09">add_split_node</a> (<a class="el" href="classarm__compute_1_1graph_1_1_graph.xhtml">Graph</a> &amp;g, <a class="el" href="structarm__compute_1_1graph_1_1_node_params.xhtml">NodeParams</a> params, <a class="el" href="structarm__compute_1_1graph_1_1_node_idx_pair.xhtml">NodeIdxPair</a> input, unsigned int num_splits, unsigned int axis=0)</td></tr>
<tr class="memdesc:afbe47092174c74b23af3312c02341e09"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds a split node to the graph.  <a href="#afbe47092174c74b23af3312c02341e09">More...</a><br /></td></tr>
<tr class="separator:afbe47092174c74b23af3312c02341e09"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p><a class="el" href="classarm__compute_1_1graph_1_1_graph.xhtml" title="Graph class. ">Graph</a> builder class. </p>
<p>Builds and compiles a graph </p>

<p>Definition at line <a class="el" href="_graph_builder_8h_source.xhtml#l00041">41</a> of file <a class="el" href="_graph_builder_8h_source.xhtml">GraphBuilder.h</a>.</p>
</div><h2 class="groupheader">Member Function Documentation</h2>
<a class="anchor" id="a890a11b240837645352791b2e89632b1"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static <a class="el" href="namespacearm__compute_1_1graph.xhtml#a56952a8591a9d8481450ae707ae355e7">NodeID</a> add_activation_node </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1graph_1_1_graph.xhtml">Graph</a> &amp;&#160;</td>
          <td class="paramname"><em>g</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structarm__compute_1_1graph_1_1_node_params.xhtml">NodeParams</a>&#160;</td>
          <td class="paramname"><em>params</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structarm__compute_1_1graph_1_1_node_idx_pair.xhtml">NodeIdxPair</a>&#160;</td>
          <td class="paramname"><em>input</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1_activation_layer_info.xhtml">ActivationLayerInfo</a>&#160;</td>
          <td class="paramname"><em>act_info</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Adds an activation layer node to the graph. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">g</td><td><a class="el" href="classarm__compute_1_1graph_1_1_graph.xhtml" title="Graph class. ">Graph</a> to add the node to </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">params</td><td>Common node parameters </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">input</td><td>Input to the activation layer node as a NodeID-Index pair </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">act_info</td><td>Activation layer information</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Node ID of the created node, EmptyNodeID in case of error </dd></dl>

<p>Referenced by <a class="el" href="_layers_8h_source.xhtml#l00106">ActivationLayer::create_layer()</a>.</p>

</div>
</div>
<a class="anchor" id="acc31c037c3eac4234abae6ec0e080d2f"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static <a class="el" href="namespacearm__compute_1_1graph.xhtml#a56952a8591a9d8481450ae707ae355e7">NodeID</a> add_batch_normalization_node </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1graph_1_1_graph.xhtml">Graph</a> &amp;&#160;</td>
          <td class="paramname"><em>g</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structarm__compute_1_1graph_1_1_node_params.xhtml">NodeParams</a>&#160;</td>
          <td class="paramname"><em>params</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structarm__compute_1_1graph_1_1_node_idx_pair.xhtml">NodeIdxPair</a>&#160;</td>
          <td class="paramname"><em>input</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>epsilon</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespacearm__compute_1_1graph.xhtml#a41c3f59161734b8492782359f583b676">ITensorAccessorUPtr</a>&#160;</td>
          <td class="paramname"><em>mean_accessor</em> = <code>nullptr</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespacearm__compute_1_1graph.xhtml#a41c3f59161734b8492782359f583b676">ITensorAccessorUPtr</a>&#160;</td>
          <td class="paramname"><em>var_accessor</em> = <code>nullptr</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespacearm__compute_1_1graph.xhtml#a41c3f59161734b8492782359f583b676">ITensorAccessorUPtr</a>&#160;</td>
          <td class="paramname"><em>beta_accessor</em> = <code>nullptr</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespacearm__compute_1_1graph.xhtml#a41c3f59161734b8492782359f583b676">ITensorAccessorUPtr</a>&#160;</td>
          <td class="paramname"><em>gamma_accessor</em> = <code>nullptr</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Adds a batch normalization layer node to the graph. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">g</td><td><a class="el" href="classarm__compute_1_1graph_1_1_graph.xhtml" title="Graph class. ">Graph</a> to add the node to </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">params</td><td>Common node parameters </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">input</td><td>Input to the batch normalization layer node as a NodeID-Index pair </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">epsilon</td><td>Epsilon parameter </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">mean_accessor</td><td>Const Node ID that contains the mean values </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">var_accessor</td><td>Const Node ID that contains the variance values </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">beta_accessor</td><td>Const Node ID that contains the beta values. Can be EmptyNodeID </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">gamma_accessor</td><td>Const Node ID that contains the gamma values. Can be EmptyNodeID</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Node ID of the created node, EmptyNodeID in case of error </dd></dl>

<p>Referenced by <a class="el" href="_layers_8h_source.xhtml#l00138">BatchNormalizationLayer::create_layer()</a>.</p>

</div>
</div>
<a class="anchor" id="a06a2546f9cc520a15aa18981cbc48537"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static <a class="el" href="namespacearm__compute_1_1graph.xhtml#a56952a8591a9d8481450ae707ae355e7">NodeID</a> add_channel_shuffle_node </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1graph_1_1_graph.xhtml">Graph</a> &amp;&#160;</td>
          <td class="paramname"><em>g</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structarm__compute_1_1graph_1_1_node_params.xhtml">NodeParams</a>&#160;</td>
          <td class="paramname"><em>params</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structarm__compute_1_1graph_1_1_node_idx_pair.xhtml">NodeIdxPair</a>&#160;</td>
          <td class="paramname"><em>input</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>num_groups</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Adds an channel shuffle layer node to the graph. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">g</td><td><a class="el" href="classarm__compute_1_1graph_1_1_graph.xhtml" title="Graph class. ">Graph</a> to add the node to </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">params</td><td>Common node parameters </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">input</td><td>Input to the activation layer node as a NodeID-Index pair </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">num_groups</td><td>Number of groups</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Node ID of the created node, EmptyNodeID in case of error </dd></dl>

<p>Referenced by <a class="el" href="_layers_8h_source.xhtml#l00170">ChannelShuffleLayer::create_layer()</a>.</p>

</div>
</div>
<a class="anchor" id="a13b857340205ae26f8ca1fd30a648b75"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static <a class="el" href="namespacearm__compute_1_1graph.xhtml#a56952a8591a9d8481450ae707ae355e7">NodeID</a> add_concatenate_node </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1graph_1_1_graph.xhtml">Graph</a> &amp;&#160;</td>
          <td class="paramname"><em>g</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structarm__compute_1_1graph_1_1_node_params.xhtml">NodeParams</a>&#160;</td>
          <td class="paramname"><em>params</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">std::vector&lt; <a class="el" href="structarm__compute_1_1graph_1_1_node_idx_pair.xhtml">NodeIdxPair</a> &gt;&#160;</td>
          <td class="paramname"><em>inputs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespacearm__compute.xhtml#a74ce3f7420453d3446218ff3b7453e02">DataLayoutDimension</a>&#160;</td>
          <td class="paramname"><em>axis</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Adds a depth concatenate node to the graph. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">g</td><td><a class="el" href="classarm__compute_1_1graph_1_1_graph.xhtml" title="Graph class. ">Graph</a> to add the node to </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">params</td><td>Common node parameters </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">inputs</td><td>Inputs to the depth concatenate layer node as a NodeID-Index pair </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">axis</td><td>Concatenation axis</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Node ID of the created node, EmptyNodeID in case of error </dd></dl>

<p>Referenced by <a class="el" href="_layers_8h_source.xhtml#l00630">BranchLayer::create_layer()</a>.</p>

</div>
</div>
<a class="anchor" id="ac304c66615e62c6b4aa40e8728920002"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static <a class="el" href="namespacearm__compute_1_1graph.xhtml#a56952a8591a9d8481450ae707ae355e7">NodeID</a> add_const_node </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1graph_1_1_graph.xhtml">Graph</a> &amp;&#160;</td>
          <td class="paramname"><em>g</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structarm__compute_1_1graph_1_1_node_params.xhtml">NodeParams</a>&#160;</td>
          <td class="paramname"><em>params</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structarm__compute_1_1graph_1_1_tensor_descriptor.xhtml">TensorDescriptor</a>&#160;</td>
          <td class="paramname"><em>desc</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespacearm__compute_1_1graph.xhtml#a41c3f59161734b8492782359f583b676">ITensorAccessorUPtr</a>&#160;</td>
          <td class="paramname"><em>accessor</em> = <code>nullptr</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Adds a Const node to the graph. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">g</td><td><a class="el" href="classarm__compute_1_1graph_1_1_graph.xhtml" title="Graph class. ">Graph</a> to add the node to </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">params</td><td>Common node parameters </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">desc</td><td><a class="el" href="classarm__compute_1_1graph_1_1_tensor.xhtml" title="Tensor object. ">Tensor</a> descriptor of the node </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">accessor</td><td>(Optional) Accessor of the const node data</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Node ID of the created node, EmptyNodeID in case of error </dd></dl>

</div>
</div>
<a class="anchor" id="a1da6bd31124ec2036d37d09b76cf9ffa"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static <a class="el" href="namespacearm__compute_1_1graph.xhtml#a56952a8591a9d8481450ae707ae355e7">NodeID</a> add_convolution_node </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1graph_1_1_graph.xhtml">Graph</a> &amp;&#160;</td>
          <td class="paramname"><em>g</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structarm__compute_1_1graph_1_1_node_params.xhtml">NodeParams</a>&#160;</td>
          <td class="paramname"><em>params</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structarm__compute_1_1graph_1_1_node_idx_pair.xhtml">NodeIdxPair</a>&#160;</td>
          <td class="paramname"><em>input</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1_size2_d.xhtml">Size2D</a>&#160;</td>
          <td class="paramname"><em>kernel_spatial_extend</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>depth</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1_pad_stride_info.xhtml">PadStrideInfo</a>&#160;</td>
          <td class="paramname"><em>conv_info</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>num_groups</em> = <code>1</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespacearm__compute_1_1graph.xhtml#a683661ae75dcb7aef16b9c9bde31517d">ConvolutionMethod</a>&#160;</td>
          <td class="paramname"><em>method</em> = <code><a class="el" href="namespacearm__compute_1_1graph.xhtml#a683661ae75dcb7aef16b9c9bde31517da7a1920d61156abc05a60135aefe8bc67">ConvolutionMethod::Default</a></code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespacearm__compute_1_1graph.xhtml#ac85a46f3ebd3ab09f576a994ac2dce11">FastMathHint</a>&#160;</td>
          <td class="paramname"><em>fast_math_hint</em> = <code><a class="el" href="namespacearm__compute_1_1graph.xhtml#ac85a46f3ebd3ab09f576a994ac2dce11ab9f5c797ebbf55adccdd8539a65a0241">FastMathHint::Disabled</a></code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespacearm__compute_1_1graph.xhtml#a41c3f59161734b8492782359f583b676">ITensorAccessorUPtr</a>&#160;</td>
          <td class="paramname"><em>weights_accessor</em> = <code>nullptr</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespacearm__compute_1_1graph.xhtml#a41c3f59161734b8492782359f583b676">ITensorAccessorUPtr</a>&#160;</td>
          <td class="paramname"><em>bias_accessor</em> = <code>nullptr</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structarm__compute_1_1_quantization_info.xhtml">QuantizationInfo</a>&#160;</td>
          <td class="paramname"><em>weights_quant_info</em> = <code><a class="el" href="structarm__compute_1_1_quantization_info.xhtml">QuantizationInfo</a>()</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structarm__compute_1_1_quantization_info.xhtml">QuantizationInfo</a>&#160;</td>
          <td class="paramname"><em>out_quant_info</em> = <code><a class="el" href="structarm__compute_1_1_quantization_info.xhtml">QuantizationInfo</a>()</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Adds a convolution layer node to the graph. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">g</td><td><a class="el" href="classarm__compute_1_1graph_1_1_graph.xhtml" title="Graph class. ">Graph</a> to add the node to </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">params</td><td>Common node parameters </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">input</td><td>Input to the convolution layer node as a NodeID-Index pair </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">kernel_spatial_extend</td><td>Spatial extend of convolution kernels </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">depth</td><td>Number of convolution kernels </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">conv_info</td><td>Convolution layer information </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">num_groups</td><td>(Optional) Number of groups for a grouped convolution. Defaults to 1 </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">method</td><td>(Optional) Convolution method to use </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">fast_math_hint</td><td>(Optional) Fast math hint </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">weights_accessor</td><td>(Optional) Accessor of the weights node data </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">bias_accessor</td><td>(Optional) Accessor of the bias node data </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">weights_quant_info</td><td>(Optional) Weights quantization info </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">out_quant_info</td><td>(Optional) Output quantization info</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Node ID of the created node, EmptyNodeID in case of error </dd></dl>

<p>Referenced by <a class="el" href="_layers_8h_source.xhtml#l00218">ConvolutionLayer::create_layer()</a>.</p>

</div>
</div>
<a class="anchor" id="ac37002ce0fe85fb0ac99e530475b2aa4"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static <a class="el" href="namespacearm__compute_1_1graph.xhtml#a56952a8591a9d8481450ae707ae355e7">NodeID</a> add_deconvolution_node </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1graph_1_1_graph.xhtml">Graph</a> &amp;&#160;</td>
          <td class="paramname"><em>g</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structarm__compute_1_1graph_1_1_node_params.xhtml">NodeParams</a>&#160;</td>
          <td class="paramname"><em>params</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structarm__compute_1_1graph_1_1_node_idx_pair.xhtml">NodeIdxPair</a>&#160;</td>
          <td class="paramname"><em>input</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1_size2_d.xhtml">Size2D</a>&#160;</td>
          <td class="paramname"><em>kernel_spatial_extend</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>depth</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1_pad_stride_info.xhtml">PadStrideInfo</a>&#160;</td>
          <td class="paramname"><em>deconv_info</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1_size2_d.xhtml">Size2D</a>&#160;</td>
          <td class="paramname"><em>inner_border</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespacearm__compute_1_1graph.xhtml#a41c3f59161734b8492782359f583b676">ITensorAccessorUPtr</a>&#160;</td>
          <td class="paramname"><em>weights_accessor</em> = <code>nullptr</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespacearm__compute_1_1graph.xhtml#a41c3f59161734b8492782359f583b676">ITensorAccessorUPtr</a>&#160;</td>
          <td class="paramname"><em>bias_accessor</em> = <code>nullptr</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Adds a deconvolution layer node to the graph. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">g</td><td><a class="el" href="classarm__compute_1_1graph_1_1_graph.xhtml" title="Graph class. ">Graph</a> to add the node to </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">params</td><td>Common node parameters </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">input</td><td>Input to the convolution layer node as a NodeID-Index pair </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">kernel_spatial_extend</td><td>Spatial extend of convolution kernels </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">depth</td><td>Number of convolution kernels </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">deconv_info</td><td>Convolution layer information </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">inner_border</td><td>Inner border (right, top) </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">weights_accessor</td><td>(Optional) Accessor of the weights node data </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">bias_accessor</td><td>(Optional) Accessor of the bias node data</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Node ID of the created node, EmptyNodeID in case of error </dd></dl>

<p>Referenced by <a class="el" href="_layers_8h_source.xhtml#l00271">DeconvolutionLayer::create_layer()</a>.</p>

</div>
</div>
<a class="anchor" id="ab590239276adf8207d12ed010c0c8667"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static <a class="el" href="namespacearm__compute_1_1graph.xhtml#a56952a8591a9d8481450ae707ae355e7">NodeID</a> add_depthwise_convolution_node </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1graph_1_1_graph.xhtml">Graph</a> &amp;&#160;</td>
          <td class="paramname"><em>g</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structarm__compute_1_1graph_1_1_node_params.xhtml">NodeParams</a>&#160;</td>
          <td class="paramname"><em>params</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structarm__compute_1_1graph_1_1_node_idx_pair.xhtml">NodeIdxPair</a>&#160;</td>
          <td class="paramname"><em>input</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1_size2_d.xhtml">Size2D</a>&#160;</td>
          <td class="paramname"><em>kernel_spatial_extend</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1_pad_stride_info.xhtml">PadStrideInfo</a>&#160;</td>
          <td class="paramname"><em>conv_info</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespacearm__compute_1_1graph.xhtml#a75ce9b1baad4303a53124d6f0795821f">DepthwiseConvolutionMethod</a>&#160;</td>
          <td class="paramname"><em>method</em> = <code><a class="el" href="namespacearm__compute_1_1graph.xhtml#a75ce9b1baad4303a53124d6f0795821fa7a1920d61156abc05a60135aefe8bc67">DepthwiseConvolutionMethod::Default</a></code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespacearm__compute_1_1graph.xhtml#a41c3f59161734b8492782359f583b676">ITensorAccessorUPtr</a>&#160;</td>
          <td class="paramname"><em>weights_accessor</em> = <code>nullptr</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespacearm__compute_1_1graph.xhtml#a41c3f59161734b8492782359f583b676">ITensorAccessorUPtr</a>&#160;</td>
          <td class="paramname"><em>bias_accessor</em> = <code>nullptr</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structarm__compute_1_1_quantization_info.xhtml">QuantizationInfo</a>&#160;</td>
          <td class="paramname"><em>quant_info</em> = <code><a class="el" href="structarm__compute_1_1_quantization_info.xhtml">QuantizationInfo</a>()</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Adds a depth-wise convolution layer node to the graph. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">g</td><td><a class="el" href="classarm__compute_1_1graph_1_1_graph.xhtml" title="Graph class. ">Graph</a> to add the node to </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">params</td><td>Common node parameters </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">input</td><td>Input to the depthwise convolution layer node as a NodeID-Index pair </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">kernel_spatial_extend</td><td>Spatial extend of convolution kernels </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">conv_info</td><td>Convolution layer information </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">method</td><td>(Optional) Convolution method to use </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">weights_accessor</td><td>(Optional) Accessor of the weights node data </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">bias_accessor</td><td>(Optional) Accessor of the bias node data </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">quant_info</td><td>(Optional) Weights quantization info</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Node ID of the created node, EmptyNodeID in case of error </dd></dl>

<p>Referenced by <a class="el" href="_layers_8h_source.xhtml#l00318">DepthwiseConvolutionLayer::create_layer()</a>.</p>

</div>
</div>
<a class="anchor" id="ab00bf734b4da419ec25f0705a7ff30e9"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static <a class="el" href="namespacearm__compute_1_1graph.xhtml#a56952a8591a9d8481450ae707ae355e7">NodeID</a> add_dummy_node </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1graph_1_1_graph.xhtml">Graph</a> &amp;&#160;</td>
          <td class="paramname"><em>g</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structarm__compute_1_1graph_1_1_node_params.xhtml">NodeParams</a>&#160;</td>
          <td class="paramname"><em>params</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structarm__compute_1_1graph_1_1_node_idx_pair.xhtml">NodeIdxPair</a>&#160;</td>
          <td class="paramname"><em>input</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a>&#160;</td>
          <td class="paramname"><em>shape</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Adds a Dummy node to the graph. </p>
<dl class="section note"><dt>Note</dt><dd>this node if for debugging purposes. Just alters the shape of the graph pipeline as requested.</dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">g</td><td><a class="el" href="classarm__compute_1_1graph_1_1_graph.xhtml" title="Graph class. ">Graph</a> to add the node to </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">params</td><td>Common node parameters </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">input</td><td>Input to the dummy node as a NodeID-Index pair </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">shape</td><td>Output shape</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Node ID of the created node, EmptyNodeID in case of error </dd></dl>

<p>Referenced by <a class="el" href="_layers_8h_source.xhtml#l00350">DummyLayer::create_layer()</a>.</p>

</div>
</div>
<a class="anchor" id="a7d0d78c3fe7a6530cf184a8f99172214"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static <a class="el" href="namespacearm__compute_1_1graph.xhtml#a56952a8591a9d8481450ae707ae355e7">NodeID</a> add_elementwise_node </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1graph_1_1_graph.xhtml">Graph</a> &amp;&#160;</td>
          <td class="paramname"><em>g</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structarm__compute_1_1graph_1_1_node_params.xhtml">NodeParams</a>&#160;</td>
          <td class="paramname"><em>params</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structarm__compute_1_1graph_1_1_node_idx_pair.xhtml">NodeIdxPair</a>&#160;</td>
          <td class="paramname"><em>input0</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structarm__compute_1_1graph_1_1_node_idx_pair.xhtml">NodeIdxPair</a>&#160;</td>
          <td class="paramname"><em>input1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespacearm__compute_1_1graph.xhtml#aa12973876c037bddff8e9ece94aca0e4">EltwiseOperation</a>&#160;</td>
          <td class="paramname"><em>operation</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Adds an element-wise layer node to the graph. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">g</td><td><a class="el" href="classarm__compute_1_1graph_1_1_graph.xhtml" title="Graph class. ">Graph</a> to add the node to </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">params</td><td>Common node parameters </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">input0</td><td>First input to the element-wise operation layer node as a NodeID-Index pair </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">input1</td><td>Second input to the element-wise operation layer node as a NodeID-Index pair </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">operation</td><td>Element-wise operation to perform</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Node ID of the created node, EmptyNodeID in case of error </dd></dl>

<p>Referenced by <a class="el" href="_layers_8h_source.xhtml#l00630">BranchLayer::create_layer()</a>.</p>

</div>
</div>
<a class="anchor" id="a822583f5b38ff029ea1e1c221dbfe19f"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static <a class="el" href="namespacearm__compute_1_1graph.xhtml#a56952a8591a9d8481450ae707ae355e7">NodeID</a> add_flatten_node </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1graph_1_1_graph.xhtml">Graph</a> &amp;&#160;</td>
          <td class="paramname"><em>g</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structarm__compute_1_1graph_1_1_node_params.xhtml">NodeParams</a>&#160;</td>
          <td class="paramname"><em>params</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structarm__compute_1_1graph_1_1_node_idx_pair.xhtml">NodeIdxPair</a>&#160;</td>
          <td class="paramname"><em>input</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Adds a flatten layer node to the graph. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">g</td><td><a class="el" href="classarm__compute_1_1graph_1_1_graph.xhtml" title="Graph class. ">Graph</a> to add the node to </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">params</td><td>Common node parameters </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">input</td><td>Input to the flatten layer node as a NodeID-Index pair</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Node ID of the created node, EmptyNodeID in case of error </dd></dl>

<p>Referenced by <a class="el" href="_layers_8h_source.xhtml#l00370">FlattenLayer::create_layer()</a>.</p>

</div>
</div>
<a class="anchor" id="aece87863ae55a12320fb369677f1f22d"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static <a class="el" href="namespacearm__compute_1_1graph.xhtml#a56952a8591a9d8481450ae707ae355e7">NodeID</a> add_fully_connected_layer </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1graph_1_1_graph.xhtml">Graph</a> &amp;&#160;</td>
          <td class="paramname"><em>g</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structarm__compute_1_1graph_1_1_node_params.xhtml">NodeParams</a>&#160;</td>
          <td class="paramname"><em>params</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structarm__compute_1_1graph_1_1_node_idx_pair.xhtml">NodeIdxPair</a>&#160;</td>
          <td class="paramname"><em>input</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>num_outputs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespacearm__compute_1_1graph.xhtml#a41c3f59161734b8492782359f583b676">ITensorAccessorUPtr</a>&#160;</td>
          <td class="paramname"><em>weights_accessor</em> = <code>nullptr</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespacearm__compute_1_1graph.xhtml#a41c3f59161734b8492782359f583b676">ITensorAccessorUPtr</a>&#160;</td>
          <td class="paramname"><em>bias_accessor</em> = <code>nullptr</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structarm__compute_1_1_fully_connected_layer_info.xhtml">FullyConnectedLayerInfo</a>&#160;</td>
          <td class="paramname"><em>fc_info</em> = <code><a class="el" href="structarm__compute_1_1_fully_connected_layer_info.xhtml">FullyConnectedLayerInfo</a>()</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structarm__compute_1_1_quantization_info.xhtml">QuantizationInfo</a>&#160;</td>
          <td class="paramname"><em>weights_quant_info</em> = <code><a class="el" href="structarm__compute_1_1_quantization_info.xhtml">QuantizationInfo</a>()</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structarm__compute_1_1_quantization_info.xhtml">QuantizationInfo</a>&#160;</td>
          <td class="paramname"><em>out_quant_info</em> = <code><a class="el" href="structarm__compute_1_1_quantization_info.xhtml">QuantizationInfo</a>()</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Adds a fully connected layer node to the graph. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">g</td><td><a class="el" href="classarm__compute_1_1graph_1_1_graph.xhtml" title="Graph class. ">Graph</a> to add the layer to </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">params</td><td>Common node parameters </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">input</td><td>Input to the fully connected layer node as a NodeID-Index pair </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">num_outputs</td><td>Number of output neurons </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">weights_accessor</td><td>(Optional) Accessor of the weights node data </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">bias_accessor</td><td>(Optional) Accessor of the bias node data </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">fc_info</td><td>(Optional) Fully connected layer metadata </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">weights_quant_info</td><td>(Optional) Weights quantization info </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">out_quant_info</td><td>(Optional) Output quantization info</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Node ID of the created node, EmptyNodeID in case of error </dd></dl>

<p>Referenced by <a class="el" href="_layers_8h_source.xhtml#l00406">FullyConnectedLayer::create_layer()</a>.</p>

</div>
</div>
<a class="anchor" id="a4bed63b35b24f8f44260237558e8a02b"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static <a class="el" href="namespacearm__compute_1_1graph.xhtml#a56952a8591a9d8481450ae707ae355e7">NodeID</a> add_input_node </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1graph_1_1_graph.xhtml">Graph</a> &amp;&#160;</td>
          <td class="paramname"><em>g</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structarm__compute_1_1graph_1_1_node_params.xhtml">NodeParams</a>&#160;</td>
          <td class="paramname"><em>params</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structarm__compute_1_1graph_1_1_tensor_descriptor.xhtml">TensorDescriptor</a>&#160;</td>
          <td class="paramname"><em>desc</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespacearm__compute_1_1graph.xhtml#a41c3f59161734b8492782359f583b676">ITensorAccessorUPtr</a>&#160;</td>
          <td class="paramname"><em>accessor</em> = <code>nullptr</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Adds an input layer node to the graph. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">g</td><td><a class="el" href="classarm__compute_1_1graph_1_1_graph.xhtml" title="Graph class. ">Graph</a> to add the node to </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">params</td><td>Common node parameters </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">desc</td><td><a class="el" href="classarm__compute_1_1graph_1_1_tensor.xhtml" title="Tensor object. ">Tensor</a> descriptor of the <a class="el" href="classarm__compute_1_1graph_1_1_tensor.xhtml" title="Tensor object. ">Tensor</a> </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">accessor</td><td>(Optional) Accessor of the input node data</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Node ID of the created node, EmptyNodeID in case of error </dd></dl>

<p>Referenced by <a class="el" href="_layers_8h_source.xhtml#l00058">InputLayer::create_layer()</a>.</p>

</div>
</div>
<a class="anchor" id="a15885529ec64ecf2b388f6229c5a65fa"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static <a class="el" href="namespacearm__compute_1_1graph.xhtml#a56952a8591a9d8481450ae707ae355e7">NodeID</a> add_normalization_node </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1graph_1_1_graph.xhtml">Graph</a> &amp;&#160;</td>
          <td class="paramname"><em>g</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structarm__compute_1_1graph_1_1_node_params.xhtml">NodeParams</a>&#160;</td>
          <td class="paramname"><em>params</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structarm__compute_1_1graph_1_1_node_idx_pair.xhtml">NodeIdxPair</a>&#160;</td>
          <td class="paramname"><em>input</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1_normalization_layer_info.xhtml">NormalizationLayerInfo</a>&#160;</td>
          <td class="paramname"><em>norm_info</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Adds a normalization layer node to the graph. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">g</td><td><a class="el" href="classarm__compute_1_1graph_1_1_graph.xhtml" title="Graph class. ">Graph</a> to add the node to </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">params</td><td>Common node parameters </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">input</td><td>Input to the normalization layer node as a NodeID-Index pair </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">norm_info</td><td>Normalization layer information</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Node ID of the created node, EmptyNodeID in case of error </dd></dl>

<p>Referenced by <a class="el" href="_layers_8h_source.xhtml#l00437">NormalizationLayer::create_layer()</a>.</p>

</div>
</div>
<a class="anchor" id="ab87ec51542d159d5efae373c82b7944c"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static <a class="el" href="namespacearm__compute_1_1graph.xhtml#a56952a8591a9d8481450ae707ae355e7">NodeID</a> add_output_node </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1graph_1_1_graph.xhtml">Graph</a> &amp;&#160;</td>
          <td class="paramname"><em>g</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structarm__compute_1_1graph_1_1_node_params.xhtml">NodeParams</a>&#160;</td>
          <td class="paramname"><em>params</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structarm__compute_1_1graph_1_1_node_idx_pair.xhtml">NodeIdxPair</a>&#160;</td>
          <td class="paramname"><em>input</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespacearm__compute_1_1graph.xhtml#a41c3f59161734b8492782359f583b676">ITensorAccessorUPtr</a>&#160;</td>
          <td class="paramname"><em>accessor</em> = <code>nullptr</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Adds an output layer node to the graph. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">g</td><td><a class="el" href="classarm__compute_1_1graph_1_1_graph.xhtml" title="Graph class. ">Graph</a> to add the node to </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">params</td><td>Common node parameters </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">input</td><td>Input to the output node as a NodeID-Index pair </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">accessor</td><td>(Optional) Accessor of the output node data</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Node ID of the created node, EmptyNodeID in case of error </dd></dl>

<p>Referenced by <a class="el" href="_layers_8h_source.xhtml#l00082">OutputLayer::create_layer()</a>.</p>

</div>
</div>
<a class="anchor" id="a31b691e746b095214ad519a960fd1f92"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static <a class="el" href="namespacearm__compute_1_1graph.xhtml#a56952a8591a9d8481450ae707ae355e7">NodeID</a> add_permute_node </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1graph_1_1_graph.xhtml">Graph</a> &amp;&#160;</td>
          <td class="paramname"><em>g</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structarm__compute_1_1graph_1_1_node_params.xhtml">NodeParams</a>&#160;</td>
          <td class="paramname"><em>params</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structarm__compute_1_1graph_1_1_node_idx_pair.xhtml">NodeIdxPair</a>&#160;</td>
          <td class="paramname"><em>input</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespacearm__compute.xhtml#a33e65be485104e2e9e69fca551d6f492">PermutationVector</a>&#160;</td>
          <td class="paramname"><em>perm</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespacearm__compute.xhtml#ad1d5cce2d9e9a5d61c243e5c989112e0">DataLayout</a>&#160;</td>
          <td class="paramname"><em>layout</em> = <code><a class="el" href="namespacearm__compute.xhtml#a3a440b3893fa10608d4428958be1c52ea696b031073e74bf2cb98e5ef201d4aa3">DataLayout::UNKNOWN</a></code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Adds a permute layer node to the graph. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">g</td><td><a class="el" href="classarm__compute_1_1graph_1_1_graph.xhtml" title="Graph class. ">Graph</a> to add the node to </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">params</td><td>Common node parameters </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">input</td><td>Input to the reshape layer node as a NodeID-Index pair </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">perm</td><td>Permutation vector </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">layout</td><td>(Optional) Data layout to assign to permuted tensor. If UNKNOWN then the input's layout will be used.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Node ID of the created node, EmptyNodeID in case of error </dd></dl>

<p>Referenced by <a class="el" href="_layers_8h_source.xhtml#l00463">PermuteLayer::create_layer()</a>.</p>

</div>
</div>
<a class="anchor" id="af8eae85804c35bc91d26fe28efc3936a"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static <a class="el" href="namespacearm__compute_1_1graph.xhtml#a56952a8591a9d8481450ae707ae355e7">NodeID</a> add_pooling_node </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1graph_1_1_graph.xhtml">Graph</a> &amp;&#160;</td>
          <td class="paramname"><em>g</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structarm__compute_1_1graph_1_1_node_params.xhtml">NodeParams</a>&#160;</td>
          <td class="paramname"><em>params</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structarm__compute_1_1graph_1_1_node_idx_pair.xhtml">NodeIdxPair</a>&#160;</td>
          <td class="paramname"><em>input</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1_pooling_layer_info.xhtml">PoolingLayerInfo</a>&#160;</td>
          <td class="paramname"><em>pool_info</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Adds a pooling layer node to the graph. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">g</td><td><a class="el" href="classarm__compute_1_1graph_1_1_graph.xhtml" title="Graph class. ">Graph</a> to add the node to </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">params</td><td>Common node parameters </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">input</td><td>Input to the pooling layer node as a NodeID-Index pair </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">pool_info</td><td>Pooling layer information</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Node ID of the created node, EmptyNodeID in case of error </dd></dl>

<p>Referenced by <a class="el" href="_layers_8h_source.xhtml#l00488">PoolingLayer::create_layer()</a>.</p>

</div>
</div>
<a class="anchor" id="a30a1530d919a233e389f32ad9a6e2b25"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static <a class="el" href="namespacearm__compute_1_1graph.xhtml#a56952a8591a9d8481450ae707ae355e7">NodeID</a> add_reshape_node </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1graph_1_1_graph.xhtml">Graph</a> &amp;&#160;</td>
          <td class="paramname"><em>g</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structarm__compute_1_1graph_1_1_node_params.xhtml">NodeParams</a>&#160;</td>
          <td class="paramname"><em>params</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structarm__compute_1_1graph_1_1_node_idx_pair.xhtml">NodeIdxPair</a>&#160;</td>
          <td class="paramname"><em>input</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a>&#160;</td>
          <td class="paramname"><em>shape</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Adds a reshape layer node to the graph. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">g</td><td><a class="el" href="classarm__compute_1_1graph_1_1_graph.xhtml" title="Graph class. ">Graph</a> to add the node to </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">params</td><td>Common node parameters </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">input</td><td>Input to the reshape layer node as a NodeID-Index pair </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">shape</td><td>Output reshaped shape</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Node ID of the created node, EmptyNodeID in case of error </dd></dl>

<p>Referenced by <a class="el" href="_layers_8h_source.xhtml#l00512">ReshapeLayer::create_layer()</a>.</p>

</div>
</div>
<a class="anchor" id="ade08649ceffaa6e410a213c87b71d1f0"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static <a class="el" href="namespacearm__compute_1_1graph.xhtml#a56952a8591a9d8481450ae707ae355e7">NodeID</a> add_resize_node </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1graph_1_1_graph.xhtml">Graph</a> &amp;&#160;</td>
          <td class="paramname"><em>g</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structarm__compute_1_1graph_1_1_node_params.xhtml">NodeParams</a>&#160;</td>
          <td class="paramname"><em>params</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structarm__compute_1_1graph_1_1_node_idx_pair.xhtml">NodeIdxPair</a>&#160;</td>
          <td class="paramname"><em>input</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespacearm__compute.xhtml#a966a9c417ce5e94dca08d9b5e745c0c9">InterpolationPolicy</a>&#160;</td>
          <td class="paramname"><em>policy</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>width_scale</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>height_scale</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Adds a resize layer node to the graph. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">g</td><td><a class="el" href="classarm__compute_1_1graph_1_1_graph.xhtml" title="Graph class. ">Graph</a> to add the node to </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">params</td><td>Common node parameters </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">input</td><td>Input to the reshape layer node as a NodeID-Index pair </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">policy</td><td>Interpolation policy </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">width_scale</td><td>Width scaling factor </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">height_scale</td><td>Height scaling factor</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Node ID of the created node, EmptyNodeID in case of error </dd></dl>

<p>Referenced by <a class="el" href="_layers_8h_source.xhtml#l00532">ResizeLayer::create_layer()</a>.</p>

</div>
</div>
<a class="anchor" id="a9065925e20c5b5aa449d3ef9dc371085"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static <a class="el" href="namespacearm__compute_1_1graph.xhtml#a56952a8591a9d8481450ae707ae355e7">NodeID</a> add_scale_layer </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1graph_1_1_graph.xhtml">Graph</a> &amp;&#160;</td>
          <td class="paramname"><em>g</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structarm__compute_1_1graph_1_1_node_params.xhtml">NodeParams</a> &amp;&#160;</td>
          <td class="paramname"><em>params</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structarm__compute_1_1graph_1_1_node_idx_pair.xhtml">NodeIdxPair</a>&#160;</td>
          <td class="paramname"><em>input</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespacearm__compute_1_1graph.xhtml#a41c3f59161734b8492782359f583b676">ITensorAccessorUPtr</a>&#160;</td>
          <td class="paramname"><em>mul_accessor</em> = <code>nullptr</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespacearm__compute_1_1graph.xhtml#a41c3f59161734b8492782359f583b676">ITensorAccessorUPtr</a>&#160;</td>
          <td class="paramname"><em>add_accessor</em> = <code>nullptr</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Adds a scale layer node to the graph This layer computes a product of the input with a scale (read from mul_accessor) and it applies an offset (read from add_accessor). </p>
<p>output = input * mul_w + add_w</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">g</td><td><a class="el" href="classarm__compute_1_1graph_1_1_graph.xhtml" title="Graph class. ">Graph</a> to add the layer to </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">params</td><td>Common node parameters </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">input</td><td>Input to the fully connected layer node as a NodeID-Index pair </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">mul_accessor</td><td>(Optional) Accessor of the mul node data </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">add_accessor</td><td>(Optional) Accessor of the add node data</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Node ID of the created node, EmptyNodeID in case of error </dd></dl>

<p>Referenced by <a class="el" href="_layers_8h_source.xhtml#l00560">ScaleLayer::create_layer()</a>.</p>

</div>
</div>
<a class="anchor" id="acb202d26a81ff465a95e5f869d6ee141"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static <a class="el" href="namespacearm__compute_1_1graph.xhtml#a56952a8591a9d8481450ae707ae355e7">NodeID</a> add_softmax_node </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1graph_1_1_graph.xhtml">Graph</a> &amp;&#160;</td>
          <td class="paramname"><em>g</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structarm__compute_1_1graph_1_1_node_params.xhtml">NodeParams</a>&#160;</td>
          <td class="paramname"><em>params</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structarm__compute_1_1graph_1_1_node_idx_pair.xhtml">NodeIdxPair</a>&#160;</td>
          <td class="paramname"><em>input</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>beta</em> = <code>1.f</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Adds a softmax node to the graph. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">g</td><td><a class="el" href="classarm__compute_1_1graph_1_1_graph.xhtml" title="Graph class. ">Graph</a> to add the node to </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">params</td><td>Common node parameters </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">input</td><td>Input to the softmax layer node as a NodeID-Index pair </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">beta</td><td>Beta parameter</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Node ID of the created node, EmptyNodeID in case of error </dd></dl>

<p>Referenced by <a class="el" href="_layers_8h_source.xhtml#l00585">SoftmaxLayer::create_layer()</a>.</p>

</div>
</div>
<a class="anchor" id="afbe47092174c74b23af3312c02341e09"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static <a class="el" href="namespacearm__compute_1_1graph.xhtml#a56952a8591a9d8481450ae707ae355e7">NodeID</a> add_split_node </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1graph_1_1_graph.xhtml">Graph</a> &amp;&#160;</td>
          <td class="paramname"><em>g</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structarm__compute_1_1graph_1_1_node_params.xhtml">NodeParams</a>&#160;</td>
          <td class="paramname"><em>params</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structarm__compute_1_1graph_1_1_node_idx_pair.xhtml">NodeIdxPair</a>&#160;</td>
          <td class="paramname"><em>input</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>num_splits</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>axis</em> = <code>0</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Adds a split node to the graph. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">g</td><td><a class="el" href="classarm__compute_1_1graph_1_1_graph.xhtml" title="Graph class. ">Graph</a> to add the node to </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">params</td><td>Common node parameters </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">input</td><td>Input to the split layer node as a NodeID-Index pair </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">num_splits</td><td>Number of different splits </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">axis</td><td>(Optional) Split axis. Defaults to 0</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Node ID of the created node, EmptyNodeID in case of error </dd></dl>

</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li>arm_compute/graph/<a class="el" href="_graph_builder_8h_source.xhtml">GraphBuilder.h</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespacearm__compute.xhtml">arm_compute</a></li><li class="navelem"><a class="el" href="namespacearm__compute_1_1graph.xhtml">graph</a></li><li class="navelem"><a class="el" href="classarm__compute_1_1graph_1_1_graph_builder.xhtml">GraphBuilder</a></li>
    <li class="footer">Generated on Wed Aug 29 2018 15:31:51 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.11 </li>
  </ul>
</div>
</body>
</html>
