<!-- HTML header for doxygen 1.8.9.1-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.11"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: tests/validation/CL/Winograd.cpp File Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
  $(window).load(resizeHeight);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { init_search(); });
</script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">Compute Library
   &#160;<span id="projectnumber">18.08</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.11 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li><a href="annotated.xhtml"><span>Data&#160;Structures</span></a></li>
      <li class="current"><a href="files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.xhtml"><span>File&#160;List</span></a></li>
      <li><a href="globals.xhtml"><span>Globals</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('_c_l_2_winograd_8cpp.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#namespaces">Namespaces</a> &#124;
<a href="#typedef-members">Typedefs</a> &#124;
<a href="#func-members">Functions</a> &#124;
<a href="#var-members">Variables</a>  </div>
  <div class="headertitle">
<div class="title">Winograd.cpp File Reference</div>  </div>
</div><!--header-->
<div class="contents">
<div class="textblock"><code>#include &quot;<a class="el" href="_c_l_winograd_filter_transform_kernel_8h_source.xhtml">arm_compute/core/CL/kernels/CLWinogradFilterTransformKernel.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="_c_l_winograd_output_transform_kernel_8h_source.xhtml">arm_compute/core/CL/kernels/CLWinogradOutputTransformKernel.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="arm__compute_2core_2_helpers_8h_source.xhtml">arm_compute/core/Helpers.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="arm__compute_2core_2_types_8h_source.xhtml">arm_compute/core/Types.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="_shape_calculator_8h_source.xhtml">arm_compute/core/utils/misc/ShapeCalculator.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="_c_l_tensor_8h_source.xhtml">arm_compute/runtime/CL/CLTensor.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="_c_l_tensor_allocator_8h_source.xhtml">arm_compute/runtime/CL/CLTensorAllocator.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="_c_l_winograd_convolution_layer_8h_source.xhtml">arm_compute/runtime/CL/functions/CLWinogradConvolutionLayer.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="_c_l_winograd_input_transform_8h_source.xhtml">arm_compute/runtime/CL/functions/CLWinogradInputTransform.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="_c_l_accessor_8h_source.xhtml">tests/CL/CLAccessor.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="_c_l_2_helper_8h_source.xhtml">tests/CL/Helper.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="_padding_calculator_8h_source.xhtml">tests/PaddingCalculator.h</a>&quot;</code><br />
<code>#include &quot;tests/datasets/LargeConvolutionLayerDataset.h&quot;</code><br />
<code>#include &quot;tests/datasets/ShapeDatasets.h&quot;</code><br />
<code>#include &quot;tests/datasets/SmallConvolutionLayerDataset.h&quot;</code><br />
<code>#include &quot;tests/datasets/WinogradInputTransformDataset.h&quot;</code><br />
<code>#include &quot;tests/datasets/WinogradOutputTransformDataset.h&quot;</code><br />
<code>#include &quot;<a class="el" href="_asserts_8h_source.xhtml">tests/framework/Asserts.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="tests_2framework_2_macros_8h_source.xhtml">tests/framework/Macros.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="_datasets_8h_source.xhtml">tests/framework/datasets/Datasets.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="_validation_8h_source.xhtml">tests/validation/Validation.h</a>&quot;</code><br />
<code>#include &quot;tests/validation/fixtures/WinogradConvolutionLayerFixture.h&quot;</code><br />
</div>
<p><a href="_c_l_2_winograd_8cpp_source.xhtml">Go to the source code of this file.</a></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="namespaces"></a>
Namespaces</h2></td></tr>
<tr class="memitem:namespacearm__compute"><td class="memItemLeft" align="right" valign="top"> &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute.xhtml">arm_compute</a></td></tr>
<tr class="memdesc:namespacearm__compute"><td class="mdescLeft">&#160;</td><td class="mdescRight">This file contains all available output stages for GEMMLowp on OpenCL. <br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:namespacearm__compute_1_1test"><td class="memItemLeft" align="right" valign="top"> &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test.xhtml">arm_compute::test</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:namespacearm__compute_1_1test_1_1validation"><td class="memItemLeft" align="right" valign="top"> &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml">arm_compute::test::validation</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="typedef-members"></a>
Typedefs</h2></td></tr>
<tr class="memitem:a9de169e4fa76234b647b2454f662fd22"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a9de169e4fa76234b647b2454f662fd22">CLWinogradInputTransformFixture</a> = WinogradInputTransformValidationFixture&lt; CLTensor, CLAccessor, CLWinogradInputTransform, float &gt;</td></tr>
<tr class="separator:a9de169e4fa76234b647b2454f662fd22"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a054857a13b43100f3d48e98e7a4cb626"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a054857a13b43100f3d48e98e7a4cb626">CLWinogradFilterTransform</a> = CLSynthetizeFunctionWithZeroConstantBorder&lt; CLWinogradFilterTransformKernel, 0 &gt;</td></tr>
<tr class="separator:a054857a13b43100f3d48e98e7a4cb626"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a65565dedbc30c8ef560356c4a25e80dc"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a65565dedbc30c8ef560356c4a25e80dc">CLWinogradFilterTransformFixture</a> = WinogradFilterTransformValidationFixture&lt; CLTensor, CLAccessor, CLWinogradFilterTransform, float &gt;</td></tr>
<tr class="separator:a65565dedbc30c8ef560356c4a25e80dc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2dd717bab37b161a6c1e63a76549d024"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a2dd717bab37b161a6c1e63a76549d024">CLWinogradOutputTransform</a> = CLSynthetizeFunctionWithZeroConstantBorder&lt; CLWinogradOutputTransformKernel, 0 &gt;</td></tr>
<tr class="separator:a2dd717bab37b161a6c1e63a76549d024"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9786317f3c3123dc0d609fd3e791d220"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a9786317f3c3123dc0d609fd3e791d220">CLWinogradOutputTransformFixture</a> = WinogradOutputTransformValidationFixture&lt; CLTensor, CLAccessor, CLWinogradOutputTransform, float &gt;</td></tr>
<tr class="separator:a9786317f3c3123dc0d609fd3e791d220"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4aa7763717f234371acad168e9ed5e5f"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a4aa7763717f234371acad168e9ed5e5f">CLWinogradConvolutionLayerFastMathFixture</a> = WinogradConvolutionLayerFastMathValidationFixture&lt; CLTensor, CLAccessor, CLWinogradConvolutionLayer, float &gt;</td></tr>
<tr class="separator:a4aa7763717f234371acad168e9ed5e5f"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:a273a18c5a1ff725a1f3ba44fab48f188"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a273a18c5a1ff725a1f3ba44fab48f188">DATA_TEST_CASE</a> (Validate, framework::DatasetMode::ALL, zip(zip(zip(framework::dataset::make(&quot;InputInfo&quot;,{TensorInfo(TensorShape(53U, 21U, 5U, 3U), 1, DataType::F16), TensorInfo(TensorShape(53U, 21U, 5U, 3U), 1, DataType::QASYMM8), TensorInfo(TensorShape(53U, 21U, 5U, 3U), 1, DataType::F32), TensorInfo(TensorShape(53U, 21U, 5U, 3U), 1, DataType::F32), TensorInfo(TensorShape(53U, 33U, 4U), 1, DataType::F32), TensorInfo(TensorShape(34U, 42U, 7U, 3U), 1, DataType::F32), TensorInfo(TensorShape(31U, 37U, 37U), 1, DataType::F32)}), framework::dataset::make(&quot;OutputInfo&quot;,{TensorInfo(TensorShape(5U, 5U, 16U, 3U), 1, DataType::F16), TensorInfo(TensorShape(5U, 5U, 16U, 3U), 1, DataType::QASYMM8), TensorInfo(TensorShape(5U, 5U, 16U, 3U), 1, DataType::F32), TensorInfo(TensorShape(5U, 1U, 16U, 3U), 1, DataType::F32), TensorInfo(TensorShape(4U, 442U, 16U), 1, DataType::F32), TensorInfo(TensorShape(7U, 320U, 16U, 3U), 1, DataType::F32), TensorInfo(TensorShape(37U, 304U, 16U), 1, DataType::F32)})), framework::dataset::make(&quot;WinogradInfo&quot;,{WinogradInfo(Size2D(2, 2), Size2D(3, 3), Size2D(53U, 21U), PadStrideInfo(1, 1, 1, 0), DataLayout::NCHW), WinogradInfo(Size2D(2, 2), Size2D(3, 3), Size2D(53U, 21U), PadStrideInfo(1, 1, 0, 0), DataLayout::NCHW), WinogradInfo(Size2D(2, 2), Size2D(3, 3), Size2D(53U, 21U), PadStrideInfo(1, 1, 1, 1), DataLayout::NCHW), WinogradInfo(Size2D(2, 2), Size2D(3, 3), Size2D(53U, 21U), PadStrideInfo(2, 1, 1, 1), DataLayout::NCHW), WinogradInfo(Size2D(2, 2), Size2D(3, 3), Size2D(53U, 33U), PadStrideInfo(1, 1, 0, 1), DataLayout::NCHW), WinogradInfo(Size2D(2, 2), Size2D(3, 3), Size2D(34U, 42U), PadStrideInfo(1, 1, 0, 0), DataLayout::NCHW), WinogradInfo(Size2D(2, 2), Size2D(3, 3), Size2D(31U, 37U), PadStrideInfo(1, 1, 1, 1), DataLayout::NCHW)})), framework::dataset::make(&quot;Expected&quot;,{false, false, false, false, false, false, false})), input_info, output_info, winograd_info, expected)</td></tr>
<tr class="separator:a273a18c5a1ff725a1f3ba44fab48f188"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aac74c658a133485d4d52db5618f391c0"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#aac74c658a133485d4d52db5618f391c0">DATA_TEST_CASE</a> (Configuration, framework::DatasetMode::ALL, combine(combine(framework::dataset::concat(SmallWinogradInputTransformDatasetNCHW, LargeWinogradInputTransformDatasetNCHW), framework::dataset::make(&quot;DataLayout&quot;,{DataLayout::NCHW})), framework::dataset::make(&quot;DataType&quot;,{DataType::F32})), shape_in, winograd_info, data_layout, data_type)</td></tr>
<tr class="separator:aac74c658a133485d4d52db5618f391c0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa9a061c3bebb7fa3e3efe3f2bac5b878"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa9a061c3bebb7fa3e3efe3f2bac5b878">FIXTURE_DATA_TEST_CASE</a> (RunSmall, CLWinogradInputTransformFixture, framework::DatasetMode::PRECOMMIT, combine(combine(SmallWinogradInputTransformDatasetNCHW, framework::dataset::make(&quot;DataLayout&quot;,{DataLayout::NCHW})), framework::dataset::make(&quot;DataType&quot;,{DataType::F32})))</td></tr>
<tr class="separator:aa9a061c3bebb7fa3e3efe3f2bac5b878"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac040967c12c5be834f5cae84ab69a1e5"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac040967c12c5be834f5cae84ab69a1e5">FIXTURE_DATA_TEST_CASE</a> (RunLarge, CLWinogradInputTransformFixture, framework::DatasetMode::NIGHTLY, combine(combine(LargeWinogradInputTransformDatasetNCHW, framework::dataset::make(&quot;DataLayout&quot;,{DataLayout::NCHW})), framework::dataset::make(&quot;DataType&quot;,{DataType::F32})))</td></tr>
<tr class="separator:ac040967c12c5be834f5cae84ab69a1e5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a38fe4b20a05bbaa1c844f3d7a19791ae"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a38fe4b20a05bbaa1c844f3d7a19791ae">TEST_SUITE_END</a> () <a class="el" href="_window_iterator_8cpp.xhtml#a5d095dd08ec0312b706f25442726d3c1">DATA_TEST_CASE</a>(Configuration = ConvolutionSeparableValidationFixture&lt;CLTensor, CLAccessor, CLConvolution5x5, T&gt;</td></tr>
<tr class="separator:a38fe4b20a05bbaa1c844f3d7a19791ae"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0daef6a4a921ee9208316bb61f18faaa"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a0daef6a4a921ee9208316bb61f18faaa">combine</a> (combine(framework::dataset::concat(SmallWinogradInputTransformDatasetNHWC, LargeWinogradInputTransformDatasetNHWC), framework::dataset::make(&quot;DataLayout&quot;,{DataLayout::NHWC})), framework::dataset::make(&quot;DataType&quot;,{DataType::F32}))</td></tr>
<tr class="separator:a0daef6a4a921ee9208316bb61f18faaa"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aece3b97f00c27986104bc5889d1ebb15"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#aece3b97f00c27986104bc5889d1ebb15">permute</a> (shape_in_nhwc, PermutationVector(2U, 0U, 1U))</td></tr>
<tr class="separator:aece3b97f00c27986104bc5889d1ebb15"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7569d8e56faa688859f35da36653d0a1"><td class="memItemLeft" align="right" valign="top">tensor_info_in&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a7569d8e56faa688859f35da36653d0a1">set_data_layout</a> (data_layout)</td></tr>
<tr class="separator:a7569d8e56faa688859f35da36653d0a1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a475c8344ecb61fa6f5d207b960daed9f"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a475c8344ecb61fa6f5d207b960daed9f">ARM_COMPUTE_EXPECT</a> (in.info() -&gt;is_resizable(), framework::LogLevel::ERRORS)</td></tr>
<tr class="separator:a475c8344ecb61fa6f5d207b960daed9f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0bbe5517014347ddf1e1627477404621"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a0bbe5517014347ddf1e1627477404621">ARM_COMPUTE_EXPECT</a> (out.info() -&gt;is_resizable(), framework::LogLevel::ERRORS)</td></tr>
<tr class="separator:a0bbe5517014347ddf1e1627477404621"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9682a062938e80150c37d5e0f9583ad2"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a9682a062938e80150c37d5e0f9583ad2">FIXTURE_DATA_TEST_CASE</a> (RunSmall, CLWinogradInputTransformFixture, framework::DatasetMode::PRECOMMIT, combine(combine(SmallWinogradInputTransformDatasetNHWC, framework::dataset::make(&quot;DataLayout&quot;,{DataLayout::NHWC})), framework::dataset::make(&quot;DataType&quot;,{DataType::F32})))</td></tr>
<tr class="separator:a9682a062938e80150c37d5e0f9583ad2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2fe898deab2d7335191c89e7179df4ca"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a2fe898deab2d7335191c89e7179df4ca">FIXTURE_DATA_TEST_CASE</a> (RunLarge, CLWinogradInputTransformFixture, framework::DatasetMode::NIGHTLY, combine(combine(LargeWinogradInputTransformDatasetNHWC, framework::dataset::make(&quot;DataLayout&quot;,{DataLayout::NHWC})), framework::dataset::make(&quot;DataType&quot;,{DataType::F32})))</td></tr>
<tr class="separator:a2fe898deab2d7335191c89e7179df4ca"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af2041055b792c65741e6df32abd58177"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#af2041055b792c65741e6df32abd58177">zip</a> (zip(zip(framework::dataset::make(&quot;InputInfo&quot;,{TensorInfo(TensorShape(3U, 3U, 5U, 3U), 1, DataType::F16), TensorInfo(TensorShape(3U, 3U, 5U, 3U), 1, DataType::QASYMM8), TensorInfo(TensorShape(5U, 5U, 5U, 3U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 5U, 3U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 37U, 2U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 37U, 22U), 1, DataType::F32)}), framework::dataset::make(&quot;OutputInfo&quot;,{TensorInfo(TensorShape(3U, 5U, 16U), 1, DataType::F16), TensorInfo(TensorShape(3U, 5U, 16U), 1, DataType::QASYMM8), TensorInfo(TensorShape(3U, 5U, 16U), 1, DataType::F32), TensorInfo(TensorShape(1U, 1U, 16U), 1, DataType::F32), TensorInfo(TensorShape(3U, 5U, 16U), 1, DataType::F32), TensorInfo(TensorShape(2U, 37U, 16U), 1, DataType::F32), TensorInfo(TensorShape(22U, 37U, 36U), 1, DataType::F32)})), framework::dataset::make(&quot;WinogradInfo&quot;,{WinogradInfo(Size2D(2U, 2U), Size2D(3U, 3U), Size2D(), PadStrideInfo(), DataLayout::NCHW), WinogradInfo(Size2D(2U, 2U), Size2D(3U, 3U), Size2D(), PadStrideInfo(), DataLayout::NCHW), WinogradInfo(Size2D(2U, 2U), Size2D(3U, 3U), Size2D(), PadStrideInfo(), DataLayout::NCHW), WinogradInfo(Size2D(3U, 3U), Size2D(3U, 3U), Size2D(), PadStrideInfo(), DataLayout::NCHW), WinogradInfo(Size2D(2U, 2U), Size2D(3U, 3U), Size2D(), PadStrideInfo(), DataLayout::NCHW), WinogradInfo(Size2D(2U, 2U), Size2D(3U, 3U), Size2D(), PadStrideInfo(), DataLayout::NCHW), WinogradInfo(Size2D(4U, 4U), Size2D(3U, 3U), Size2D(), PadStrideInfo(), DataLayout::NCHW)})), framework::dataset::make(&quot;Expected&quot;,{false, false, false, false, true, true, true}))</td></tr>
<tr class="separator:af2041055b792c65741e6df32abd58177"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3876818fc1aeae0ae08a4708985fdb16"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a3876818fc1aeae0ae08a4708985fdb16">DATA_TEST_CASE</a> (Configuration, framework::DatasetMode::ALL, combine(combine(framework::dataset::concat(SmallWinogradFilterTransformDatasetNCHW, LargeWinogradFilterTransformDatasetNCHW), framework::dataset::make(&quot;DataLayout&quot;,{DataLayout::NCHW})), framework::dataset::make(&quot;DataType&quot;,{DataType::F32})), shape_a, output_tile, data_layout, data_type)</td></tr>
<tr class="separator:a3876818fc1aeae0ae08a4708985fdb16"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afced2a22226d69985011d4515a37c5cd"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#afced2a22226d69985011d4515a37c5cd">FIXTURE_DATA_TEST_CASE</a> (RunSmall, CLWinogradFilterTransformFixture, framework::DatasetMode::PRECOMMIT, combine(combine(SmallWinogradFilterTransformDatasetNCHW, framework::dataset::make(&quot;DataLayout&quot;,{DataLayout::NCHW})), framework::dataset::make(&quot;DataType&quot;,{DataType::F32})))</td></tr>
<tr class="separator:afced2a22226d69985011d4515a37c5cd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a88dcab17b2dccc58cc24f4b5c2926462"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a88dcab17b2dccc58cc24f4b5c2926462">FIXTURE_DATA_TEST_CASE</a> (RunLarge, CLWinogradFilterTransformFixture, framework::DatasetMode::NIGHTLY, combine(combine(LargeWinogradFilterTransformDatasetNCHW, framework::dataset::make(&quot;DataLayout&quot;,{DataLayout::NCHW})), framework::dataset::make(&quot;DataType&quot;,{DataType::F32})))</td></tr>
<tr class="separator:a88dcab17b2dccc58cc24f4b5c2926462"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aeb77d955511c7ad7b34c399083f2a145"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#aeb77d955511c7ad7b34c399083f2a145">combine</a> (combine(framework::dataset::concat(SmallWinogradFilterTransformDatasetNHWC, LargeWinogradFilterTransformDatasetNHWC), framework::dataset::make(&quot;DataLayout&quot;,{DataLayout::NHWC})), framework::dataset::make(&quot;DataType&quot;,{DataType::F32}))</td></tr>
<tr class="separator:aeb77d955511c7ad7b34c399083f2a145"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6c8a00dedf0ec444353f2102207bed76"><td class="memItemLeft" align="right" valign="top">TensorInfo&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a6c8a00dedf0ec444353f2102207bed76">tensor_info_in</a> (shape_in_nhwc, 1, data_type)</td></tr>
<tr class="separator:a6c8a00dedf0ec444353f2102207bed76"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac4cb8192e12f81018932779978c3788a"><td class="memItemLeft" align="right" valign="top">WinogradInfo&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#ac4cb8192e12f81018932779978c3788a">winograd_info</a> (output_tile, Size2D(shape_in[0], shape_in[1]), Size2D(), PadStrideInfo(), data_layout)</td></tr>
<tr class="separator:ac4cb8192e12f81018932779978c3788a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7af1f415dd7596057e3762fb9578b6d5"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a7af1f415dd7596057e3762fb9578b6d5">ARM_COMPUTE_EXPECT</a> (a.info() -&gt;is_resizable(), framework::LogLevel::ERRORS)</td></tr>
<tr class="separator:a7af1f415dd7596057e3762fb9578b6d5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a377dba528b66d44ab5b2c9b16dab9bfb"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a377dba528b66d44ab5b2c9b16dab9bfb">ARM_COMPUTE_EXPECT</a> (b.info() -&gt;is_resizable(), framework::LogLevel::ERRORS)</td></tr>
<tr class="separator:a377dba528b66d44ab5b2c9b16dab9bfb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abb773be05eded820fde27fb2bb1260de"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#abb773be05eded820fde27fb2bb1260de">FIXTURE_DATA_TEST_CASE</a> (RunSmall, CLWinogradFilterTransformFixture, framework::DatasetMode::PRECOMMIT, combine(combine(SmallWinogradFilterTransformDatasetNHWC, framework::dataset::make(&quot;DataLayout&quot;,{DataLayout::NHWC})), framework::dataset::make(&quot;DataType&quot;,{DataType::F32})))</td></tr>
<tr class="separator:abb773be05eded820fde27fb2bb1260de"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3cc05d3c95ae4c1b728b580f620fabae"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a3cc05d3c95ae4c1b728b580f620fabae">FIXTURE_DATA_TEST_CASE</a> (RunLarge, CLWinogradFilterTransformFixture, framework::DatasetMode::NIGHTLY, combine(combine(LargeWinogradFilterTransformDatasetNHWC, framework::dataset::make(&quot;DataLayout&quot;,{DataLayout::NHWC})), framework::dataset::make(&quot;DataType&quot;,{DataType::F32})))</td></tr>
<tr class="separator:a3cc05d3c95ae4c1b728b580f620fabae"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af19d957a58b176c2463ebd186d8ba5f5"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#af19d957a58b176c2463ebd186d8ba5f5">zip</a> (zip(zip(zip(framework::dataset::make(&quot;InputInfo&quot;,{TensorInfo(TensorShape(512U, 49U, 16U, 5U), 1, DataType::F16), TensorInfo(TensorShape(512U, 49U, 16U, 5U), 1, DataType::QASYMM8), TensorInfo(TensorShape(512U, 49U, 16U, 5U), 1, DataType::F32), TensorInfo(TensorShape(512U, 49U, 16U, 5U), 1, DataType::F32), TensorInfo(TensorShape(13U, 108U, 16U, 4U), 1, DataType::F32), TensorInfo(TensorShape(7U, 20U, 16U, 7U), 1, DataType::F32), TensorInfo(TensorShape(7U, 20U, 16U, 7U), 1, DataType::F32), TensorInfo(TensorShape(7U, 256U, 36U, 3U), 1, DataType::F32), TensorInfo(TensorShape(7U, 256U, 16U, 3U), 1, DataType::F32)}), framework::dataset::make(&quot;BiasInfo&quot;,{TensorInfo(TensorShape(512U), 1, DataType::F16), TensorInfo(TensorShape(512U), 1, DataType::QASYMM8), TensorInfo(TensorShape(512U), 1, DataType::F32), TensorInfo(TensorShape(512U), 1, DataType::F32), TensorInfo(TensorShape(13U), 1, DataType::F32), TensorInfo(TensorShape(7U), 1, DataType::F32), TensorInfo(TensorShape(7U), 1, DataType::F32), TensorInfo(TensorShape(7U), 1, DataType::F32), TensorInfo(TensorShape(7U), 1, DataType::F32)})), framework::dataset::make(&quot;OutputInfo&quot;,{TensorInfo(TensorShape(14U, 14U, 512U, 5U), 1, DataType::F16), TensorInfo(TensorShape(14U, 14U, 512U, 5U), 1, DataType::QASYMM8), TensorInfo(TensorShape(14U, 14U, 512U, 5U), 1, DataType::F32), TensorInfo(TensorShape(14U, 14U, 512U, 5U), 1, DataType::F32), TensorInfo(TensorShape(17U, 23U, 13U, 4U), 1, DataType::F32), TensorInfo(TensorShape(8U, 10U, 7U, 7U), 1, DataType::F32), TensorInfo(TensorShape(7U, 9U, 7U, 7U), 1, DataType::F32), TensorInfo(TensorShape(64U, 64U, 7U, 3U), 1, DataType::F32), TensorInfo(TensorShape(64U, 64U, 7U, 3U), 1, DataType::F32)})), framework::dataset::make(&quot;WinogradInfo&quot;,{WinogradInfo(Size2D(2U, 2U), Size2D(3U, 3U), Size2D(14U, 14U), PadStrideInfo(1, 1, 1, 1), DataLayout::NCHW), WinogradInfo(Size2D(2U, 2U), Size2D(3U, 3U), Size2D(14U, 14U), PadStrideInfo(1, 1, 1, 1), DataLayout::NCHW), WinogradInfo(Size2D(2U, 2U), Size2D(5U, 5U), Size2D(14U, 14U), PadStrideInfo(1, 1, 1, 1), DataLayout::NCHW), WinogradInfo(Size2D(2U, 2U), Size2D(3U, 3U), Size2D(14U, 14U), PadStrideInfo(1, 1, 1, 1), DataLayout::NCHW), WinogradInfo(Size2D(2U, 2U), Size2D(3U, 3U), Size2D(17U, 23U), PadStrideInfo(1, 1, 1, 1), DataLayout::NCHW), WinogradInfo(Size2D(2U, 2U), Size2D(3U, 3U), Size2D(8U, 10U), PadStrideInfo(1, 1, 1, 1), DataLayout::NCHW), WinogradInfo(Size2D(2U, 3U), Size2D(3U, 3U), Size2D(8U, 10U), PadStrideInfo(1, 1, 0, 0), DataLayout::NCHW), WinogradInfo(Size2D(4U, 4U), Size2D(3U, 3U), Size2D(64U, 64U), PadStrideInfo(1, 1, 1, 1), DataLayout::NCHW), WinogradInfo(Size2D(4U, 4U), Size2D(3U, 3U), Size2D(64U, 64U), PadStrideInfo(1, 1, 1, 1), DataLayout::NCHW)})), framework::dataset::make(&quot;Expected&quot;,{false, false, false, true, false, true, false, true, false}))</td></tr>
<tr class="separator:af19d957a58b176c2463ebd186d8ba5f5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0261007476e86efd51d31f8c2a3fe0e4"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a0261007476e86efd51d31f8c2a3fe0e4">DATA_TEST_CASE</a> (Configuration, framework::DatasetMode::ALL, combine(framework::dataset::concat(SmallWinogradOutputTransformDatasetNCHW, LargeWinogradOutputTransformDatasetNCHW), framework::dataset::make(&quot;DataType&quot;,{DataType::F32})), shape_a, winograd_info, data_type)</td></tr>
<tr class="separator:a0261007476e86efd51d31f8c2a3fe0e4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a526ae44b392fb86d8131668519f9cdc3"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a526ae44b392fb86d8131668519f9cdc3">FIXTURE_DATA_TEST_CASE</a> (RunSmall, CLWinogradOutputTransformFixture, framework::DatasetMode::ALL, combine(SmallWinogradOutputTransformDatasetNCHW, framework::dataset::make(&quot;DataType&quot;,{DataType::F32})))</td></tr>
<tr class="separator:a526ae44b392fb86d8131668519f9cdc3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8d75a105acba6ef6e5ccb7a7a60e392e"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a8d75a105acba6ef6e5ccb7a7a60e392e">FIXTURE_DATA_TEST_CASE</a> (RunLarge, CLWinogradOutputTransformFixture, framework::DatasetMode::NIGHTLY, combine(LargeWinogradOutputTransformDatasetNCHW, framework::dataset::make(&quot;DataType&quot;,{DataType::F32})))</td></tr>
<tr class="separator:a8d75a105acba6ef6e5ccb7a7a60e392e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6fa112b977604f21c58408517d73db39"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a6fa112b977604f21c58408517d73db39">combine</a> (framework::dataset::concat(SmallWinogradOutputTransformDatasetNHWC, LargeWinogradOutputTransformDatasetNHWC), framework::dataset::make(&quot;DataType&quot;,{DataType::F32}))</td></tr>
<tr class="separator:a6fa112b977604f21c58408517d73db39"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6cba3734615e55c5f8294cc4a1d7fbd9"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a6cba3734615e55c5f8294cc4a1d7fbd9">FIXTURE_DATA_TEST_CASE</a> (RunSmall, CLWinogradOutputTransformFixture, framework::DatasetMode::ALL, combine(SmallWinogradOutputTransformDatasetNHWC, framework::dataset::make(&quot;DataType&quot;,{DataType::F32})))</td></tr>
<tr class="separator:a6cba3734615e55c5f8294cc4a1d7fbd9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aaad9b7b34ab922df4b4adbf1a58a5176"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#aaad9b7b34ab922df4b4adbf1a58a5176">FIXTURE_DATA_TEST_CASE</a> (RunLarge, CLWinogradOutputTransformFixture, framework::DatasetMode::NIGHTLY, combine(LargeWinogradOutputTransformDatasetNHWC, framework::dataset::make(&quot;DataType&quot;,{DataType::F32})))</td></tr>
<tr class="separator:aaad9b7b34ab922df4b4adbf1a58a5176"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a772bcae7c1909a56cc65d91b2b8452af"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a772bcae7c1909a56cc65d91b2b8452af">zip</a> (zip(zip(zip(zip(framework::dataset::make(&quot;InputInfo&quot;,{TensorInfo(TensorShape(17U, 31U, 2U), 1, DataType::F16), TensorInfo(TensorShape(17U, 31U, 2U), 1, DataType::F32), TensorInfo(TensorShape(23U, 27U, 5U, 4U), 1, DataType::F32), TensorInfo(TensorShape(16U, 16U, 8U), 1, DataType::F32), TensorInfo(TensorShape(33U, 27U, 7U, 4U), 1, DataType::F32)}), framework::dataset::make(&quot;WeightsInfo&quot;,{TensorInfo(TensorShape(3U, 3U, 2U, 19U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 2U, 19U), 1, DataType::QASYMM8), TensorInfo(TensorShape(3U, 3U, 5U, 21U), 1, DataType::F32), TensorInfo(TensorShape(3U, 3U, 8U, 16U), 1, DataType::F32), TensorInfo(TensorShape(5U, 5U, 7U, 16U), 1, DataType::F16)})), framework::dataset::make(&quot;BiasesInfo&quot;,{TensorInfo(TensorShape(19U), 1, DataType::F32), TensorInfo(TensorShape(19U), 1, DataType::F32), TensorInfo(TensorShape(21U), 1, DataType::F32), TensorInfo(TensorShape(16U), 1, DataType::F32), TensorInfo(TensorShape(16U), 1, DataType::F32)})), framework::dataset::make(&quot;OutputInfo&quot;,{TensorInfo(TensorShape(17U, 31U, 19U), 1, DataType::F32), TensorInfo(TensorShape(15U, 15U, 19U), 1, DataType::F32), TensorInfo(TensorShape(21U, 25U, 21U, 4U), 1, DataType::F32), TensorInfo(TensorShape(16U, 16U, 16U), 1, DataType::F32), TensorInfo(TensorShape(11U, 12U, 16U, 4U), 1, DataType::F32)})), framework::dataset::make(&quot;ConvInfo&quot;,{PadStrideInfo(1, 1, 1, 1), PadStrideInfo(1, 1, 1, 1), PadStrideInfo(1, 2, 0, 0), PadStrideInfo(1, 1, 1, 1), PadStrideInfo(1, 1, 1, 0)})), framework::dataset::make(&quot;Expected&quot;,{false, false, false, false, false}))</td></tr>
<tr class="separator:a772bcae7c1909a56cc65d91b2b8452af"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1e7a0b22f833462a47b3d9861d291185"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a1e7a0b22f833462a47b3d9861d291185">FIXTURE_DATA_TEST_CASE</a> (RunSmall, CLWinogradConvolutionLayerFastMathFixture, framework::DatasetMode::PRECOMMIT, combine(combine(combine(datasets::SmallWinogradConvolutionLayer3x3Dataset(), framework::dataset::make(&quot;DataType&quot;,{DataType::F32})), framework::dataset::make(&quot;ActivationLayerInfo&quot;,{ActivationLayerInfo()})), framework::dataset::make(&quot;DataLayout&quot;,{DataLayout::NCHW, DataLayout::NHWC})))</td></tr>
<tr class="separator:a1e7a0b22f833462a47b3d9861d291185"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4d8a23e070fe4c72f31ae56731bf6bec"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a4d8a23e070fe4c72f31ae56731bf6bec">FIXTURE_DATA_TEST_CASE</a> (RunLarge, CLWinogradConvolutionLayerFastMathFixture, framework::DatasetMode::NIGHTLY, combine(combine(combine(datasets::LargeWinogradConvolutionLayer3x3Dataset(), framework::dataset::make(&quot;DataType&quot;,{DataType::F32})), framework::dataset::make(&quot;ActivationLayerInfo&quot;,{ActivationLayerInfo()})), framework::dataset::make(&quot;DataLayout&quot;,{DataLayout::NCHW, DataLayout::NHWC})))</td></tr>
<tr class="separator:a4d8a23e070fe4c72f31ae56731bf6bec"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:addbd8bc0c9e4565d94094605fd10c0ef"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#addbd8bc0c9e4565d94094605fd10c0ef">combine</a> (combine(combine(datasets::SmallWinogradConvolutionLayer3x1Dataset(), framework::dataset::make(&quot;DataType&quot;,{DataType::F32})), framework::dataset::make(&quot;ActivationLayerInfo&quot;,{ActivationLayerInfo()})), framework::dataset::make(&quot;DataLayout&quot;,{DataLayout::NCHW, DataLayout::NHWC})))</td></tr>
<tr class="separator:addbd8bc0c9e4565d94094605fd10c0ef"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a14f20ee5f6dd0c659f5c6d0f9edda335"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a14f20ee5f6dd0c659f5c6d0f9edda335">FIXTURE_DATA_TEST_CASE</a> (RunLarge, CLWinogradConvolutionLayerFastMathFixture, framework::DatasetMode::NIGHTLY, combine(combine(combine(datasets::LargeWinogradConvolutionLayer3x1Dataset(), framework::dataset::make(&quot;DataType&quot;,{DataType::F32})), framework::dataset::make(&quot;ActivationLayerInfo&quot;,{ActivationLayerInfo()})), framework::dataset::make(&quot;DataLayout&quot;,{DataLayout::NCHW, DataLayout::NHWC})))</td></tr>
<tr class="separator:a14f20ee5f6dd0c659f5c6d0f9edda335"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2e15d1148c1a02cc0dfc3e52afe4eeea"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a2e15d1148c1a02cc0dfc3e52afe4eeea">combine</a> (combine(combine(datasets::SmallWinogradConvolutionLayer1x3Dataset(), framework::dataset::make(&quot;DataType&quot;,{DataType::F32})), framework::dataset::make(&quot;ActivationLayerInfo&quot;,{ActivationLayerInfo()})), framework::dataset::make(&quot;DataLayout&quot;,{DataLayout::NCHW, DataLayout::NHWC})))</td></tr>
<tr class="separator:a2e15d1148c1a02cc0dfc3e52afe4eeea"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a540f6cc0ca7c2b3cd68075b33e4e8453"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a540f6cc0ca7c2b3cd68075b33e4e8453">FIXTURE_DATA_TEST_CASE</a> (RunLarge, CLWinogradConvolutionLayerFastMathFixture, framework::DatasetMode::NIGHTLY, combine(combine(combine(datasets::LargeWinogradConvolutionLayer1x3Dataset(), framework::dataset::make(&quot;DataType&quot;,{DataType::F32})), framework::dataset::make(&quot;ActivationLayerInfo&quot;,{ActivationLayerInfo()})), framework::dataset::make(&quot;DataLayout&quot;,{DataLayout::NCHW, DataLayout::NHWC})))</td></tr>
<tr class="separator:a540f6cc0ca7c2b3cd68075b33e4e8453"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a275fe93e73e0d649e3eec45f82295e44"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a275fe93e73e0d649e3eec45f82295e44">combine</a> (combine(combine(datasets::SmallWinogradConvolutionLayer5x5Dataset(), framework::dataset::make(&quot;DataType&quot;,{DataType::F32})), framework::dataset::make(&quot;ActivationLayerInfo&quot;,{ActivationLayerInfo()})), framework::dataset::make(&quot;DataLayout&quot;,{DataLayout::NCHW, DataLayout::NHWC})))</td></tr>
<tr class="separator:a275fe93e73e0d649e3eec45f82295e44"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1201c8ff0c2e66a014b9feef4b183184"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a1201c8ff0c2e66a014b9feef4b183184">FIXTURE_DATA_TEST_CASE</a> (RunLarge, CLWinogradConvolutionLayerFastMathFixture, framework::DatasetMode::NIGHTLY, combine(combine(combine(datasets::LargeWinogradConvolutionLayer5x5Dataset(), framework::dataset::make(&quot;DataType&quot;,{DataType::F32})), framework::dataset::make(&quot;ActivationLayerInfo&quot;,{ActivationLayerInfo()})), framework::dataset::make(&quot;DataLayout&quot;,{DataLayout::NCHW, DataLayout::NHWC})))</td></tr>
<tr class="separator:a1201c8ff0c2e66a014b9feef4b183184"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a70fb8f7cbc29c262e5507b49744d6857"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a70fb8f7cbc29c262e5507b49744d6857">combine</a> (combine(combine(datasets::SmallWinogradConvolutionLayer5x1Dataset(), framework::dataset::make(&quot;DataType&quot;,{DataType::F32})), framework::dataset::make(&quot;ActivationLayerInfo&quot;,{ActivationLayerInfo()})), framework::dataset::make(&quot;DataLayout&quot;,{DataLayout::NCHW, DataLayout::NHWC})))</td></tr>
<tr class="separator:a70fb8f7cbc29c262e5507b49744d6857"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a146b5a7a06f0584bd68ce0ac675349a6"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a146b5a7a06f0584bd68ce0ac675349a6">FIXTURE_DATA_TEST_CASE</a> (RunLarge, CLWinogradConvolutionLayerFastMathFixture, framework::DatasetMode::NIGHTLY, combine(combine(combine(datasets::LargeWinogradConvolutionLayer5x1Dataset(), framework::dataset::make(&quot;DataType&quot;,{DataType::F32})), framework::dataset::make(&quot;ActivationLayerInfo&quot;,{ActivationLayerInfo()})), framework::dataset::make(&quot;DataLayout&quot;,{DataLayout::NCHW, DataLayout::NHWC})))</td></tr>
<tr class="separator:a146b5a7a06f0584bd68ce0ac675349a6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6b49df27d4bd9c8f4402a3ddabfbcd5d"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a6b49df27d4bd9c8f4402a3ddabfbcd5d">combine</a> (combine(combine(datasets::SmallWinogradConvolutionLayer1x5Dataset(), framework::dataset::make(&quot;DataType&quot;,{DataType::F32})), framework::dataset::make(&quot;ActivationLayerInfo&quot;,{ActivationLayerInfo()})), framework::dataset::make(&quot;DataLayout&quot;,{DataLayout::NCHW, DataLayout::NHWC})))</td></tr>
<tr class="separator:a6b49df27d4bd9c8f4402a3ddabfbcd5d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a184f18bd70b714746993bee8ee7158af"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a184f18bd70b714746993bee8ee7158af">FIXTURE_DATA_TEST_CASE</a> (RunLarge, CLWinogradConvolutionLayerFastMathFixture, framework::DatasetMode::NIGHTLY, combine(combine(combine(datasets::LargeWinogradConvolutionLayer1x5Dataset(), framework::dataset::make(&quot;DataType&quot;,{DataType::F32})), framework::dataset::make(&quot;ActivationLayerInfo&quot;,{ActivationLayerInfo()})), framework::dataset::make(&quot;DataLayout&quot;,{DataLayout::NCHW, DataLayout::NHWC})))</td></tr>
<tr class="separator:a184f18bd70b714746993bee8ee7158af"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="var-members"></a>
Variables</h2></td></tr>
<tr class="memitem:aeff9a60eefc51f40f1bcfab3cd707ccf"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#aeff9a60eefc51f40f1bcfab3cd707ccf">shape_in</a></td></tr>
<tr class="separator:aeff9a60eefc51f40f1bcfab3cd707ccf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a809d18ccde99d938a68cb90ef53aa749"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a809d18ccde99d938a68cb90ef53aa749">winograd_info</a></td></tr>
<tr class="separator:a809d18ccde99d938a68cb90ef53aa749"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a786677cbfb3f5677b4d84f3056eb08db"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a786677cbfb3f5677b4d84f3056eb08db">data_layout</a></td></tr>
<tr class="separator:a786677cbfb3f5677b4d84f3056eb08db"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acc56b65684fb727508eab26f947dabc7"><td class="memItemLeft" align="right" valign="top">TensorInfo&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#acc56b65684fb727508eab26f947dabc7">tensor_info_in</a> (shape_in_nhwc, 1, data_type)</td></tr>
<tr class="separator:acc56b65684fb727508eab26f947dabc7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa65261d320223230cd08fc3ebc05751b"><td class="memItemLeft" align="right" valign="top">TensorShape&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa65261d320223230cd08fc3ebc05751b">shape_out</a> = compute_winograd_input_transform_shape(tensor_info_in, winograd_info)</td></tr>
<tr class="separator:aa65261d320223230cd08fc3ebc05751b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad366eaa4cf2d106037d91c30795a5c76"><td class="memItemLeft" align="right" valign="top">CLTensor&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#ad366eaa4cf2d106037d91c30795a5c76">in</a> = create_tensor&lt;CLTensor&gt;(shape_in_nhwc, data_type, 1, QuantizationInfo(), data_layout)</td></tr>
<tr class="separator:ad366eaa4cf2d106037d91c30795a5c76"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af8a8a0625e7981212a0af48deb9d2a09"><td class="memItemLeft" align="right" valign="top">CLTensor&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#af8a8a0625e7981212a0af48deb9d2a09">out</a> = create_tensor&lt;CLTensor&gt;(shape_out, data_type)</td></tr>
<tr class="separator:af8a8a0625e7981212a0af48deb9d2a09"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a065fb777c84f46f1c60b64b232a97a60"><td class="memItemLeft" align="right" valign="top">CLWinogradInputTransform&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a065fb777c84f46f1c60b64b232a97a60">winograd_input_transform</a></td></tr>
<tr class="separator:a065fb777c84f46f1c60b64b232a97a60"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae008e90eb6906fa3526213bc860f6cc5"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#ae008e90eb6906fa3526213bc860f6cc5">input_info</a></td></tr>
<tr class="separator:ae008e90eb6906fa3526213bc860f6cc5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a25cae7166733a51d1354f3f395652782"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a25cae7166733a51d1354f3f395652782">output_info</a></td></tr>
<tr class="separator:a25cae7166733a51d1354f3f395652782"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa6e67bddae371a5731f6d4002e787299"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#aa6e67bddae371a5731f6d4002e787299">expected</a></td></tr>
<tr class="separator:aa6e67bddae371a5731f6d4002e787299"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a62aa9469ab6f4dac26615fa705f55354"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a62aa9469ab6f4dac26615fa705f55354">output_tile</a></td></tr>
<tr class="separator:a62aa9469ab6f4dac26615fa705f55354"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a359ae7b4283c585278edfbe82ec1f246"><td class="memItemLeft" align="right" valign="top">CLWinogradFilterTransform&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a359ae7b4283c585278edfbe82ec1f246">winograd_filter_transform</a></td></tr>
<tr class="separator:a359ae7b4283c585278edfbe82ec1f246"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a43c38c81ff3058e36ceb9904a944d1ea"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a43c38c81ff3058e36ceb9904a944d1ea">bias_info</a></td></tr>
<tr class="separator:a43c38c81ff3058e36ceb9904a944d1ea"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af0d686a775695bff3cd674e0f5674228"><td class="memItemLeft" align="right" valign="top">CLWinogradOutputTransform&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#af0d686a775695bff3cd674e0f5674228">winograd_output_transform</a></td></tr>
<tr class="separator:af0d686a775695bff3cd674e0f5674228"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7cb842ebfe255726066039853a4322f0"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#a7cb842ebfe255726066039853a4322f0">weights_info</a></td></tr>
<tr class="separator:a7cb842ebfe255726066039853a4322f0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acbf8f8a6dd185de04c1981c57a8963cf"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1test_1_1validation.xhtml#acbf8f8a6dd185de04c1981c57a8963cf">conv_info</a></td></tr>
<tr class="separator:acbf8f8a6dd185de04c1981c57a8963cf"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_59425e443f801f1f2fd8bbe4959a3ccf.xhtml">tests</a></li><li class="navelem"><a class="el" href="dir_e7c7b16542faa38cb4655ff1750d3604.xhtml">validation</a></li><li class="navelem"><a class="el" href="dir_f7024513cd67abef53e86ee9382ac5ce.xhtml">CL</a></li><li class="navelem"><a class="el" href="_c_l_2_winograd_8cpp.xhtml">Winograd.cpp</a></li>
    <li class="footer">Generated on Wed Aug 29 2018 15:31:39 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.11 </li>
  </ul>
</div>
</body>
</html>
