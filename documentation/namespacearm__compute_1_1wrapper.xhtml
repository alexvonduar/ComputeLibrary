<!-- HTML header for doxygen 1.8.9.1-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: arm_compute::wrapper Namespace Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">Compute Library
   &#160;<span id="projectnumber">18.11</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('namespacearm__compute_1_1wrapper.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#namespaces">Namespaces</a> &#124;
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle">
<div class="title">arm_compute::wrapper Namespace Reference</div>  </div>
</div><!--header-->
<div class="contents">
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="namespaces"></a>
Namespaces</h2></td></tr>
<tr class="memitem:namespacearm__compute_1_1wrapper_1_1traits"><td class="memItemLeft" align="right" valign="top"> &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper_1_1traits.xhtml">traits</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:a1894e825a225f3b2013f594cbffdae73"><td class="memItemLeft" align="right" valign="top">uint8x8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a1894e825a225f3b2013f594cbffdae73">vadd</a> (const uint8x8_t &amp;a, const uint8x8_t &amp;b)</td></tr>
<tr class="separator:a1894e825a225f3b2013f594cbffdae73"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7c573cf41e883d4d37bd8dff8fcbd0f2"><td class="memItemLeft" align="right" valign="top">int8x8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a7c573cf41e883d4d37bd8dff8fcbd0f2">vadd</a> (const int8x8_t &amp;a, const int8x8_t &amp;b)</td></tr>
<tr class="separator:a7c573cf41e883d4d37bd8dff8fcbd0f2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a73d9b74710e651e7cdbf4cfafb944d8a"><td class="memItemLeft" align="right" valign="top">uint16x4_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a73d9b74710e651e7cdbf4cfafb944d8a">vadd</a> (const uint16x4_t &amp;a, const uint16x4_t &amp;b)</td></tr>
<tr class="separator:a73d9b74710e651e7cdbf4cfafb944d8a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a51ed0d744f6dca340bc175241a2653d4"><td class="memItemLeft" align="right" valign="top">int16x4_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a51ed0d744f6dca340bc175241a2653d4">vadd</a> (const int16x4_t &amp;a, const int16x4_t &amp;b)</td></tr>
<tr class="separator:a51ed0d744f6dca340bc175241a2653d4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1de26ff774cac4d14a9a99760139a379"><td class="memItemLeft" align="right" valign="top">uint32x2_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a1de26ff774cac4d14a9a99760139a379">vadd</a> (const uint32x2_t &amp;a, const uint32x2_t &amp;b)</td></tr>
<tr class="separator:a1de26ff774cac4d14a9a99760139a379"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adbc3286703ea68773578b2601a3fd797"><td class="memItemLeft" align="right" valign="top">int32x2_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#adbc3286703ea68773578b2601a3fd797">vadd</a> (const int32x2_t &amp;a, const int32x2_t &amp;b)</td></tr>
<tr class="separator:adbc3286703ea68773578b2601a3fd797"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a44649f1c855e68e4cab5f7f72daeb30b"><td class="memItemLeft" align="right" valign="top">uint64x1_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a44649f1c855e68e4cab5f7f72daeb30b">vadd</a> (const uint64x1_t &amp;a, const uint64x1_t &amp;b)</td></tr>
<tr class="separator:a44649f1c855e68e4cab5f7f72daeb30b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa295c4e77f9e2ccd31f0fa815a9e4231"><td class="memItemLeft" align="right" valign="top">int64x1_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#aa295c4e77f9e2ccd31f0fa815a9e4231">vadd</a> (const int64x1_t &amp;a, const int64x1_t &amp;b)</td></tr>
<tr class="separator:aa295c4e77f9e2ccd31f0fa815a9e4231"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a04549b1ddb03008ac1c0ff3fc18ff335"><td class="memItemLeft" align="right" valign="top">float32x2_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a04549b1ddb03008ac1c0ff3fc18ff335">vadd</a> (const float32x2_t &amp;a, const float32x2_t &amp;b)</td></tr>
<tr class="separator:a04549b1ddb03008ac1c0ff3fc18ff335"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a08ed369986c867b850a74635764e3764"><td class="memItemLeft" align="right" valign="top">uint8x16_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a08ed369986c867b850a74635764e3764">vadd</a> (const uint8x16_t &amp;a, const uint8x16_t &amp;b)</td></tr>
<tr class="separator:a08ed369986c867b850a74635764e3764"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a00611d18ac6548c52d5f3e5eec52f3fc"><td class="memItemLeft" align="right" valign="top">int8x16_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a00611d18ac6548c52d5f3e5eec52f3fc">vadd</a> (const int8x16_t &amp;a, const int8x16_t &amp;b)</td></tr>
<tr class="separator:a00611d18ac6548c52d5f3e5eec52f3fc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a001774f1457ef953dce3cbfd7ca3a720"><td class="memItemLeft" align="right" valign="top">uint16x8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a001774f1457ef953dce3cbfd7ca3a720">vadd</a> (const uint16x8_t &amp;a, const uint16x8_t &amp;b)</td></tr>
<tr class="separator:a001774f1457ef953dce3cbfd7ca3a720"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7b3548ff67e64b1b559f005728643115"><td class="memItemLeft" align="right" valign="top">int16x8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a7b3548ff67e64b1b559f005728643115">vadd</a> (const int16x8_t &amp;a, const int16x8_t &amp;b)</td></tr>
<tr class="separator:a7b3548ff67e64b1b559f005728643115"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a38f13009919fa0bb1bf096aca2fc2b52"><td class="memItemLeft" align="right" valign="top">uint32x4_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a38f13009919fa0bb1bf096aca2fc2b52">vadd</a> (const uint32x4_t &amp;a, const uint32x4_t &amp;b)</td></tr>
<tr class="separator:a38f13009919fa0bb1bf096aca2fc2b52"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae6e61403aa3b1ea42cb8623235a060d2"><td class="memItemLeft" align="right" valign="top">int32x4_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#ae6e61403aa3b1ea42cb8623235a060d2">vadd</a> (const int32x4_t &amp;a, const int32x4_t &amp;b)</td></tr>
<tr class="separator:ae6e61403aa3b1ea42cb8623235a060d2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4be8554b097bb191efca07c064500b0a"><td class="memItemLeft" align="right" valign="top">uint64x2_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a4be8554b097bb191efca07c064500b0a">vadd</a> (const uint64x2_t &amp;a, const uint64x2_t &amp;b)</td></tr>
<tr class="separator:a4be8554b097bb191efca07c064500b0a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a85bff4b042de6d354194fd5faec611b2"><td class="memItemLeft" align="right" valign="top">int64x2_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a85bff4b042de6d354194fd5faec611b2">vadd</a> (const int64x2_t &amp;a, const int64x2_t &amp;b)</td></tr>
<tr class="separator:a85bff4b042de6d354194fd5faec611b2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5facaa0c056dc73dfa6a49cde91240c4"><td class="memItemLeft" align="right" valign="top">float32x4_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a5facaa0c056dc73dfa6a49cde91240c4">vadd</a> (const float32x4_t &amp;a, const float32x4_t &amp;b)</td></tr>
<tr class="separator:a5facaa0c056dc73dfa6a49cde91240c4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac071623f14587f7cc6c4aea757d4378b"><td class="memItemLeft" align="right" valign="top">uint8x8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#ac071623f14587f7cc6c4aea757d4378b">vand</a> (const uint8x8_t &amp;a, const uint8x8_t &amp;b)</td></tr>
<tr class="separator:ac071623f14587f7cc6c4aea757d4378b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ace696b022d783c4a3e84f6aa23b9ec72"><td class="memItemLeft" align="right" valign="top">int8x8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#ace696b022d783c4a3e84f6aa23b9ec72">vand</a> (const int8x8_t &amp;a, const int8x8_t &amp;b)</td></tr>
<tr class="separator:ace696b022d783c4a3e84f6aa23b9ec72"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a364a30327f38b955216af9b5ac4367db"><td class="memItemLeft" align="right" valign="top">uint16x4_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a364a30327f38b955216af9b5ac4367db">vand</a> (const uint16x4_t &amp;a, const uint16x4_t &amp;b)</td></tr>
<tr class="separator:a364a30327f38b955216af9b5ac4367db"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5bfe76fc6cc188b7e32c6944772f7125"><td class="memItemLeft" align="right" valign="top">int16x4_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a5bfe76fc6cc188b7e32c6944772f7125">vand</a> (const int16x4_t &amp;a, const int16x4_t &amp;b)</td></tr>
<tr class="separator:a5bfe76fc6cc188b7e32c6944772f7125"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a17104b7f34998fcd36ad45f0594678ab"><td class="memItemLeft" align="right" valign="top">uint32x2_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a17104b7f34998fcd36ad45f0594678ab">vand</a> (const uint32x2_t &amp;a, const uint32x2_t &amp;b)</td></tr>
<tr class="separator:a17104b7f34998fcd36ad45f0594678ab"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa12949a2a2d6873da017181f7941232f"><td class="memItemLeft" align="right" valign="top">int32x2_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#aa12949a2a2d6873da017181f7941232f">vand</a> (const int32x2_t &amp;a, const int32x2_t &amp;b)</td></tr>
<tr class="separator:aa12949a2a2d6873da017181f7941232f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a88f7ebc42b23820a9ba0b8ac05d70d37"><td class="memItemLeft" align="right" valign="top">uint64x1_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a88f7ebc42b23820a9ba0b8ac05d70d37">vand</a> (const uint64x1_t &amp;a, const uint64x1_t &amp;b)</td></tr>
<tr class="separator:a88f7ebc42b23820a9ba0b8ac05d70d37"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2865027ccc7e291a55d03e18a80f2341"><td class="memItemLeft" align="right" valign="top">int64x1_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a2865027ccc7e291a55d03e18a80f2341">vand</a> (const int64x1_t &amp;a, const int64x1_t &amp;b)</td></tr>
<tr class="separator:a2865027ccc7e291a55d03e18a80f2341"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a42a53b1fb8523ad84bb686cf83b2eeff"><td class="memItemLeft" align="right" valign="top">uint8x16_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a42a53b1fb8523ad84bb686cf83b2eeff">vand</a> (const uint8x16_t &amp;a, const uint8x16_t &amp;b)</td></tr>
<tr class="separator:a42a53b1fb8523ad84bb686cf83b2eeff"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a09aa0f0336703a4ac289525882f81bc5"><td class="memItemLeft" align="right" valign="top">int8x16_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a09aa0f0336703a4ac289525882f81bc5">vand</a> (const int8x16_t &amp;a, const int8x16_t &amp;b)</td></tr>
<tr class="separator:a09aa0f0336703a4ac289525882f81bc5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac36121fb64569e4d6b12eea9473e41a3"><td class="memItemLeft" align="right" valign="top">uint16x8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#ac36121fb64569e4d6b12eea9473e41a3">vand</a> (const uint16x8_t &amp;a, const uint16x8_t &amp;b)</td></tr>
<tr class="separator:ac36121fb64569e4d6b12eea9473e41a3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9601217868077e3ecf9c2dab5e8d7da2"><td class="memItemLeft" align="right" valign="top">int16x8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a9601217868077e3ecf9c2dab5e8d7da2">vand</a> (const int16x8_t &amp;a, const int16x8_t &amp;b)</td></tr>
<tr class="separator:a9601217868077e3ecf9c2dab5e8d7da2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a770a458f188ed6e66be390082eca8aed"><td class="memItemLeft" align="right" valign="top">uint32x4_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a770a458f188ed6e66be390082eca8aed">vand</a> (const uint32x4_t &amp;a, const uint32x4_t &amp;b)</td></tr>
<tr class="separator:a770a458f188ed6e66be390082eca8aed"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1f5ad185828729587ebd0356cd0ca275"><td class="memItemLeft" align="right" valign="top">int32x4_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a1f5ad185828729587ebd0356cd0ca275">vand</a> (const int32x4_t &amp;a, const int32x4_t &amp;b)</td></tr>
<tr class="separator:a1f5ad185828729587ebd0356cd0ca275"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2913668b4791bdc393393ca60a078a7f"><td class="memItemLeft" align="right" valign="top">uint64x2_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a2913668b4791bdc393393ca60a078a7f">vand</a> (const uint64x2_t &amp;a, const uint64x2_t &amp;b)</td></tr>
<tr class="separator:a2913668b4791bdc393393ca60a078a7f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae36ea08250992deca7c68f523fb95842"><td class="memItemLeft" align="right" valign="top">int64x2_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#ae36ea08250992deca7c68f523fb95842">vand</a> (const int64x2_t &amp;a, const int64x2_t &amp;b)</td></tr>
<tr class="separator:ae36ea08250992deca7c68f523fb95842"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a39e87435be178fba49b76f49426ef873"><td class="memItemLeft" align="right" valign="top">uint8x8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a39e87435be178fba49b76f49426ef873">vdup_n</a> (uint8_t value, <a class="el" href="structarm__compute_1_1wrapper_1_1traits_1_1vector__64__tag.xhtml">traits::vector_64_tag</a>)</td></tr>
<tr class="separator:a39e87435be178fba49b76f49426ef873"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae96f63b38824187da108a09448e7b7f1"><td class="memItemLeft" align="right" valign="top">int8x8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#ae96f63b38824187da108a09448e7b7f1">vdup_n</a> (int8_t value, <a class="el" href="structarm__compute_1_1wrapper_1_1traits_1_1vector__64__tag.xhtml">traits::vector_64_tag</a>)</td></tr>
<tr class="separator:ae96f63b38824187da108a09448e7b7f1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2ddcfbfe730c340aec577f57ccf389da"><td class="memItemLeft" align="right" valign="top">uint16x4_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a2ddcfbfe730c340aec577f57ccf389da">vdup_n</a> (uint16_t value, <a class="el" href="structarm__compute_1_1wrapper_1_1traits_1_1vector__64__tag.xhtml">traits::vector_64_tag</a>)</td></tr>
<tr class="separator:a2ddcfbfe730c340aec577f57ccf389da"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afa30db793e7c1fd082609ab7a6d5f165"><td class="memItemLeft" align="right" valign="top">int16x4_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#afa30db793e7c1fd082609ab7a6d5f165">vdup_n</a> (int16_t value, <a class="el" href="structarm__compute_1_1wrapper_1_1traits_1_1vector__64__tag.xhtml">traits::vector_64_tag</a>)</td></tr>
<tr class="separator:afa30db793e7c1fd082609ab7a6d5f165"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab7a046ee9be293d9b823ddaed7138ea1"><td class="memItemLeft" align="right" valign="top">uint32x2_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#ab7a046ee9be293d9b823ddaed7138ea1">vdup_n</a> (uint32_t value, <a class="el" href="structarm__compute_1_1wrapper_1_1traits_1_1vector__64__tag.xhtml">traits::vector_64_tag</a>)</td></tr>
<tr class="separator:ab7a046ee9be293d9b823ddaed7138ea1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3fb0be6f60ff8e0f3df96993f7227aac"><td class="memItemLeft" align="right" valign="top">int32x2_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a3fb0be6f60ff8e0f3df96993f7227aac">vdup_n</a> (int32_t value, <a class="el" href="structarm__compute_1_1wrapper_1_1traits_1_1vector__64__tag.xhtml">traits::vector_64_tag</a>)</td></tr>
<tr class="separator:a3fb0be6f60ff8e0f3df96993f7227aac"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aae63f6b8b4a2ec47485921709b85563f"><td class="memItemLeft" align="right" valign="top">float32x2_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#aae63f6b8b4a2ec47485921709b85563f">vdup_n</a> (float value, <a class="el" href="structarm__compute_1_1wrapper_1_1traits_1_1vector__64__tag.xhtml">traits::vector_64_tag</a>)</td></tr>
<tr class="separator:aae63f6b8b4a2ec47485921709b85563f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab38dbdbc1cddb9806cd5eb7c8e5369bf"><td class="memItemLeft" align="right" valign="top">uint8x16_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#ab38dbdbc1cddb9806cd5eb7c8e5369bf">vdup_n</a> (uint8_t value, <a class="el" href="structarm__compute_1_1wrapper_1_1traits_1_1vector__128__tag.xhtml">traits::vector_128_tag</a>)</td></tr>
<tr class="separator:ab38dbdbc1cddb9806cd5eb7c8e5369bf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0140b10717610c7716b37e0706bef65c"><td class="memItemLeft" align="right" valign="top">int8x16_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a0140b10717610c7716b37e0706bef65c">vdup_n</a> (int8_t value, <a class="el" href="structarm__compute_1_1wrapper_1_1traits_1_1vector__128__tag.xhtml">traits::vector_128_tag</a>)</td></tr>
<tr class="separator:a0140b10717610c7716b37e0706bef65c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac31dce4d78e068f2d10c266685de46cc"><td class="memItemLeft" align="right" valign="top">uint16x8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#ac31dce4d78e068f2d10c266685de46cc">vdup_n</a> (uint16_t value, <a class="el" href="structarm__compute_1_1wrapper_1_1traits_1_1vector__128__tag.xhtml">traits::vector_128_tag</a>)</td></tr>
<tr class="separator:ac31dce4d78e068f2d10c266685de46cc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a138a0ca63e4bfb6e81326b7f29f9f26f"><td class="memItemLeft" align="right" valign="top">int16x8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a138a0ca63e4bfb6e81326b7f29f9f26f">vdup_n</a> (int16_t value, <a class="el" href="structarm__compute_1_1wrapper_1_1traits_1_1vector__128__tag.xhtml">traits::vector_128_tag</a>)</td></tr>
<tr class="separator:a138a0ca63e4bfb6e81326b7f29f9f26f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5cab0757ae9983d6f81120e1eeb0d495"><td class="memItemLeft" align="right" valign="top">uint32x4_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a5cab0757ae9983d6f81120e1eeb0d495">vdup_n</a> (uint32_t value, <a class="el" href="structarm__compute_1_1wrapper_1_1traits_1_1vector__128__tag.xhtml">traits::vector_128_tag</a>)</td></tr>
<tr class="separator:a5cab0757ae9983d6f81120e1eeb0d495"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1e4d95343b6703aa6502310fc041085d"><td class="memItemLeft" align="right" valign="top">int32x4_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a1e4d95343b6703aa6502310fc041085d">vdup_n</a> (int32_t value, <a class="el" href="structarm__compute_1_1wrapper_1_1traits_1_1vector__128__tag.xhtml">traits::vector_128_tag</a>)</td></tr>
<tr class="separator:a1e4d95343b6703aa6502310fc041085d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1d78cef5ffacdd18e233f2911fcaf3cc"><td class="memItemLeft" align="right" valign="top">float32x4_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a1d78cef5ffacdd18e233f2911fcaf3cc">vdup_n</a> (float value, <a class="el" href="structarm__compute_1_1wrapper_1_1traits_1_1vector__128__tag.xhtml">traits::vector_128_tag</a>)</td></tr>
<tr class="separator:a1d78cef5ffacdd18e233f2911fcaf3cc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3d35fe714076b40450ba6ba870fae322"><td class="memItemLeft" align="right" valign="top">float32x4_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a3d35fe714076b40450ba6ba870fae322">vexpq</a> (const float32x4_t &amp;a)</td></tr>
<tr class="separator:a3d35fe714076b40450ba6ba870fae322"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a95ee388aa7c5bccab918235dc538a6b3"><td class="memItemLeft" align="right" valign="top">uint8x8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a95ee388aa7c5bccab918235dc538a6b3">vgethigh</a> (const uint8x16_t val)</td></tr>
<tr class="separator:a95ee388aa7c5bccab918235dc538a6b3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac9c024a301326584e832c4a48504b8bf"><td class="memItemLeft" align="right" valign="top">int8x8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#ac9c024a301326584e832c4a48504b8bf">vgethigh</a> (const int8x16_t val)</td></tr>
<tr class="separator:ac9c024a301326584e832c4a48504b8bf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afbcf39b840489f643bc83778d43f6335"><td class="memItemLeft" align="right" valign="top">uint16x4_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#afbcf39b840489f643bc83778d43f6335">vgethigh</a> (const uint16x8_t val)</td></tr>
<tr class="separator:afbcf39b840489f643bc83778d43f6335"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4bb43c0a3ad727d1ee1af90103a8829b"><td class="memItemLeft" align="right" valign="top">int16x4_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a4bb43c0a3ad727d1ee1af90103a8829b">vgethigh</a> (const int16x8_t val)</td></tr>
<tr class="separator:a4bb43c0a3ad727d1ee1af90103a8829b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab2f8b38aa056a162e85852f0c6761289"><td class="memItemLeft" align="right" valign="top">uint32x2_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#ab2f8b38aa056a162e85852f0c6761289">vgethigh</a> (const uint32x4_t val)</td></tr>
<tr class="separator:ab2f8b38aa056a162e85852f0c6761289"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afd21e55cfb947d64570a61c1faf5ecc6"><td class="memItemLeft" align="right" valign="top">int32x2_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#afd21e55cfb947d64570a61c1faf5ecc6">vgethigh</a> (const int32x4_t val)</td></tr>
<tr class="separator:afd21e55cfb947d64570a61c1faf5ecc6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a141bed2170a24f4fa5ec39a7c19d5d61"><td class="memItemLeft" align="right" valign="top">float32x2_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a141bed2170a24f4fa5ec39a7c19d5d61">vgethigh</a> (const float32x4_t val)</td></tr>
<tr class="separator:a141bed2170a24f4fa5ec39a7c19d5d61"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7942760521e166be06dd2fb44a7dcf25"><td class="memItemLeft" align="right" valign="top">uint8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a7942760521e166be06dd2fb44a7dcf25">vgetlane</a> (const uint8x8_t vector, const int lane)</td></tr>
<tr class="separator:a7942760521e166be06dd2fb44a7dcf25"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6d21ff1bd5ffea4299349bce82002aa2"><td class="memItemLeft" align="right" valign="top">int8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a6d21ff1bd5ffea4299349bce82002aa2">vgetlane</a> (const int8x8_t vector, const int lane)</td></tr>
<tr class="separator:a6d21ff1bd5ffea4299349bce82002aa2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac09ddece1e3391bb56fb3d3d0131ecdf"><td class="memItemLeft" align="right" valign="top">uint16_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#ac09ddece1e3391bb56fb3d3d0131ecdf">vgetlane</a> (const uint16x4_t vector, const int lane)</td></tr>
<tr class="separator:ac09ddece1e3391bb56fb3d3d0131ecdf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afdb5b5bd6639c3f4ae13eda87f565228"><td class="memItemLeft" align="right" valign="top">int16_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#afdb5b5bd6639c3f4ae13eda87f565228">vgetlane</a> (const int16x4_t vector, const int lane)</td></tr>
<tr class="separator:afdb5b5bd6639c3f4ae13eda87f565228"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae167e6fe177fb9816f466ad9c422ff8a"><td class="memItemLeft" align="right" valign="top">uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#ae167e6fe177fb9816f466ad9c422ff8a">vgetlane</a> (const uint32x2_t vector, const int lane)</td></tr>
<tr class="separator:ae167e6fe177fb9816f466ad9c422ff8a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:add649a246ec5b87317cbc55d6b870ab7"><td class="memItemLeft" align="right" valign="top">int32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#add649a246ec5b87317cbc55d6b870ab7">vgetlane</a> (const int32x2_t vector, const int lane)</td></tr>
<tr class="separator:add649a246ec5b87317cbc55d6b870ab7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af05d7ba1b1ed3b05a92144feb0616611"><td class="memItemLeft" align="right" valign="top">float&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#af05d7ba1b1ed3b05a92144feb0616611">vgetlane</a> (const float32x2_t vector, const int lane)</td></tr>
<tr class="separator:af05d7ba1b1ed3b05a92144feb0616611"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afd38fe23c36b3beae2328e48a52201f4"><td class="memItemLeft" align="right" valign="top">uint8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#afd38fe23c36b3beae2328e48a52201f4">vgetqlane</a> (const uint8x16_t vector, const int lane)</td></tr>
<tr class="separator:afd38fe23c36b3beae2328e48a52201f4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1bd18d87a40b79527b49347f35d2c9b5"><td class="memItemLeft" align="right" valign="top">int8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a1bd18d87a40b79527b49347f35d2c9b5">vgetqlane</a> (const int8x16_t vector, const int lane)</td></tr>
<tr class="separator:a1bd18d87a40b79527b49347f35d2c9b5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9dab805d3cfaef1a075d41f47fc3a6bb"><td class="memItemLeft" align="right" valign="top">uint16_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a9dab805d3cfaef1a075d41f47fc3a6bb">vgetqlane</a> (const uint16x8_t vector, const int lane)</td></tr>
<tr class="separator:a9dab805d3cfaef1a075d41f47fc3a6bb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acd4dd84d48c63324d7ff91499b2ace33"><td class="memItemLeft" align="right" valign="top">int16_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#acd4dd84d48c63324d7ff91499b2ace33">vgetqlane</a> (const int16x8_t vector, const int lane)</td></tr>
<tr class="separator:acd4dd84d48c63324d7ff91499b2ace33"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad1c1c26eb0ae665f630b89aa4b36b65a"><td class="memItemLeft" align="right" valign="top">uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#ad1c1c26eb0ae665f630b89aa4b36b65a">vgetqlane</a> (const uint32x4_t vector, const int lane)</td></tr>
<tr class="separator:ad1c1c26eb0ae665f630b89aa4b36b65a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aab7e595808ac79d53ecf90da0de5dd31"><td class="memItemLeft" align="right" valign="top">int32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#aab7e595808ac79d53ecf90da0de5dd31">vgetqlane</a> (const int32x4_t vector, const int lane)</td></tr>
<tr class="separator:aab7e595808ac79d53ecf90da0de5dd31"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af5b5e943c70b14264adc2d023f3463eb"><td class="memItemLeft" align="right" valign="top">float&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#af5b5e943c70b14264adc2d023f3463eb">vgetqlane</a> (const float32x4_t vector, const int lane)</td></tr>
<tr class="separator:af5b5e943c70b14264adc2d023f3463eb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2902775707bc7bf7d6da1bda1cc15783"><td class="memItemLeft" align="right" valign="top">uint8x8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a2902775707bc7bf7d6da1bda1cc15783">vgetlow</a> (const uint8x16_t val)</td></tr>
<tr class="separator:a2902775707bc7bf7d6da1bda1cc15783"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6b68d30ce46c4c3194066823acacd442"><td class="memItemLeft" align="right" valign="top">int8x8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a6b68d30ce46c4c3194066823acacd442">vgetlow</a> (const int8x16_t val)</td></tr>
<tr class="separator:a6b68d30ce46c4c3194066823acacd442"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac9acd645854ecc2a492de10a5999034d"><td class="memItemLeft" align="right" valign="top">uint16x4_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#ac9acd645854ecc2a492de10a5999034d">vgetlow</a> (const uint16x8_t val)</td></tr>
<tr class="separator:ac9acd645854ecc2a492de10a5999034d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afd2ae064582b5d27d7f3df420fef03eb"><td class="memItemLeft" align="right" valign="top">int16x4_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#afd2ae064582b5d27d7f3df420fef03eb">vgetlow</a> (const int16x8_t val)</td></tr>
<tr class="separator:afd2ae064582b5d27d7f3df420fef03eb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a274a067e78d261385119acb19ebc7053"><td class="memItemLeft" align="right" valign="top">uint32x2_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a274a067e78d261385119acb19ebc7053">vgetlow</a> (const uint32x4_t val)</td></tr>
<tr class="separator:a274a067e78d261385119acb19ebc7053"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6a958c1d3f88b393fc31f68d19f1a718"><td class="memItemLeft" align="right" valign="top">int32x2_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a6a958c1d3f88b393fc31f68d19f1a718">vgetlow</a> (const int32x4_t val)</td></tr>
<tr class="separator:a6a958c1d3f88b393fc31f68d19f1a718"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a745d994b7c62f971cd7023839b784ff2"><td class="memItemLeft" align="right" valign="top">float32x2_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a745d994b7c62f971cd7023839b784ff2">vgetlow</a> (const float32x4_t val)</td></tr>
<tr class="separator:a745d994b7c62f971cd7023839b784ff2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5ac8135a2c0a60f10448be0057543ed7"><td class="memItemLeft" align="right" valign="top">float32x2_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a5ac8135a2c0a60f10448be0057543ed7">vinv</a> (const float32x2_t &amp;a)</td></tr>
<tr class="separator:a5ac8135a2c0a60f10448be0057543ed7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9fab00cf10194f860fbe0facb245df77"><td class="memItemLeft" align="right" valign="top">float32x4_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a9fab00cf10194f860fbe0facb245df77">vinv</a> (const float32x4_t &amp;a)</td></tr>
<tr class="separator:a9fab00cf10194f860fbe0facb245df77"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae1a6f6dde14fc3b0470cd0b08041ea9f"><td class="memItemLeft" align="right" valign="top">uint8x8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#ae1a6f6dde14fc3b0470cd0b08041ea9f">vload</a> (const uint8_t *ptr)</td></tr>
<tr class="separator:ae1a6f6dde14fc3b0470cd0b08041ea9f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a87e91f0ee3ecea4a152f7db51451be32"><td class="memItemLeft" align="right" valign="top">int8x8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a87e91f0ee3ecea4a152f7db51451be32">vload</a> (const int8_t *ptr)</td></tr>
<tr class="separator:a87e91f0ee3ecea4a152f7db51451be32"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a554bda13751c47b20fb50246f99c601a"><td class="memItemLeft" align="right" valign="top">uint16x4_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a554bda13751c47b20fb50246f99c601a">vload</a> (const uint16_t *ptr)</td></tr>
<tr class="separator:a554bda13751c47b20fb50246f99c601a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9f1e8ab5f43a0bd6c5f12b8b8d2847ba"><td class="memItemLeft" align="right" valign="top">int16x4_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a9f1e8ab5f43a0bd6c5f12b8b8d2847ba">vload</a> (const int16_t *ptr)</td></tr>
<tr class="separator:a9f1e8ab5f43a0bd6c5f12b8b8d2847ba"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8c0ebb40f71661ff1396b6cab9c4d168"><td class="memItemLeft" align="right" valign="top">uint32x2_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a8c0ebb40f71661ff1396b6cab9c4d168">vload</a> (const uint32_t *ptr)</td></tr>
<tr class="separator:a8c0ebb40f71661ff1396b6cab9c4d168"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac315df13b4a8667730a6b3f0e774d66a"><td class="memItemLeft" align="right" valign="top">int32x2_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#ac315df13b4a8667730a6b3f0e774d66a">vload</a> (const int32_t *ptr)</td></tr>
<tr class="separator:ac315df13b4a8667730a6b3f0e774d66a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a34d952ba7147dd78ef05879bfead78f5"><td class="memItemLeft" align="right" valign="top">float32x2_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a34d952ba7147dd78ef05879bfead78f5">vload</a> (const float *ptr)</td></tr>
<tr class="separator:a34d952ba7147dd78ef05879bfead78f5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a77f54eded7fef436d3a4f21ad5a00da6"><td class="memItemLeft" align="right" valign="top">uint8x16_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a77f54eded7fef436d3a4f21ad5a00da6">vloadq</a> (const uint8_t *ptr)</td></tr>
<tr class="separator:a77f54eded7fef436d3a4f21ad5a00da6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abdcc9846d94853fcbddb817879de1a34"><td class="memItemLeft" align="right" valign="top">int8x16_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#abdcc9846d94853fcbddb817879de1a34">vloadq</a> (const int8_t *ptr)</td></tr>
<tr class="separator:abdcc9846d94853fcbddb817879de1a34"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aace1a8b4ba67c412574180dd492e480b"><td class="memItemLeft" align="right" valign="top">uint16x8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#aace1a8b4ba67c412574180dd492e480b">vloadq</a> (const uint16_t *ptr)</td></tr>
<tr class="separator:aace1a8b4ba67c412574180dd492e480b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae189872ea41a0947dd06f560aaca3fbb"><td class="memItemLeft" align="right" valign="top">int16x8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#ae189872ea41a0947dd06f560aaca3fbb">vloadq</a> (const int16_t *ptr)</td></tr>
<tr class="separator:ae189872ea41a0947dd06f560aaca3fbb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3ea1791012d4495628c21706e031a1eb"><td class="memItemLeft" align="right" valign="top">uint32x4_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a3ea1791012d4495628c21706e031a1eb">vloadq</a> (const uint32_t *ptr)</td></tr>
<tr class="separator:a3ea1791012d4495628c21706e031a1eb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a68cae5637e21bb5bc7563a5a89c27764"><td class="memItemLeft" align="right" valign="top">int32x4_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a68cae5637e21bb5bc7563a5a89c27764">vloadq</a> (const int32_t *ptr)</td></tr>
<tr class="separator:a68cae5637e21bb5bc7563a5a89c27764"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adbe3f94e4c5f2a89be3c5fff7c87a1c2"><td class="memItemLeft" align="right" valign="top">float32x4_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#adbe3f94e4c5f2a89be3c5fff7c87a1c2">vloadq</a> (const float *ptr)</td></tr>
<tr class="separator:adbe3f94e4c5f2a89be3c5fff7c87a1c2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8d1d14000c959f1146a8a64e1dafae5f"><td class="memItemLeft" align="right" valign="top">uint8x8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a8d1d14000c959f1146a8a64e1dafae5f">vmax</a> (const uint8x8_t &amp;a, const uint8x8_t &amp;b)</td></tr>
<tr class="separator:a8d1d14000c959f1146a8a64e1dafae5f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8f7649f2ee606cf842115341b7571aab"><td class="memItemLeft" align="right" valign="top">int8x8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a8f7649f2ee606cf842115341b7571aab">vmax</a> (const int8x8_t &amp;a, const int8x8_t &amp;b)</td></tr>
<tr class="separator:a8f7649f2ee606cf842115341b7571aab"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adf5ce125cc789021a3d24f5707d711ec"><td class="memItemLeft" align="right" valign="top">uint16x4_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#adf5ce125cc789021a3d24f5707d711ec">vmax</a> (const uint16x4_t &amp;a, const uint16x4_t &amp;b)</td></tr>
<tr class="separator:adf5ce125cc789021a3d24f5707d711ec"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7afbbd0a831ad31c1a75e48b7d93324a"><td class="memItemLeft" align="right" valign="top">int16x4_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a7afbbd0a831ad31c1a75e48b7d93324a">vmax</a> (const int16x4_t &amp;a, const int16x4_t &amp;b)</td></tr>
<tr class="separator:a7afbbd0a831ad31c1a75e48b7d93324a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6b553699a7c1e9d9cb109a49ad3c5727"><td class="memItemLeft" align="right" valign="top">uint32x2_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a6b553699a7c1e9d9cb109a49ad3c5727">vmax</a> (const uint32x2_t &amp;a, const uint32x2_t &amp;b)</td></tr>
<tr class="separator:a6b553699a7c1e9d9cb109a49ad3c5727"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5ca7ae9e30647c4643b1eb31f6517791"><td class="memItemLeft" align="right" valign="top">int32x2_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a5ca7ae9e30647c4643b1eb31f6517791">vmax</a> (const int32x2_t &amp;a, const int32x2_t &amp;b)</td></tr>
<tr class="separator:a5ca7ae9e30647c4643b1eb31f6517791"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae2e5d4eb72295c6454bbd4a051cb32d6"><td class="memItemLeft" align="right" valign="top">float32x2_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#ae2e5d4eb72295c6454bbd4a051cb32d6">vmax</a> (const float32x2_t &amp;a, const float32x2_t &amp;b)</td></tr>
<tr class="separator:ae2e5d4eb72295c6454bbd4a051cb32d6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a650538c522d3fd73c30e39cd170d02f9"><td class="memItemLeft" align="right" valign="top">uint8x16_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a650538c522d3fd73c30e39cd170d02f9">vmax</a> (const uint8x16_t &amp;a, const uint8x16_t &amp;b)</td></tr>
<tr class="separator:a650538c522d3fd73c30e39cd170d02f9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae30d6367801c1cba0e1e24b5e8a664b8"><td class="memItemLeft" align="right" valign="top">int8x16_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#ae30d6367801c1cba0e1e24b5e8a664b8">vmax</a> (const int8x16_t &amp;a, const int8x16_t &amp;b)</td></tr>
<tr class="separator:ae30d6367801c1cba0e1e24b5e8a664b8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afda337d70b92b77d4bb0601cd5673230"><td class="memItemLeft" align="right" valign="top">uint16x8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#afda337d70b92b77d4bb0601cd5673230">vmax</a> (const uint16x8_t &amp;a, const uint16x8_t &amp;b)</td></tr>
<tr class="separator:afda337d70b92b77d4bb0601cd5673230"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae5e87ca36a247c28d04b4bf992f5dd9a"><td class="memItemLeft" align="right" valign="top">int16x8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#ae5e87ca36a247c28d04b4bf992f5dd9a">vmax</a> (const int16x8_t &amp;a, const int16x8_t &amp;b)</td></tr>
<tr class="separator:ae5e87ca36a247c28d04b4bf992f5dd9a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3b5bb4293c6cf9406b10543f2af45cae"><td class="memItemLeft" align="right" valign="top">uint32x4_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a3b5bb4293c6cf9406b10543f2af45cae">vmax</a> (const uint32x4_t &amp;a, const uint32x4_t &amp;b)</td></tr>
<tr class="separator:a3b5bb4293c6cf9406b10543f2af45cae"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5305cd57eda646455fa9e5638d828db9"><td class="memItemLeft" align="right" valign="top">int32x4_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a5305cd57eda646455fa9e5638d828db9">vmax</a> (const int32x4_t &amp;a, const int32x4_t &amp;b)</td></tr>
<tr class="separator:a5305cd57eda646455fa9e5638d828db9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4a705920c79ac05f91ac30842627e97a"><td class="memItemLeft" align="right" valign="top">float32x4_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a4a705920c79ac05f91ac30842627e97a">vmax</a> (const float32x4_t &amp;a, const float32x4_t &amp;b)</td></tr>
<tr class="separator:a4a705920c79ac05f91ac30842627e97a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab026a1aeec48074092f548c130c323f4"><td class="memItemLeft" align="right" valign="top">uint8x8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#ab026a1aeec48074092f548c130c323f4">vmin</a> (const uint8x8_t &amp;a, const uint8x8_t &amp;b)</td></tr>
<tr class="separator:ab026a1aeec48074092f548c130c323f4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a51eb407b34af91654602ed8f03e244d0"><td class="memItemLeft" align="right" valign="top">int8x8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a51eb407b34af91654602ed8f03e244d0">vmin</a> (const int8x8_t &amp;a, const int8x8_t &amp;b)</td></tr>
<tr class="separator:a51eb407b34af91654602ed8f03e244d0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5f9729c21d22cf563cfea46cf475102f"><td class="memItemLeft" align="right" valign="top">uint16x4_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a5f9729c21d22cf563cfea46cf475102f">vmin</a> (const uint16x4_t &amp;a, const uint16x4_t &amp;b)</td></tr>
<tr class="separator:a5f9729c21d22cf563cfea46cf475102f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aab638eca3c44bec3263d05c09708c62f"><td class="memItemLeft" align="right" valign="top">int16x4_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#aab638eca3c44bec3263d05c09708c62f">vmin</a> (const int16x4_t &amp;a, const int16x4_t &amp;b)</td></tr>
<tr class="separator:aab638eca3c44bec3263d05c09708c62f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a57673ef73ff89d5a1b3fe00447d13e5b"><td class="memItemLeft" align="right" valign="top">uint32x2_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a57673ef73ff89d5a1b3fe00447d13e5b">vmin</a> (const uint32x2_t &amp;a, const uint32x2_t &amp;b)</td></tr>
<tr class="separator:a57673ef73ff89d5a1b3fe00447d13e5b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8d9f1c86402d06b9b6565d090e6c8516"><td class="memItemLeft" align="right" valign="top">int32x2_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a8d9f1c86402d06b9b6565d090e6c8516">vmin</a> (const int32x2_t &amp;a, const int32x2_t &amp;b)</td></tr>
<tr class="separator:a8d9f1c86402d06b9b6565d090e6c8516"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab810d1d59b9ae09dd6c4f829fb50b6e9"><td class="memItemLeft" align="right" valign="top">float32x2_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#ab810d1d59b9ae09dd6c4f829fb50b6e9">vmin</a> (const float32x2_t &amp;a, const float32x2_t &amp;b)</td></tr>
<tr class="separator:ab810d1d59b9ae09dd6c4f829fb50b6e9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab1ee5e3e73a507eccc2ae66ba7e6fdc6"><td class="memItemLeft" align="right" valign="top">uint8x16_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#ab1ee5e3e73a507eccc2ae66ba7e6fdc6">vmin</a> (const uint8x16_t &amp;a, const uint8x16_t &amp;b)</td></tr>
<tr class="separator:ab1ee5e3e73a507eccc2ae66ba7e6fdc6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af67a7cc27575ee4da73c711225c51b53"><td class="memItemLeft" align="right" valign="top">int8x16_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#af67a7cc27575ee4da73c711225c51b53">vmin</a> (const int8x16_t &amp;a, const int8x16_t &amp;b)</td></tr>
<tr class="separator:af67a7cc27575ee4da73c711225c51b53"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1572d51ddecf974abf037055a1e5c334"><td class="memItemLeft" align="right" valign="top">uint16x8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a1572d51ddecf974abf037055a1e5c334">vmin</a> (const uint16x8_t &amp;a, const uint16x8_t &amp;b)</td></tr>
<tr class="separator:a1572d51ddecf974abf037055a1e5c334"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a435329432b5a078c141b0cbc8c0ce0ec"><td class="memItemLeft" align="right" valign="top">int16x8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a435329432b5a078c141b0cbc8c0ce0ec">vmin</a> (const int16x8_t &amp;a, const int16x8_t &amp;b)</td></tr>
<tr class="separator:a435329432b5a078c141b0cbc8c0ce0ec"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a48871d33cc9dbec5947efe4a5f180712"><td class="memItemLeft" align="right" valign="top">uint32x4_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a48871d33cc9dbec5947efe4a5f180712">vmin</a> (const uint32x4_t &amp;a, const uint32x4_t &amp;b)</td></tr>
<tr class="separator:a48871d33cc9dbec5947efe4a5f180712"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0342e5fbea4e9b848a20f8ff8d365456"><td class="memItemLeft" align="right" valign="top">int32x4_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a0342e5fbea4e9b848a20f8ff8d365456">vmin</a> (const int32x4_t &amp;a, const int32x4_t &amp;b)</td></tr>
<tr class="separator:a0342e5fbea4e9b848a20f8ff8d365456"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aded29dd88bb45804ea08fe7e4959368e"><td class="memItemLeft" align="right" valign="top">float32x4_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#aded29dd88bb45804ea08fe7e4959368e">vmin</a> (const float32x4_t &amp;a, const float32x4_t &amp;b)</td></tr>
<tr class="separator:aded29dd88bb45804ea08fe7e4959368e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4287931a2912ecb6cece71219ca5478c"><td class="memItemLeft" align="right" valign="top">uint8x8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a4287931a2912ecb6cece71219ca5478c">vmla</a> (const uint8x8_t &amp;a, const uint8x8_t &amp;b, const uint8x8_t &amp;c)</td></tr>
<tr class="separator:a4287931a2912ecb6cece71219ca5478c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a37f88ce34194adf857254339a0dcf79b"><td class="memItemLeft" align="right" valign="top">int8x8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a37f88ce34194adf857254339a0dcf79b">vmla</a> (const int8x8_t &amp;a, const int8x8_t &amp;b, const int8x8_t &amp;c)</td></tr>
<tr class="separator:a37f88ce34194adf857254339a0dcf79b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a42223331ada67c8e42296d82f84892bb"><td class="memItemLeft" align="right" valign="top">uint16x4_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a42223331ada67c8e42296d82f84892bb">vmla</a> (const uint16x4_t &amp;a, const uint16x4_t &amp;b, const uint16x4_t &amp;c)</td></tr>
<tr class="separator:a42223331ada67c8e42296d82f84892bb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abfa9b0883aa3181f35138d1334cb6254"><td class="memItemLeft" align="right" valign="top">int16x4_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#abfa9b0883aa3181f35138d1334cb6254">vmla</a> (const int16x4_t &amp;a, const int16x4_t &amp;b, const int16x4_t &amp;c)</td></tr>
<tr class="separator:abfa9b0883aa3181f35138d1334cb6254"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac0d3c9db71218e51620b55f1c65bee02"><td class="memItemLeft" align="right" valign="top">uint32x2_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#ac0d3c9db71218e51620b55f1c65bee02">vmla</a> (const uint32x2_t &amp;a, const uint32x2_t &amp;b, const uint32x2_t &amp;c)</td></tr>
<tr class="separator:ac0d3c9db71218e51620b55f1c65bee02"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae0885e9c52aa46752544466bc926f38a"><td class="memItemLeft" align="right" valign="top">int32x2_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#ae0885e9c52aa46752544466bc926f38a">vmla</a> (const int32x2_t &amp;a, const int32x2_t &amp;b, const int32x2_t &amp;c)</td></tr>
<tr class="separator:ae0885e9c52aa46752544466bc926f38a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a303b6b566f2673b81e3ec38ae63c6e9e"><td class="memItemLeft" align="right" valign="top">float32x2_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a303b6b566f2673b81e3ec38ae63c6e9e">vmla</a> (const float32x2_t &amp;a, const float32x2_t &amp;b, const float32x2_t &amp;c)</td></tr>
<tr class="separator:a303b6b566f2673b81e3ec38ae63c6e9e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac1a53ae8a71f3589b9af290a8a181c14"><td class="memItemLeft" align="right" valign="top">uint8x16_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#ac1a53ae8a71f3589b9af290a8a181c14">vmla</a> (const uint8x16_t &amp;a, const uint8x16_t &amp;b, const uint8x16_t &amp;c)</td></tr>
<tr class="separator:ac1a53ae8a71f3589b9af290a8a181c14"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9d83113a1e94bf011cf09a8e4e41e298"><td class="memItemLeft" align="right" valign="top">int8x16_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a9d83113a1e94bf011cf09a8e4e41e298">vmla</a> (const int8x16_t &amp;a, const int8x16_t &amp;b, const int8x16_t &amp;c)</td></tr>
<tr class="separator:a9d83113a1e94bf011cf09a8e4e41e298"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab87d76495291fa17d8227360e5d3df40"><td class="memItemLeft" align="right" valign="top">uint16x8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#ab87d76495291fa17d8227360e5d3df40">vmla</a> (const uint16x8_t &amp;a, const uint16x8_t &amp;b, const uint16x8_t &amp;c)</td></tr>
<tr class="separator:ab87d76495291fa17d8227360e5d3df40"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad1ab258613e35189ff0d2aaeaf88382c"><td class="memItemLeft" align="right" valign="top">int16x8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#ad1ab258613e35189ff0d2aaeaf88382c">vmla</a> (const int16x8_t &amp;a, const int16x8_t &amp;b, const int16x8_t &amp;c)</td></tr>
<tr class="separator:ad1ab258613e35189ff0d2aaeaf88382c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8c7b807fd519b6cc6944585b13c02141"><td class="memItemLeft" align="right" valign="top">uint32x4_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a8c7b807fd519b6cc6944585b13c02141">vmla</a> (const uint32x4_t &amp;a, const uint32x4_t &amp;b, const uint32x4_t &amp;c)</td></tr>
<tr class="separator:a8c7b807fd519b6cc6944585b13c02141"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac1e660abafdcb4d69d264f85aa48c2c7"><td class="memItemLeft" align="right" valign="top">int32x4_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#ac1e660abafdcb4d69d264f85aa48c2c7">vmla</a> (const int32x4_t &amp;a, const int32x4_t &amp;b, const int32x4_t &amp;c)</td></tr>
<tr class="separator:ac1e660abafdcb4d69d264f85aa48c2c7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae38f1d4af6841a054a793640eff009b3"><td class="memItemLeft" align="right" valign="top">float32x4_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#ae38f1d4af6841a054a793640eff009b3">vmla</a> (const float32x4_t &amp;a, const float32x4_t &amp;b, const float32x4_t &amp;c)</td></tr>
<tr class="separator:ae38f1d4af6841a054a793640eff009b3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8dbba1731c32d176ae6635be1c65cbd6"><td class="memItemLeft" align="right" valign="top">uint16x8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a8dbba1731c32d176ae6635be1c65cbd6">vmovl</a> (const uint8x8_t &amp;a)</td></tr>
<tr class="separator:a8dbba1731c32d176ae6635be1c65cbd6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa929d20322303880b8b6429b19eeea21"><td class="memItemLeft" align="right" valign="top">int16x8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#aa929d20322303880b8b6429b19eeea21">vmovl</a> (const int8x8_t &amp;a)</td></tr>
<tr class="separator:aa929d20322303880b8b6429b19eeea21"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7c3fe657db220619affef40899e7a3d3"><td class="memItemLeft" align="right" valign="top">uint32x4_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a7c3fe657db220619affef40899e7a3d3">vmovl</a> (const uint16x4_t &amp;a)</td></tr>
<tr class="separator:a7c3fe657db220619affef40899e7a3d3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9301713b642622ad8891b0917e98fc2a"><td class="memItemLeft" align="right" valign="top">int32x4_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a9301713b642622ad8891b0917e98fc2a">vmovl</a> (const int16x4_t &amp;a)</td></tr>
<tr class="separator:a9301713b642622ad8891b0917e98fc2a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab8d18c4574de6d24cf727f83081e9a52"><td class="memItemLeft" align="right" valign="top">uint64x2_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#ab8d18c4574de6d24cf727f83081e9a52">vmovl</a> (const uint32x2_t &amp;a)</td></tr>
<tr class="separator:ab8d18c4574de6d24cf727f83081e9a52"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8fa6221077a840ac278fe21fdcaeca2a"><td class="memItemLeft" align="right" valign="top">int64x2_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a8fa6221077a840ac278fe21fdcaeca2a">vmovl</a> (const int32x2_t &amp;a)</td></tr>
<tr class="separator:a8fa6221077a840ac278fe21fdcaeca2a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aea0b656edc428c1f7702d86bbb97df6b"><td class="memItemLeft" align="right" valign="top">uint32x2_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#aea0b656edc428c1f7702d86bbb97df6b">vmovn</a> (const uint64x2_t &amp;a)</td></tr>
<tr class="separator:aea0b656edc428c1f7702d86bbb97df6b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab31fa5f935432afeae5e4c873b6bb8fd"><td class="memItemLeft" align="right" valign="top">int32x2_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#ab31fa5f935432afeae5e4c873b6bb8fd">vmovn</a> (const int64x2_t &amp;a)</td></tr>
<tr class="separator:ab31fa5f935432afeae5e4c873b6bb8fd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a89a44d45022193bc148089fec401d437"><td class="memItemLeft" align="right" valign="top">uint16x4_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a89a44d45022193bc148089fec401d437">vmovn</a> (const uint32x4_t &amp;a)</td></tr>
<tr class="separator:a89a44d45022193bc148089fec401d437"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac9b48bf24969c71d62ab2837957a3b93"><td class="memItemLeft" align="right" valign="top">int16x4_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#ac9b48bf24969c71d62ab2837957a3b93">vmovn</a> (const int32x4_t &amp;a)</td></tr>
<tr class="separator:ac9b48bf24969c71d62ab2837957a3b93"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9fee192f80eebcf368ee4e662c455d7d"><td class="memItemLeft" align="right" valign="top">uint8x8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a9fee192f80eebcf368ee4e662c455d7d">vmovn</a> (const uint16x8_t &amp;a)</td></tr>
<tr class="separator:a9fee192f80eebcf368ee4e662c455d7d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a36c832fbcec771dae0fe1b8b215399f2"><td class="memItemLeft" align="right" valign="top">int8x8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a36c832fbcec771dae0fe1b8b215399f2">vmovn</a> (const int16x8_t &amp;a)</td></tr>
<tr class="separator:a36c832fbcec771dae0fe1b8b215399f2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a55bc37be5f14e4c561d3ca93b2a34aa9"><td class="memItemLeft" align="right" valign="top">uint32x2_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a55bc37be5f14e4c561d3ca93b2a34aa9">vqmovn</a> (const uint64x2_t &amp;a)</td></tr>
<tr class="separator:a55bc37be5f14e4c561d3ca93b2a34aa9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7154843230482bb0b779d95621541003"><td class="memItemLeft" align="right" valign="top">int32x2_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a7154843230482bb0b779d95621541003">vqmovn</a> (const int64x2_t &amp;a)</td></tr>
<tr class="separator:a7154843230482bb0b779d95621541003"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a57941a547a0cfad979bd6b8fa9e030b7"><td class="memItemLeft" align="right" valign="top">uint16x4_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a57941a547a0cfad979bd6b8fa9e030b7">vqmovn</a> (const uint32x4_t &amp;a)</td></tr>
<tr class="separator:a57941a547a0cfad979bd6b8fa9e030b7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1128ee038af1aeb3df753bd4958e2009"><td class="memItemLeft" align="right" valign="top">int16x4_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a1128ee038af1aeb3df753bd4958e2009">vqmovn</a> (const int32x4_t &amp;a)</td></tr>
<tr class="separator:a1128ee038af1aeb3df753bd4958e2009"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a03d244df122ac5030119baa1dfe319c6"><td class="memItemLeft" align="right" valign="top">uint8x8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a03d244df122ac5030119baa1dfe319c6">vqmovn</a> (const uint16x8_t &amp;a)</td></tr>
<tr class="separator:a03d244df122ac5030119baa1dfe319c6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aaca6eb034c8564ecc9b32f50e85349ea"><td class="memItemLeft" align="right" valign="top">int8x8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#aaca6eb034c8564ecc9b32f50e85349ea">vqmovn</a> (const int16x8_t &amp;a)</td></tr>
<tr class="separator:aaca6eb034c8564ecc9b32f50e85349ea"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a66c8dd218a4863a14fec363e3dd13dc4"><td class="memItemLeft" align="right" valign="top">uint8x8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a66c8dd218a4863a14fec363e3dd13dc4">vmul</a> (const uint8x8_t &amp;a, const uint8x8_t &amp;b)</td></tr>
<tr class="separator:a66c8dd218a4863a14fec363e3dd13dc4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a66a7fd5e2104da748fdb7665e3505b3c"><td class="memItemLeft" align="right" valign="top">int8x8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a66a7fd5e2104da748fdb7665e3505b3c">vmul</a> (const int8x8_t &amp;a, const int8x8_t &amp;b)</td></tr>
<tr class="separator:a66a7fd5e2104da748fdb7665e3505b3c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1aefc54a525724581b1a09f3b9e33111"><td class="memItemLeft" align="right" valign="top">uint16x4_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a1aefc54a525724581b1a09f3b9e33111">vmul</a> (const uint16x4_t &amp;a, const uint16x4_t &amp;b)</td></tr>
<tr class="separator:a1aefc54a525724581b1a09f3b9e33111"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a32c397e73d2083c8f48aaf0afcdd81c8"><td class="memItemLeft" align="right" valign="top">int16x4_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a32c397e73d2083c8f48aaf0afcdd81c8">vmul</a> (const int16x4_t &amp;a, const int16x4_t &amp;b)</td></tr>
<tr class="separator:a32c397e73d2083c8f48aaf0afcdd81c8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa2579d7197d661c7e483c2b4079c5037"><td class="memItemLeft" align="right" valign="top">uint32x2_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#aa2579d7197d661c7e483c2b4079c5037">vmul</a> (const uint32x2_t &amp;a, const uint32x2_t &amp;b)</td></tr>
<tr class="separator:aa2579d7197d661c7e483c2b4079c5037"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ace213c51916a0c2f979f3082663765e1"><td class="memItemLeft" align="right" valign="top">int32x2_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#ace213c51916a0c2f979f3082663765e1">vmul</a> (const int32x2_t &amp;a, const int32x2_t &amp;b)</td></tr>
<tr class="separator:ace213c51916a0c2f979f3082663765e1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aaa99c51650860bee18dc2a1c6259c661"><td class="memItemLeft" align="right" valign="top">float32x2_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#aaa99c51650860bee18dc2a1c6259c661">vmul</a> (const float32x2_t &amp;a, const float32x2_t &amp;b)</td></tr>
<tr class="separator:aaa99c51650860bee18dc2a1c6259c661"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1e6e6496807b9c330c9a21749f442a6d"><td class="memItemLeft" align="right" valign="top">uint8x16_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a1e6e6496807b9c330c9a21749f442a6d">vmul</a> (const uint8x16_t &amp;a, const uint8x16_t &amp;b)</td></tr>
<tr class="separator:a1e6e6496807b9c330c9a21749f442a6d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a34bb12fc418530504162b300bf417ee9"><td class="memItemLeft" align="right" valign="top">int8x16_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a34bb12fc418530504162b300bf417ee9">vmul</a> (const int8x16_t &amp;a, const int8x16_t &amp;b)</td></tr>
<tr class="separator:a34bb12fc418530504162b300bf417ee9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4f2e93cec76891a55fde0d4ead3f7728"><td class="memItemLeft" align="right" valign="top">uint16x8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a4f2e93cec76891a55fde0d4ead3f7728">vmul</a> (const uint16x8_t &amp;a, const uint16x8_t &amp;b)</td></tr>
<tr class="separator:a4f2e93cec76891a55fde0d4ead3f7728"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3f1fb2425af2afc3bcfb2ee0c8a68119"><td class="memItemLeft" align="right" valign="top">int16x8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a3f1fb2425af2afc3bcfb2ee0c8a68119">vmul</a> (const int16x8_t &amp;a, const int16x8_t &amp;b)</td></tr>
<tr class="separator:a3f1fb2425af2afc3bcfb2ee0c8a68119"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af797877175d454cbaa6b25b19fb6c7e1"><td class="memItemLeft" align="right" valign="top">uint32x4_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#af797877175d454cbaa6b25b19fb6c7e1">vmul</a> (const uint32x4_t &amp;a, const uint32x4_t &amp;b)</td></tr>
<tr class="separator:af797877175d454cbaa6b25b19fb6c7e1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aab8ce1a283f1649a3a7763c0600dd7f7"><td class="memItemLeft" align="right" valign="top">int32x4_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#aab8ce1a283f1649a3a7763c0600dd7f7">vmul</a> (const int32x4_t &amp;a, const int32x4_t &amp;b)</td></tr>
<tr class="separator:aab8ce1a283f1649a3a7763c0600dd7f7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a04525a80382277955944902464f660e4"><td class="memItemLeft" align="right" valign="top">float32x4_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a04525a80382277955944902464f660e4">vmul</a> (const float32x4_t &amp;a, const float32x4_t &amp;b)</td></tr>
<tr class="separator:a04525a80382277955944902464f660e4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa24da6d1c1ce97217bab0291ce404fa7"><td class="memItemLeft" align="right" valign="top">int8x8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#aa24da6d1c1ce97217bab0291ce404fa7">vneg</a> (const int8x8_t &amp;a)</td></tr>
<tr class="separator:aa24da6d1c1ce97217bab0291ce404fa7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2c6508f2e9aa4b8832aa4e05716a436f"><td class="memItemLeft" align="right" valign="top">int16x4_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a2c6508f2e9aa4b8832aa4e05716a436f">vneg</a> (const int16x4_t &amp;a)</td></tr>
<tr class="separator:a2c6508f2e9aa4b8832aa4e05716a436f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1fcdbb04887f4009d8eaf423260d862e"><td class="memItemLeft" align="right" valign="top">int32x2_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a1fcdbb04887f4009d8eaf423260d862e">vneg</a> (const int32x2_t &amp;a)</td></tr>
<tr class="separator:a1fcdbb04887f4009d8eaf423260d862e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3f8675538052849d9a77195dcb2a0475"><td class="memItemLeft" align="right" valign="top">float32x2_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a3f8675538052849d9a77195dcb2a0475">vneg</a> (const float32x2_t &amp;a)</td></tr>
<tr class="separator:a3f8675538052849d9a77195dcb2a0475"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acfca5c0549569d0748bbc1bbabae8b5b"><td class="memItemLeft" align="right" valign="top">int8x16_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#acfca5c0549569d0748bbc1bbabae8b5b">vnegq</a> (const int8x16_t &amp;a)</td></tr>
<tr class="separator:acfca5c0549569d0748bbc1bbabae8b5b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a42f50a3e82d32abc2786a355428ba7d5"><td class="memItemLeft" align="right" valign="top">int16x8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a42f50a3e82d32abc2786a355428ba7d5">vnegq</a> (const int16x8_t &amp;a)</td></tr>
<tr class="separator:a42f50a3e82d32abc2786a355428ba7d5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aaa09e8d6796678cced3dbc18dfe940a9"><td class="memItemLeft" align="right" valign="top">int32x4_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#aaa09e8d6796678cced3dbc18dfe940a9">vnegq</a> (const int32x4_t &amp;a)</td></tr>
<tr class="separator:aaa09e8d6796678cced3dbc18dfe940a9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9f567c83d21c9f879ee1e4c5deed598f"><td class="memItemLeft" align="right" valign="top">float32x4_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a9f567c83d21c9f879ee1e4c5deed598f">vnegq</a> (const float32x4_t &amp;a)</td></tr>
<tr class="separator:a9f567c83d21c9f879ee1e4c5deed598f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a475ee3c8ef70a2e4f18effd1d527a63a"><td class="memItemLeft" align="right" valign="top">uint8x8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a475ee3c8ef70a2e4f18effd1d527a63a">vpadd</a> (const uint8x8_t &amp;a, const uint8x8_t &amp;b)</td></tr>
<tr class="separator:a475ee3c8ef70a2e4f18effd1d527a63a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a484740aa6942805e042822fb7cef12ec"><td class="memItemLeft" align="right" valign="top">int8x8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a484740aa6942805e042822fb7cef12ec">vpadd</a> (const int8x8_t &amp;a, const int8x8_t &amp;b)</td></tr>
<tr class="separator:a484740aa6942805e042822fb7cef12ec"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af7354b0a019a54faca6951b03d9cf766"><td class="memItemLeft" align="right" valign="top">uint16x4_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#af7354b0a019a54faca6951b03d9cf766">vpadd</a> (const uint16x4_t &amp;a, const uint16x4_t &amp;b)</td></tr>
<tr class="separator:af7354b0a019a54faca6951b03d9cf766"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abd6493e8a191146e3455134723c495d1"><td class="memItemLeft" align="right" valign="top">int16x4_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#abd6493e8a191146e3455134723c495d1">vpadd</a> (const int16x4_t &amp;a, const int16x4_t &amp;b)</td></tr>
<tr class="separator:abd6493e8a191146e3455134723c495d1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac025e9eb7cd72f6ef016cb928b51b02d"><td class="memItemLeft" align="right" valign="top">uint32x2_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#ac025e9eb7cd72f6ef016cb928b51b02d">vpadd</a> (const uint32x2_t &amp;a, const uint32x2_t &amp;b)</td></tr>
<tr class="separator:ac025e9eb7cd72f6ef016cb928b51b02d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac061b47e13fa4832ee51b203de487325"><td class="memItemLeft" align="right" valign="top">int32x2_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#ac061b47e13fa4832ee51b203de487325">vpadd</a> (const int32x2_t &amp;a, const int32x2_t &amp;b)</td></tr>
<tr class="separator:ac061b47e13fa4832ee51b203de487325"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adae782aae6d44f1f87f624b31a544c59"><td class="memItemLeft" align="right" valign="top">float32x2_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#adae782aae6d44f1f87f624b31a544c59">vpadd</a> (const float32x2_t &amp;a, const float32x2_t &amp;b)</td></tr>
<tr class="separator:adae782aae6d44f1f87f624b31a544c59"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae7943ea9c1f74dc72c62d4cc3966a459"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#ae7943ea9c1f74dc72c62d4cc3966a459">vstore</a> (uint8_t *ptr, uint8x8_t val)</td></tr>
<tr class="separator:ae7943ea9c1f74dc72c62d4cc3966a459"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a256a55d40b65c0a2a22b3f64045716be"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a256a55d40b65c0a2a22b3f64045716be">vstore</a> (int8_t *ptr, int8x8_t val)</td></tr>
<tr class="separator:a256a55d40b65c0a2a22b3f64045716be"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab2a18e2f73c6066ec4af6ff793dc854c"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#ab2a18e2f73c6066ec4af6ff793dc854c">vstore</a> (uint16_t *ptr, uint16x4_t val)</td></tr>
<tr class="separator:ab2a18e2f73c6066ec4af6ff793dc854c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acbd85567ac69618d6ac0fe06fb72af44"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#acbd85567ac69618d6ac0fe06fb72af44">vstore</a> (int16_t *ptr, int16x4_t val)</td></tr>
<tr class="separator:acbd85567ac69618d6ac0fe06fb72af44"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a65e75ff8f4d05960e50761a5a58dd386"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a65e75ff8f4d05960e50761a5a58dd386">vstore</a> (uint32_t *ptr, uint32x2_t val)</td></tr>
<tr class="separator:a65e75ff8f4d05960e50761a5a58dd386"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a01875212af1a5ab754c818415f8df88d"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a01875212af1a5ab754c818415f8df88d">vstore</a> (int32_t *ptr, int32x2_t val)</td></tr>
<tr class="separator:a01875212af1a5ab754c818415f8df88d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad417a154c619b3568b9eb97fc475a20c"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#ad417a154c619b3568b9eb97fc475a20c">vstore</a> (float *ptr, float32x2_t val)</td></tr>
<tr class="separator:ad417a154c619b3568b9eb97fc475a20c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a23d6ee788a3fdc90cfe7455e6c567aa9"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a23d6ee788a3fdc90cfe7455e6c567aa9">vstore</a> (uint8_t *ptr, uint8x16_t val)</td></tr>
<tr class="separator:a23d6ee788a3fdc90cfe7455e6c567aa9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0a18c21e0fa9aea77c824091f2121f53"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a0a18c21e0fa9aea77c824091f2121f53">vstore</a> (int8_t *ptr, int8x16_t val)</td></tr>
<tr class="separator:a0a18c21e0fa9aea77c824091f2121f53"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a68347843dccc0dda3b8d96400782a1d4"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a68347843dccc0dda3b8d96400782a1d4">vstore</a> (uint16_t *ptr, uint16x8_t val)</td></tr>
<tr class="separator:a68347843dccc0dda3b8d96400782a1d4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aea6948f7d0bf41e8db92807708860a81"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#aea6948f7d0bf41e8db92807708860a81">vstore</a> (int16_t *ptr, int16x8_t val)</td></tr>
<tr class="separator:aea6948f7d0bf41e8db92807708860a81"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a03ba7288457603cf531d82704aae5115"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a03ba7288457603cf531d82704aae5115">vstore</a> (uint32_t *ptr, uint32x4_t val)</td></tr>
<tr class="separator:a03ba7288457603cf531d82704aae5115"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aefc551995598c813e0e9bd5a0a32821b"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#aefc551995598c813e0e9bd5a0a32821b">vstore</a> (int32_t *ptr, int32x4_t val)</td></tr>
<tr class="separator:aefc551995598c813e0e9bd5a0a32821b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9d16581b2d731ab0217ba7bd77b573d8"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a9d16581b2d731ab0217ba7bd77b573d8">vstore</a> (float *ptr, float32x4_t val)</td></tr>
<tr class="separator:a9d16581b2d731ab0217ba7bd77b573d8"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Function Documentation</h2>
<a id="a1894e825a225f3b2013f594cbffdae73"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1894e825a225f3b2013f594cbffdae73">&#9670;&nbsp;</a></span>vadd() <span class="overload">[1/18]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint8x8_t arm_compute::wrapper::vadd </td>
          <td>(</td>
          <td class="paramtype">const uint8x8_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const uint8x8_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="add_8h_source.xhtml#l00039">39</a> of file <a class="el" href="add_8h_source.xhtml">add.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="_n_e_activation_function_detail_8h_source.xhtml#l00140">logistic&lt; T, S &gt;::operator()()</a>.</p>

</div>
</div>
<a id="a7c573cf41e883d4d37bd8dff8fcbd0f2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7c573cf41e883d4d37bd8dff8fcbd0f2">&#9670;&nbsp;</a></span>vadd() <span class="overload">[2/18]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int8x8_t arm_compute::wrapper::vadd </td>
          <td>(</td>
          <td class="paramtype">const int8x8_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int8x8_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="add_8h_source.xhtml#l00040">40</a> of file <a class="el" href="add_8h_source.xhtml">add.h</a>.</p>

</div>
</div>
<a id="a73d9b74710e651e7cdbf4cfafb944d8a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a73d9b74710e651e7cdbf4cfafb944d8a">&#9670;&nbsp;</a></span>vadd() <span class="overload">[3/18]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint16x4_t arm_compute::wrapper::vadd </td>
          <td>(</td>
          <td class="paramtype">const uint16x4_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const uint16x4_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="add_8h_source.xhtml#l00041">41</a> of file <a class="el" href="add_8h_source.xhtml">add.h</a>.</p>

</div>
</div>
<a id="a51ed0d744f6dca340bc175241a2653d4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a51ed0d744f6dca340bc175241a2653d4">&#9670;&nbsp;</a></span>vadd() <span class="overload">[4/18]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int16x4_t arm_compute::wrapper::vadd </td>
          <td>(</td>
          <td class="paramtype">const int16x4_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int16x4_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="add_8h_source.xhtml#l00042">42</a> of file <a class="el" href="add_8h_source.xhtml">add.h</a>.</p>

</div>
</div>
<a id="a1de26ff774cac4d14a9a99760139a379"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1de26ff774cac4d14a9a99760139a379">&#9670;&nbsp;</a></span>vadd() <span class="overload">[5/18]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint32x2_t arm_compute::wrapper::vadd </td>
          <td>(</td>
          <td class="paramtype">const uint32x2_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const uint32x2_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="add_8h_source.xhtml#l00043">43</a> of file <a class="el" href="add_8h_source.xhtml">add.h</a>.</p>

</div>
</div>
<a id="adbc3286703ea68773578b2601a3fd797"></a>
<h2 class="memtitle"><span class="permalink"><a href="#adbc3286703ea68773578b2601a3fd797">&#9670;&nbsp;</a></span>vadd() <span class="overload">[6/18]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int32x2_t arm_compute::wrapper::vadd </td>
          <td>(</td>
          <td class="paramtype">const int32x2_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int32x2_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="add_8h_source.xhtml#l00044">44</a> of file <a class="el" href="add_8h_source.xhtml">add.h</a>.</p>

</div>
</div>
<a id="a44649f1c855e68e4cab5f7f72daeb30b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a44649f1c855e68e4cab5f7f72daeb30b">&#9670;&nbsp;</a></span>vadd() <span class="overload">[7/18]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint64x1_t arm_compute::wrapper::vadd </td>
          <td>(</td>
          <td class="paramtype">const uint64x1_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const uint64x1_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="add_8h_source.xhtml#l00045">45</a> of file <a class="el" href="add_8h_source.xhtml">add.h</a>.</p>

</div>
</div>
<a id="aa295c4e77f9e2ccd31f0fa815a9e4231"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa295c4e77f9e2ccd31f0fa815a9e4231">&#9670;&nbsp;</a></span>vadd() <span class="overload">[8/18]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int64x1_t arm_compute::wrapper::vadd </td>
          <td>(</td>
          <td class="paramtype">const int64x1_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int64x1_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="add_8h_source.xhtml#l00046">46</a> of file <a class="el" href="add_8h_source.xhtml">add.h</a>.</p>

</div>
</div>
<a id="a04549b1ddb03008ac1c0ff3fc18ff335"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a04549b1ddb03008ac1c0ff3fc18ff335">&#9670;&nbsp;</a></span>vadd() <span class="overload">[9/18]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">float32x2_t arm_compute::wrapper::vadd </td>
          <td>(</td>
          <td class="paramtype">const float32x2_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const float32x2_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="add_8h_source.xhtml#l00047">47</a> of file <a class="el" href="add_8h_source.xhtml">add.h</a>.</p>

</div>
</div>
<a id="a08ed369986c867b850a74635764e3764"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a08ed369986c867b850a74635764e3764">&#9670;&nbsp;</a></span>vadd() <span class="overload">[10/18]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint8x16_t arm_compute::wrapper::vadd </td>
          <td>(</td>
          <td class="paramtype">const uint8x16_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const uint8x16_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="add_8h_source.xhtml#l00052">52</a> of file <a class="el" href="add_8h_source.xhtml">add.h</a>.</p>

</div>
</div>
<a id="a00611d18ac6548c52d5f3e5eec52f3fc"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a00611d18ac6548c52d5f3e5eec52f3fc">&#9670;&nbsp;</a></span>vadd() <span class="overload">[11/18]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int8x16_t arm_compute::wrapper::vadd </td>
          <td>(</td>
          <td class="paramtype">const int8x16_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int8x16_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="add_8h_source.xhtml#l00053">53</a> of file <a class="el" href="add_8h_source.xhtml">add.h</a>.</p>

</div>
</div>
<a id="a001774f1457ef953dce3cbfd7ca3a720"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a001774f1457ef953dce3cbfd7ca3a720">&#9670;&nbsp;</a></span>vadd() <span class="overload">[12/18]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint16x8_t arm_compute::wrapper::vadd </td>
          <td>(</td>
          <td class="paramtype">const uint16x8_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const uint16x8_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="add_8h_source.xhtml#l00054">54</a> of file <a class="el" href="add_8h_source.xhtml">add.h</a>.</p>

</div>
</div>
<a id="a7b3548ff67e64b1b559f005728643115"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7b3548ff67e64b1b559f005728643115">&#9670;&nbsp;</a></span>vadd() <span class="overload">[13/18]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int16x8_t arm_compute::wrapper::vadd </td>
          <td>(</td>
          <td class="paramtype">const int16x8_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int16x8_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="add_8h_source.xhtml#l00055">55</a> of file <a class="el" href="add_8h_source.xhtml">add.h</a>.</p>

</div>
</div>
<a id="a38f13009919fa0bb1bf096aca2fc2b52"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a38f13009919fa0bb1bf096aca2fc2b52">&#9670;&nbsp;</a></span>vadd() <span class="overload">[14/18]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint32x4_t arm_compute::wrapper::vadd </td>
          <td>(</td>
          <td class="paramtype">const uint32x4_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const uint32x4_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="add_8h_source.xhtml#l00056">56</a> of file <a class="el" href="add_8h_source.xhtml">add.h</a>.</p>

</div>
</div>
<a id="ae6e61403aa3b1ea42cb8623235a060d2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae6e61403aa3b1ea42cb8623235a060d2">&#9670;&nbsp;</a></span>vadd() <span class="overload">[15/18]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int32x4_t arm_compute::wrapper::vadd </td>
          <td>(</td>
          <td class="paramtype">const int32x4_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int32x4_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="add_8h_source.xhtml#l00057">57</a> of file <a class="el" href="add_8h_source.xhtml">add.h</a>.</p>

</div>
</div>
<a id="a4be8554b097bb191efca07c064500b0a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4be8554b097bb191efca07c064500b0a">&#9670;&nbsp;</a></span>vadd() <span class="overload">[16/18]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint64x2_t arm_compute::wrapper::vadd </td>
          <td>(</td>
          <td class="paramtype">const uint64x2_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const uint64x2_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="add_8h_source.xhtml#l00058">58</a> of file <a class="el" href="add_8h_source.xhtml">add.h</a>.</p>

</div>
</div>
<a id="a85bff4b042de6d354194fd5faec611b2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a85bff4b042de6d354194fd5faec611b2">&#9670;&nbsp;</a></span>vadd() <span class="overload">[17/18]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int64x2_t arm_compute::wrapper::vadd </td>
          <td>(</td>
          <td class="paramtype">const int64x2_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int64x2_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="add_8h_source.xhtml#l00059">59</a> of file <a class="el" href="add_8h_source.xhtml">add.h</a>.</p>

</div>
</div>
<a id="a5facaa0c056dc73dfa6a49cde91240c4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5facaa0c056dc73dfa6a49cde91240c4">&#9670;&nbsp;</a></span>vadd() <span class="overload">[18/18]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">float32x4_t arm_compute::wrapper::vadd </td>
          <td>(</td>
          <td class="paramtype">const float32x4_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const float32x4_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="add_8h_source.xhtml#l00060">60</a> of file <a class="el" href="add_8h_source.xhtml">add.h</a>.</p>

</div>
</div>
<a id="ac071623f14587f7cc6c4aea757d4378b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac071623f14587f7cc6c4aea757d4378b">&#9670;&nbsp;</a></span>vand() <span class="overload">[1/16]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint8x8_t arm_compute::wrapper::vand </td>
          <td>(</td>
          <td class="paramtype">const uint8x8_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const uint8x8_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="and_8h_source.xhtml#l00039">39</a> of file <a class="el" href="and_8h_source.xhtml">and.h</a>.</p>

</div>
</div>
<a id="ace696b022d783c4a3e84f6aa23b9ec72"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ace696b022d783c4a3e84f6aa23b9ec72">&#9670;&nbsp;</a></span>vand() <span class="overload">[2/16]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int8x8_t arm_compute::wrapper::vand </td>
          <td>(</td>
          <td class="paramtype">const int8x8_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int8x8_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="and_8h_source.xhtml#l00040">40</a> of file <a class="el" href="and_8h_source.xhtml">and.h</a>.</p>

</div>
</div>
<a id="a364a30327f38b955216af9b5ac4367db"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a364a30327f38b955216af9b5ac4367db">&#9670;&nbsp;</a></span>vand() <span class="overload">[3/16]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint16x4_t arm_compute::wrapper::vand </td>
          <td>(</td>
          <td class="paramtype">const uint16x4_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const uint16x4_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="and_8h_source.xhtml#l00041">41</a> of file <a class="el" href="and_8h_source.xhtml">and.h</a>.</p>

</div>
</div>
<a id="a5bfe76fc6cc188b7e32c6944772f7125"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5bfe76fc6cc188b7e32c6944772f7125">&#9670;&nbsp;</a></span>vand() <span class="overload">[4/16]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int16x4_t arm_compute::wrapper::vand </td>
          <td>(</td>
          <td class="paramtype">const int16x4_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int16x4_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="and_8h_source.xhtml#l00042">42</a> of file <a class="el" href="and_8h_source.xhtml">and.h</a>.</p>

</div>
</div>
<a id="a17104b7f34998fcd36ad45f0594678ab"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a17104b7f34998fcd36ad45f0594678ab">&#9670;&nbsp;</a></span>vand() <span class="overload">[5/16]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint32x2_t arm_compute::wrapper::vand </td>
          <td>(</td>
          <td class="paramtype">const uint32x2_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const uint32x2_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="and_8h_source.xhtml#l00043">43</a> of file <a class="el" href="and_8h_source.xhtml">and.h</a>.</p>

</div>
</div>
<a id="aa12949a2a2d6873da017181f7941232f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa12949a2a2d6873da017181f7941232f">&#9670;&nbsp;</a></span>vand() <span class="overload">[6/16]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int32x2_t arm_compute::wrapper::vand </td>
          <td>(</td>
          <td class="paramtype">const int32x2_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int32x2_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="and_8h_source.xhtml#l00044">44</a> of file <a class="el" href="and_8h_source.xhtml">and.h</a>.</p>

</div>
</div>
<a id="a88f7ebc42b23820a9ba0b8ac05d70d37"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a88f7ebc42b23820a9ba0b8ac05d70d37">&#9670;&nbsp;</a></span>vand() <span class="overload">[7/16]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint64x1_t arm_compute::wrapper::vand </td>
          <td>(</td>
          <td class="paramtype">const uint64x1_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const uint64x1_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="and_8h_source.xhtml#l00045">45</a> of file <a class="el" href="and_8h_source.xhtml">and.h</a>.</p>

</div>
</div>
<a id="a2865027ccc7e291a55d03e18a80f2341"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2865027ccc7e291a55d03e18a80f2341">&#9670;&nbsp;</a></span>vand() <span class="overload">[8/16]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int64x1_t arm_compute::wrapper::vand </td>
          <td>(</td>
          <td class="paramtype">const int64x1_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int64x1_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="and_8h_source.xhtml#l00046">46</a> of file <a class="el" href="and_8h_source.xhtml">and.h</a>.</p>

</div>
</div>
<a id="a42a53b1fb8523ad84bb686cf83b2eeff"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a42a53b1fb8523ad84bb686cf83b2eeff">&#9670;&nbsp;</a></span>vand() <span class="overload">[9/16]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint8x16_t arm_compute::wrapper::vand </td>
          <td>(</td>
          <td class="paramtype">const uint8x16_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const uint8x16_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="and_8h_source.xhtml#l00048">48</a> of file <a class="el" href="and_8h_source.xhtml">and.h</a>.</p>

</div>
</div>
<a id="a09aa0f0336703a4ac289525882f81bc5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a09aa0f0336703a4ac289525882f81bc5">&#9670;&nbsp;</a></span>vand() <span class="overload">[10/16]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int8x16_t arm_compute::wrapper::vand </td>
          <td>(</td>
          <td class="paramtype">const int8x16_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int8x16_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="and_8h_source.xhtml#l00049">49</a> of file <a class="el" href="and_8h_source.xhtml">and.h</a>.</p>

</div>
</div>
<a id="ac36121fb64569e4d6b12eea9473e41a3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac36121fb64569e4d6b12eea9473e41a3">&#9670;&nbsp;</a></span>vand() <span class="overload">[11/16]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint16x8_t arm_compute::wrapper::vand </td>
          <td>(</td>
          <td class="paramtype">const uint16x8_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const uint16x8_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="and_8h_source.xhtml#l00050">50</a> of file <a class="el" href="and_8h_source.xhtml">and.h</a>.</p>

</div>
</div>
<a id="a9601217868077e3ecf9c2dab5e8d7da2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9601217868077e3ecf9c2dab5e8d7da2">&#9670;&nbsp;</a></span>vand() <span class="overload">[12/16]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int16x8_t arm_compute::wrapper::vand </td>
          <td>(</td>
          <td class="paramtype">const int16x8_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int16x8_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="and_8h_source.xhtml#l00051">51</a> of file <a class="el" href="and_8h_source.xhtml">and.h</a>.</p>

</div>
</div>
<a id="a770a458f188ed6e66be390082eca8aed"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a770a458f188ed6e66be390082eca8aed">&#9670;&nbsp;</a></span>vand() <span class="overload">[13/16]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint32x4_t arm_compute::wrapper::vand </td>
          <td>(</td>
          <td class="paramtype">const uint32x4_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const uint32x4_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="and_8h_source.xhtml#l00052">52</a> of file <a class="el" href="and_8h_source.xhtml">and.h</a>.</p>

</div>
</div>
<a id="a1f5ad185828729587ebd0356cd0ca275"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1f5ad185828729587ebd0356cd0ca275">&#9670;&nbsp;</a></span>vand() <span class="overload">[14/16]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int32x4_t arm_compute::wrapper::vand </td>
          <td>(</td>
          <td class="paramtype">const int32x4_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int32x4_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="and_8h_source.xhtml#l00053">53</a> of file <a class="el" href="and_8h_source.xhtml">and.h</a>.</p>

</div>
</div>
<a id="a2913668b4791bdc393393ca60a078a7f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2913668b4791bdc393393ca60a078a7f">&#9670;&nbsp;</a></span>vand() <span class="overload">[15/16]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint64x2_t arm_compute::wrapper::vand </td>
          <td>(</td>
          <td class="paramtype">const uint64x2_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const uint64x2_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="and_8h_source.xhtml#l00054">54</a> of file <a class="el" href="and_8h_source.xhtml">and.h</a>.</p>

</div>
</div>
<a id="ae36ea08250992deca7c68f523fb95842"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae36ea08250992deca7c68f523fb95842">&#9670;&nbsp;</a></span>vand() <span class="overload">[16/16]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int64x2_t arm_compute::wrapper::vand </td>
          <td>(</td>
          <td class="paramtype">const int64x2_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int64x2_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="and_8h_source.xhtml#l00055">55</a> of file <a class="el" href="and_8h_source.xhtml">and.h</a>.</p>

</div>
</div>
<a id="a39e87435be178fba49b76f49426ef873"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a39e87435be178fba49b76f49426ef873">&#9670;&nbsp;</a></span>vdup_n() <span class="overload">[1/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint8x8_t arm_compute::wrapper::vdup_n </td>
          <td>(</td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>value</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structarm__compute_1_1wrapper_1_1traits_1_1vector__64__tag.xhtml">traits::vector_64_tag</a>&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="dup__n_8h_source.xhtml#l00041">41</a> of file <a class="el" href="dup__n_8h_source.xhtml">dup_n.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="_n_e_activation_function_detail_8h_source.xhtml#l00192">brelu&lt; T, S &gt;::brelu()</a>, <a class="el" href="_n_e_activation_function_detail_8h_source.xhtml#l00070">linear&lt; T, S &gt;::linear()</a>, and <a class="el" href="_n_e_activation_function_detail_8h_source.xhtml#l00225">lubrelu&lt; T, S &gt;::lubrelu()</a>.</p>

</div>
</div>
<a id="ae96f63b38824187da108a09448e7b7f1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae96f63b38824187da108a09448e7b7f1">&#9670;&nbsp;</a></span>vdup_n() <span class="overload">[2/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int8x8_t arm_compute::wrapper::vdup_n </td>
          <td>(</td>
          <td class="paramtype">int8_t&#160;</td>
          <td class="paramname"><em>value</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structarm__compute_1_1wrapper_1_1traits_1_1vector__64__tag.xhtml">traits::vector_64_tag</a>&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="dup__n_8h_source.xhtml#l00042">42</a> of file <a class="el" href="dup__n_8h_source.xhtml">dup_n.h</a>.</p>

</div>
</div>
<a id="a2ddcfbfe730c340aec577f57ccf389da"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2ddcfbfe730c340aec577f57ccf389da">&#9670;&nbsp;</a></span>vdup_n() <span class="overload">[3/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint16x4_t arm_compute::wrapper::vdup_n </td>
          <td>(</td>
          <td class="paramtype">uint16_t&#160;</td>
          <td class="paramname"><em>value</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structarm__compute_1_1wrapper_1_1traits_1_1vector__64__tag.xhtml">traits::vector_64_tag</a>&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="dup__n_8h_source.xhtml#l00043">43</a> of file <a class="el" href="dup__n_8h_source.xhtml">dup_n.h</a>.</p>

</div>
</div>
<a id="afa30db793e7c1fd082609ab7a6d5f165"></a>
<h2 class="memtitle"><span class="permalink"><a href="#afa30db793e7c1fd082609ab7a6d5f165">&#9670;&nbsp;</a></span>vdup_n() <span class="overload">[4/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int16x4_t arm_compute::wrapper::vdup_n </td>
          <td>(</td>
          <td class="paramtype">int16_t&#160;</td>
          <td class="paramname"><em>value</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structarm__compute_1_1wrapper_1_1traits_1_1vector__64__tag.xhtml">traits::vector_64_tag</a>&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="dup__n_8h_source.xhtml#l00044">44</a> of file <a class="el" href="dup__n_8h_source.xhtml">dup_n.h</a>.</p>

</div>
</div>
<a id="ab7a046ee9be293d9b823ddaed7138ea1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab7a046ee9be293d9b823ddaed7138ea1">&#9670;&nbsp;</a></span>vdup_n() <span class="overload">[5/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint32x2_t arm_compute::wrapper::vdup_n </td>
          <td>(</td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>value</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structarm__compute_1_1wrapper_1_1traits_1_1vector__64__tag.xhtml">traits::vector_64_tag</a>&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="dup__n_8h_source.xhtml#l00045">45</a> of file <a class="el" href="dup__n_8h_source.xhtml">dup_n.h</a>.</p>

</div>
</div>
<a id="a3fb0be6f60ff8e0f3df96993f7227aac"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3fb0be6f60ff8e0f3df96993f7227aac">&#9670;&nbsp;</a></span>vdup_n() <span class="overload">[6/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int32x2_t arm_compute::wrapper::vdup_n </td>
          <td>(</td>
          <td class="paramtype">int32_t&#160;</td>
          <td class="paramname"><em>value</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structarm__compute_1_1wrapper_1_1traits_1_1vector__64__tag.xhtml">traits::vector_64_tag</a>&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="dup__n_8h_source.xhtml#l00046">46</a> of file <a class="el" href="dup__n_8h_source.xhtml">dup_n.h</a>.</p>

</div>
</div>
<a id="aae63f6b8b4a2ec47485921709b85563f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aae63f6b8b4a2ec47485921709b85563f">&#9670;&nbsp;</a></span>vdup_n() <span class="overload">[7/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">float32x2_t arm_compute::wrapper::vdup_n </td>
          <td>(</td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>value</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structarm__compute_1_1wrapper_1_1traits_1_1vector__64__tag.xhtml">traits::vector_64_tag</a>&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="dup__n_8h_source.xhtml#l00047">47</a> of file <a class="el" href="dup__n_8h_source.xhtml">dup_n.h</a>.</p>

</div>
</div>
<a id="ab38dbdbc1cddb9806cd5eb7c8e5369bf"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab38dbdbc1cddb9806cd5eb7c8e5369bf">&#9670;&nbsp;</a></span>vdup_n() <span class="overload">[8/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint8x16_t arm_compute::wrapper::vdup_n </td>
          <td>(</td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>value</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structarm__compute_1_1wrapper_1_1traits_1_1vector__128__tag.xhtml">traits::vector_128_tag</a>&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="dup__n_8h_source.xhtml#l00052">52</a> of file <a class="el" href="dup__n_8h_source.xhtml">dup_n.h</a>.</p>

</div>
</div>
<a id="a0140b10717610c7716b37e0706bef65c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0140b10717610c7716b37e0706bef65c">&#9670;&nbsp;</a></span>vdup_n() <span class="overload">[9/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int8x16_t arm_compute::wrapper::vdup_n </td>
          <td>(</td>
          <td class="paramtype">int8_t&#160;</td>
          <td class="paramname"><em>value</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structarm__compute_1_1wrapper_1_1traits_1_1vector__128__tag.xhtml">traits::vector_128_tag</a>&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="dup__n_8h_source.xhtml#l00053">53</a> of file <a class="el" href="dup__n_8h_source.xhtml">dup_n.h</a>.</p>

</div>
</div>
<a id="ac31dce4d78e068f2d10c266685de46cc"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac31dce4d78e068f2d10c266685de46cc">&#9670;&nbsp;</a></span>vdup_n() <span class="overload">[10/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint16x8_t arm_compute::wrapper::vdup_n </td>
          <td>(</td>
          <td class="paramtype">uint16_t&#160;</td>
          <td class="paramname"><em>value</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structarm__compute_1_1wrapper_1_1traits_1_1vector__128__tag.xhtml">traits::vector_128_tag</a>&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="dup__n_8h_source.xhtml#l00054">54</a> of file <a class="el" href="dup__n_8h_source.xhtml">dup_n.h</a>.</p>

</div>
</div>
<a id="a138a0ca63e4bfb6e81326b7f29f9f26f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a138a0ca63e4bfb6e81326b7f29f9f26f">&#9670;&nbsp;</a></span>vdup_n() <span class="overload">[11/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int16x8_t arm_compute::wrapper::vdup_n </td>
          <td>(</td>
          <td class="paramtype">int16_t&#160;</td>
          <td class="paramname"><em>value</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structarm__compute_1_1wrapper_1_1traits_1_1vector__128__tag.xhtml">traits::vector_128_tag</a>&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="dup__n_8h_source.xhtml#l00055">55</a> of file <a class="el" href="dup__n_8h_source.xhtml">dup_n.h</a>.</p>

</div>
</div>
<a id="a5cab0757ae9983d6f81120e1eeb0d495"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5cab0757ae9983d6f81120e1eeb0d495">&#9670;&nbsp;</a></span>vdup_n() <span class="overload">[12/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint32x4_t arm_compute::wrapper::vdup_n </td>
          <td>(</td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>value</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structarm__compute_1_1wrapper_1_1traits_1_1vector__128__tag.xhtml">traits::vector_128_tag</a>&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="dup__n_8h_source.xhtml#l00056">56</a> of file <a class="el" href="dup__n_8h_source.xhtml">dup_n.h</a>.</p>

</div>
</div>
<a id="a1e4d95343b6703aa6502310fc041085d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1e4d95343b6703aa6502310fc041085d">&#9670;&nbsp;</a></span>vdup_n() <span class="overload">[13/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int32x4_t arm_compute::wrapper::vdup_n </td>
          <td>(</td>
          <td class="paramtype">int32_t&#160;</td>
          <td class="paramname"><em>value</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structarm__compute_1_1wrapper_1_1traits_1_1vector__128__tag.xhtml">traits::vector_128_tag</a>&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="dup__n_8h_source.xhtml#l00057">57</a> of file <a class="el" href="dup__n_8h_source.xhtml">dup_n.h</a>.</p>

</div>
</div>
<a id="a1d78cef5ffacdd18e233f2911fcaf3cc"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1d78cef5ffacdd18e233f2911fcaf3cc">&#9670;&nbsp;</a></span>vdup_n() <span class="overload">[14/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">float32x4_t arm_compute::wrapper::vdup_n </td>
          <td>(</td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>value</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structarm__compute_1_1wrapper_1_1traits_1_1vector__128__tag.xhtml">traits::vector_128_tag</a>&#160;</td>
          <td class="paramname">&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="dup__n_8h_source.xhtml#l00058">58</a> of file <a class="el" href="dup__n_8h_source.xhtml">dup_n.h</a>.</p>

</div>
</div>
<a id="a3d35fe714076b40450ba6ba870fae322"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3d35fe714076b40450ba6ba870fae322">&#9670;&nbsp;</a></span>vexpq()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">float32x4_t arm_compute::wrapper::vexpq </td>
          <td>(</td>
          <td class="paramtype">const float32x4_t &amp;&#160;</td>
          <td class="paramname"><em>a</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="exp_8h_source.xhtml#l00040">40</a> of file <a class="el" href="exp_8h_source.xhtml">exp.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="_n_e_activation_function_detail_8h_source.xhtml#l00140">logistic&lt; T, S &gt;::operator()()</a>.</p>

</div>
</div>
<a id="a95ee388aa7c5bccab918235dc538a6b3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a95ee388aa7c5bccab918235dc538a6b3">&#9670;&nbsp;</a></span>vgethigh() <span class="overload">[1/7]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint8x8_t arm_compute::wrapper::vgethigh </td>
          <td>(</td>
          <td class="paramtype">const uint8x16_t&#160;</td>
          <td class="paramname"><em>val</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="gethigh_8h_source.xhtml#l00039">39</a> of file <a class="el" href="gethigh_8h_source.xhtml">gethigh.h</a>.</p>

</div>
</div>
<a id="ac9c024a301326584e832c4a48504b8bf"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac9c024a301326584e832c4a48504b8bf">&#9670;&nbsp;</a></span>vgethigh() <span class="overload">[2/7]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int8x8_t arm_compute::wrapper::vgethigh </td>
          <td>(</td>
          <td class="paramtype">const int8x16_t&#160;</td>
          <td class="paramname"><em>val</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="gethigh_8h_source.xhtml#l00040">40</a> of file <a class="el" href="gethigh_8h_source.xhtml">gethigh.h</a>.</p>

</div>
</div>
<a id="afbcf39b840489f643bc83778d43f6335"></a>
<h2 class="memtitle"><span class="permalink"><a href="#afbcf39b840489f643bc83778d43f6335">&#9670;&nbsp;</a></span>vgethigh() <span class="overload">[3/7]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint16x4_t arm_compute::wrapper::vgethigh </td>
          <td>(</td>
          <td class="paramtype">const uint16x8_t&#160;</td>
          <td class="paramname"><em>val</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="gethigh_8h_source.xhtml#l00041">41</a> of file <a class="el" href="gethigh_8h_source.xhtml">gethigh.h</a>.</p>

</div>
</div>
<a id="a4bb43c0a3ad727d1ee1af90103a8829b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4bb43c0a3ad727d1ee1af90103a8829b">&#9670;&nbsp;</a></span>vgethigh() <span class="overload">[4/7]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int16x4_t arm_compute::wrapper::vgethigh </td>
          <td>(</td>
          <td class="paramtype">const int16x8_t&#160;</td>
          <td class="paramname"><em>val</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="gethigh_8h_source.xhtml#l00042">42</a> of file <a class="el" href="gethigh_8h_source.xhtml">gethigh.h</a>.</p>

</div>
</div>
<a id="ab2f8b38aa056a162e85852f0c6761289"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab2f8b38aa056a162e85852f0c6761289">&#9670;&nbsp;</a></span>vgethigh() <span class="overload">[5/7]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint32x2_t arm_compute::wrapper::vgethigh </td>
          <td>(</td>
          <td class="paramtype">const uint32x4_t&#160;</td>
          <td class="paramname"><em>val</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="gethigh_8h_source.xhtml#l00043">43</a> of file <a class="el" href="gethigh_8h_source.xhtml">gethigh.h</a>.</p>

</div>
</div>
<a id="afd21e55cfb947d64570a61c1faf5ecc6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#afd21e55cfb947d64570a61c1faf5ecc6">&#9670;&nbsp;</a></span>vgethigh() <span class="overload">[6/7]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int32x2_t arm_compute::wrapper::vgethigh </td>
          <td>(</td>
          <td class="paramtype">const int32x4_t&#160;</td>
          <td class="paramname"><em>val</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="gethigh_8h_source.xhtml#l00044">44</a> of file <a class="el" href="gethigh_8h_source.xhtml">gethigh.h</a>.</p>

</div>
</div>
<a id="a141bed2170a24f4fa5ec39a7c19d5d61"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a141bed2170a24f4fa5ec39a7c19d5d61">&#9670;&nbsp;</a></span>vgethigh() <span class="overload">[7/7]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">float32x2_t arm_compute::wrapper::vgethigh </td>
          <td>(</td>
          <td class="paramtype">const float32x4_t&#160;</td>
          <td class="paramname"><em>val</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="gethigh_8h_source.xhtml#l00045">45</a> of file <a class="el" href="gethigh_8h_source.xhtml">gethigh.h</a>.</p>

</div>
</div>
<a id="a7942760521e166be06dd2fb44a7dcf25"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7942760521e166be06dd2fb44a7dcf25">&#9670;&nbsp;</a></span>vgetlane() <span class="overload">[1/7]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint8_t arm_compute::wrapper::vgetlane </td>
          <td>(</td>
          <td class="paramtype">const uint8x8_t&#160;</td>
          <td class="paramname"><em>vector</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int&#160;</td>
          <td class="paramname"><em>lane</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="getlane_8h_source.xhtml#l00091">91</a> of file <a class="el" href="getlane_8h_source.xhtml">getlane.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;{                                                          \</div></div><!-- fragment -->
</div>
</div>
<a id="a6d21ff1bd5ffea4299349bce82002aa2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6d21ff1bd5ffea4299349bce82002aa2">&#9670;&nbsp;</a></span>vgetlane() <span class="overload">[2/7]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int8_t arm_compute::wrapper::vgetlane </td>
          <td>(</td>
          <td class="paramtype">const int8x8_t&#160;</td>
          <td class="paramname"><em>vector</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int&#160;</td>
          <td class="paramname"><em>lane</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="getlane_8h_source.xhtml#l00092">92</a> of file <a class="el" href="getlane_8h_source.xhtml">getlane.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;{                                                          \</div></div><!-- fragment -->
</div>
</div>
<a id="ac09ddece1e3391bb56fb3d3d0131ecdf"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac09ddece1e3391bb56fb3d3d0131ecdf">&#9670;&nbsp;</a></span>vgetlane() <span class="overload">[3/7]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint16_t arm_compute::wrapper::vgetlane </td>
          <td>(</td>
          <td class="paramtype">const uint16x4_t&#160;</td>
          <td class="paramname"><em>vector</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int&#160;</td>
          <td class="paramname"><em>lane</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="getlane_8h_source.xhtml#l00093">93</a> of file <a class="el" href="getlane_8h_source.xhtml">getlane.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;{                                                          \</div></div><!-- fragment -->
</div>
</div>
<a id="afdb5b5bd6639c3f4ae13eda87f565228"></a>
<h2 class="memtitle"><span class="permalink"><a href="#afdb5b5bd6639c3f4ae13eda87f565228">&#9670;&nbsp;</a></span>vgetlane() <span class="overload">[4/7]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int16_t arm_compute::wrapper::vgetlane </td>
          <td>(</td>
          <td class="paramtype">const int16x4_t&#160;</td>
          <td class="paramname"><em>vector</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int&#160;</td>
          <td class="paramname"><em>lane</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="getlane_8h_source.xhtml#l00094">94</a> of file <a class="el" href="getlane_8h_source.xhtml">getlane.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;{                                                          \</div></div><!-- fragment -->
</div>
</div>
<a id="ae167e6fe177fb9816f466ad9c422ff8a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae167e6fe177fb9816f466ad9c422ff8a">&#9670;&nbsp;</a></span>vgetlane() <span class="overload">[5/7]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint32_t arm_compute::wrapper::vgetlane </td>
          <td>(</td>
          <td class="paramtype">const uint32x2_t&#160;</td>
          <td class="paramname"><em>vector</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int&#160;</td>
          <td class="paramname"><em>lane</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="getlane_8h_source.xhtml#l00095">95</a> of file <a class="el" href="getlane_8h_source.xhtml">getlane.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;{                                                          \</div></div><!-- fragment -->
</div>
</div>
<a id="add649a246ec5b87317cbc55d6b870ab7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#add649a246ec5b87317cbc55d6b870ab7">&#9670;&nbsp;</a></span>vgetlane() <span class="overload">[6/7]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int32_t arm_compute::wrapper::vgetlane </td>
          <td>(</td>
          <td class="paramtype">const int32x2_t&#160;</td>
          <td class="paramname"><em>vector</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int&#160;</td>
          <td class="paramname"><em>lane</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="getlane_8h_source.xhtml#l00096">96</a> of file <a class="el" href="getlane_8h_source.xhtml">getlane.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;{                                                          \</div></div><!-- fragment -->
</div>
</div>
<a id="af05d7ba1b1ed3b05a92144feb0616611"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af05d7ba1b1ed3b05a92144feb0616611">&#9670;&nbsp;</a></span>vgetlane() <span class="overload">[7/7]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">float arm_compute::wrapper::vgetlane </td>
          <td>(</td>
          <td class="paramtype">const float32x2_t&#160;</td>
          <td class="paramname"><em>vector</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int&#160;</td>
          <td class="paramname"><em>lane</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="getlane_8h_source.xhtml#l00097">97</a> of file <a class="el" href="getlane_8h_source.xhtml">getlane.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;{                                                          \</div></div><!-- fragment -->
</div>
</div>
<a id="a2902775707bc7bf7d6da1bda1cc15783"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2902775707bc7bf7d6da1bda1cc15783">&#9670;&nbsp;</a></span>vgetlow() <span class="overload">[1/7]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint8x8_t arm_compute::wrapper::vgetlow </td>
          <td>(</td>
          <td class="paramtype">const uint8x16_t&#160;</td>
          <td class="paramname"><em>val</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="getlow_8h_source.xhtml#l00039">39</a> of file <a class="el" href="getlow_8h_source.xhtml">getlow.h</a>.</p>

</div>
</div>
<a id="a6b68d30ce46c4c3194066823acacd442"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6b68d30ce46c4c3194066823acacd442">&#9670;&nbsp;</a></span>vgetlow() <span class="overload">[2/7]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int8x8_t arm_compute::wrapper::vgetlow </td>
          <td>(</td>
          <td class="paramtype">const int8x16_t&#160;</td>
          <td class="paramname"><em>val</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="getlow_8h_source.xhtml#l00040">40</a> of file <a class="el" href="getlow_8h_source.xhtml">getlow.h</a>.</p>

</div>
</div>
<a id="ac9acd645854ecc2a492de10a5999034d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac9acd645854ecc2a492de10a5999034d">&#9670;&nbsp;</a></span>vgetlow() <span class="overload">[3/7]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint16x4_t arm_compute::wrapper::vgetlow </td>
          <td>(</td>
          <td class="paramtype">const uint16x8_t&#160;</td>
          <td class="paramname"><em>val</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="getlow_8h_source.xhtml#l00041">41</a> of file <a class="el" href="getlow_8h_source.xhtml">getlow.h</a>.</p>

</div>
</div>
<a id="afd2ae064582b5d27d7f3df420fef03eb"></a>
<h2 class="memtitle"><span class="permalink"><a href="#afd2ae064582b5d27d7f3df420fef03eb">&#9670;&nbsp;</a></span>vgetlow() <span class="overload">[4/7]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int16x4_t arm_compute::wrapper::vgetlow </td>
          <td>(</td>
          <td class="paramtype">const int16x8_t&#160;</td>
          <td class="paramname"><em>val</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="getlow_8h_source.xhtml#l00042">42</a> of file <a class="el" href="getlow_8h_source.xhtml">getlow.h</a>.</p>

</div>
</div>
<a id="a274a067e78d261385119acb19ebc7053"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a274a067e78d261385119acb19ebc7053">&#9670;&nbsp;</a></span>vgetlow() <span class="overload">[5/7]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint32x2_t arm_compute::wrapper::vgetlow </td>
          <td>(</td>
          <td class="paramtype">const uint32x4_t&#160;</td>
          <td class="paramname"><em>val</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="getlow_8h_source.xhtml#l00043">43</a> of file <a class="el" href="getlow_8h_source.xhtml">getlow.h</a>.</p>

</div>
</div>
<a id="a6a958c1d3f88b393fc31f68d19f1a718"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6a958c1d3f88b393fc31f68d19f1a718">&#9670;&nbsp;</a></span>vgetlow() <span class="overload">[6/7]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int32x2_t arm_compute::wrapper::vgetlow </td>
          <td>(</td>
          <td class="paramtype">const int32x4_t&#160;</td>
          <td class="paramname"><em>val</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="getlow_8h_source.xhtml#l00044">44</a> of file <a class="el" href="getlow_8h_source.xhtml">getlow.h</a>.</p>

</div>
</div>
<a id="a745d994b7c62f971cd7023839b784ff2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a745d994b7c62f971cd7023839b784ff2">&#9670;&nbsp;</a></span>vgetlow() <span class="overload">[7/7]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">float32x2_t arm_compute::wrapper::vgetlow </td>
          <td>(</td>
          <td class="paramtype">const float32x4_t&#160;</td>
          <td class="paramname"><em>val</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="getlow_8h_source.xhtml#l00045">45</a> of file <a class="el" href="getlow_8h_source.xhtml">getlow.h</a>.</p>

</div>
</div>
<a id="afd38fe23c36b3beae2328e48a52201f4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#afd38fe23c36b3beae2328e48a52201f4">&#9670;&nbsp;</a></span>vgetqlane() <span class="overload">[1/7]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint8_t arm_compute::wrapper::vgetqlane </td>
          <td>(</td>
          <td class="paramtype">const uint8x16_t&#160;</td>
          <td class="paramname"><em>vector</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int&#160;</td>
          <td class="paramname"><em>lane</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="getlane_8h_source.xhtml#l00188">188</a> of file <a class="el" href="getlane_8h_source.xhtml">getlane.h</a>.</p>

</div>
</div>
<a id="a1bd18d87a40b79527b49347f35d2c9b5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1bd18d87a40b79527b49347f35d2c9b5">&#9670;&nbsp;</a></span>vgetqlane() <span class="overload">[2/7]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int8_t arm_compute::wrapper::vgetqlane </td>
          <td>(</td>
          <td class="paramtype">const int8x16_t&#160;</td>
          <td class="paramname"><em>vector</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int&#160;</td>
          <td class="paramname"><em>lane</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="getlane_8h_source.xhtml#l00189">189</a> of file <a class="el" href="getlane_8h_source.xhtml">getlane.h</a>.</p>

</div>
</div>
<a id="a9dab805d3cfaef1a075d41f47fc3a6bb"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9dab805d3cfaef1a075d41f47fc3a6bb">&#9670;&nbsp;</a></span>vgetqlane() <span class="overload">[3/7]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint16_t arm_compute::wrapper::vgetqlane </td>
          <td>(</td>
          <td class="paramtype">const uint16x8_t&#160;</td>
          <td class="paramname"><em>vector</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int&#160;</td>
          <td class="paramname"><em>lane</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="getlane_8h_source.xhtml#l00190">190</a> of file <a class="el" href="getlane_8h_source.xhtml">getlane.h</a>.</p>

</div>
</div>
<a id="acd4dd84d48c63324d7ff91499b2ace33"></a>
<h2 class="memtitle"><span class="permalink"><a href="#acd4dd84d48c63324d7ff91499b2ace33">&#9670;&nbsp;</a></span>vgetqlane() <span class="overload">[4/7]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int16_t arm_compute::wrapper::vgetqlane </td>
          <td>(</td>
          <td class="paramtype">const int16x8_t&#160;</td>
          <td class="paramname"><em>vector</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int&#160;</td>
          <td class="paramname"><em>lane</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="getlane_8h_source.xhtml#l00191">191</a> of file <a class="el" href="getlane_8h_source.xhtml">getlane.h</a>.</p>

</div>
</div>
<a id="ad1c1c26eb0ae665f630b89aa4b36b65a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad1c1c26eb0ae665f630b89aa4b36b65a">&#9670;&nbsp;</a></span>vgetqlane() <span class="overload">[5/7]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint32_t arm_compute::wrapper::vgetqlane </td>
          <td>(</td>
          <td class="paramtype">const uint32x4_t&#160;</td>
          <td class="paramname"><em>vector</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int&#160;</td>
          <td class="paramname"><em>lane</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="getlane_8h_source.xhtml#l00192">192</a> of file <a class="el" href="getlane_8h_source.xhtml">getlane.h</a>.</p>

</div>
</div>
<a id="aab7e595808ac79d53ecf90da0de5dd31"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aab7e595808ac79d53ecf90da0de5dd31">&#9670;&nbsp;</a></span>vgetqlane() <span class="overload">[6/7]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int32_t arm_compute::wrapper::vgetqlane </td>
          <td>(</td>
          <td class="paramtype">const int32x4_t&#160;</td>
          <td class="paramname"><em>vector</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int&#160;</td>
          <td class="paramname"><em>lane</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="getlane_8h_source.xhtml#l00193">193</a> of file <a class="el" href="getlane_8h_source.xhtml">getlane.h</a>.</p>

</div>
</div>
<a id="af5b5e943c70b14264adc2d023f3463eb"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af5b5e943c70b14264adc2d023f3463eb">&#9670;&nbsp;</a></span>vgetqlane() <span class="overload">[7/7]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">float arm_compute::wrapper::vgetqlane </td>
          <td>(</td>
          <td class="paramtype">const float32x4_t&#160;</td>
          <td class="paramname"><em>vector</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int&#160;</td>
          <td class="paramname"><em>lane</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="getlane_8h_source.xhtml#l00194">194</a> of file <a class="el" href="getlane_8h_source.xhtml">getlane.h</a>.</p>

</div>
</div>
<a id="a5ac8135a2c0a60f10448be0057543ed7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5ac8135a2c0a60f10448be0057543ed7">&#9670;&nbsp;</a></span>vinv() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">float32x2_t arm_compute::wrapper::vinv </td>
          <td>(</td>
          <td class="paramtype">const float32x2_t &amp;&#160;</td>
          <td class="paramname"><em>a</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="inv_8h_source.xhtml#l00040">40</a> of file <a class="el" href="inv_8h_source.xhtml">inv.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="_n_e_activation_function_detail_8h_source.xhtml#l00140">logistic&lt; T, S &gt;::operator()()</a>.</p>

</div>
</div>
<a id="a9fab00cf10194f860fbe0facb245df77"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9fab00cf10194f860fbe0facb245df77">&#9670;&nbsp;</a></span>vinv() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">float32x4_t arm_compute::wrapper::vinv </td>
          <td>(</td>
          <td class="paramtype">const float32x4_t &amp;&#160;</td>
          <td class="paramname"><em>a</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="inv_8h_source.xhtml#l00045">45</a> of file <a class="el" href="inv_8h_source.xhtml">inv.h</a>.</p>

</div>
</div>
<a id="ae1a6f6dde14fc3b0470cd0b08041ea9f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae1a6f6dde14fc3b0470cd0b08041ea9f">&#9670;&nbsp;</a></span>vload() <span class="overload">[1/7]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint8x8_t arm_compute::wrapper::vload </td>
          <td>(</td>
          <td class="paramtype">const uint8_t *&#160;</td>
          <td class="paramname"><em>ptr</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="load_8h_source.xhtml#l00039">39</a> of file <a class="el" href="load_8h_source.xhtml">load.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;{                                      \</div></div><!-- fragment -->
</div>
</div>
<a id="a87e91f0ee3ecea4a152f7db51451be32"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a87e91f0ee3ecea4a152f7db51451be32">&#9670;&nbsp;</a></span>vload() <span class="overload">[2/7]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int8x8_t arm_compute::wrapper::vload </td>
          <td>(</td>
          <td class="paramtype">const int8_t *&#160;</td>
          <td class="paramname"><em>ptr</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="load_8h_source.xhtml#l00040">40</a> of file <a class="el" href="load_8h_source.xhtml">load.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;{                                      \</div></div><!-- fragment -->
</div>
</div>
<a id="a554bda13751c47b20fb50246f99c601a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a554bda13751c47b20fb50246f99c601a">&#9670;&nbsp;</a></span>vload() <span class="overload">[3/7]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint16x4_t arm_compute::wrapper::vload </td>
          <td>(</td>
          <td class="paramtype">const uint16_t *&#160;</td>
          <td class="paramname"><em>ptr</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="load_8h_source.xhtml#l00041">41</a> of file <a class="el" href="load_8h_source.xhtml">load.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;{                                      \</div></div><!-- fragment -->
</div>
</div>
<a id="a9f1e8ab5f43a0bd6c5f12b8b8d2847ba"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9f1e8ab5f43a0bd6c5f12b8b8d2847ba">&#9670;&nbsp;</a></span>vload() <span class="overload">[4/7]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int16x4_t arm_compute::wrapper::vload </td>
          <td>(</td>
          <td class="paramtype">const int16_t *&#160;</td>
          <td class="paramname"><em>ptr</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="load_8h_source.xhtml#l00042">42</a> of file <a class="el" href="load_8h_source.xhtml">load.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;{                                      \</div></div><!-- fragment -->
</div>
</div>
<a id="a8c0ebb40f71661ff1396b6cab9c4d168"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8c0ebb40f71661ff1396b6cab9c4d168">&#9670;&nbsp;</a></span>vload() <span class="overload">[5/7]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint32x2_t arm_compute::wrapper::vload </td>
          <td>(</td>
          <td class="paramtype">const uint32_t *&#160;</td>
          <td class="paramname"><em>ptr</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="load_8h_source.xhtml#l00043">43</a> of file <a class="el" href="load_8h_source.xhtml">load.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;{                                      \</div></div><!-- fragment -->
</div>
</div>
<a id="ac315df13b4a8667730a6b3f0e774d66a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac315df13b4a8667730a6b3f0e774d66a">&#9670;&nbsp;</a></span>vload() <span class="overload">[6/7]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int32x2_t arm_compute::wrapper::vload </td>
          <td>(</td>
          <td class="paramtype">const int32_t *&#160;</td>
          <td class="paramname"><em>ptr</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="load_8h_source.xhtml#l00044">44</a> of file <a class="el" href="load_8h_source.xhtml">load.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;{                                      \</div></div><!-- fragment -->
</div>
</div>
<a id="a34d952ba7147dd78ef05879bfead78f5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a34d952ba7147dd78ef05879bfead78f5">&#9670;&nbsp;</a></span>vload() <span class="overload">[7/7]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">float32x2_t arm_compute::wrapper::vload </td>
          <td>(</td>
          <td class="paramtype">const float *&#160;</td>
          <td class="paramname"><em>ptr</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="load_8h_source.xhtml#l00047">47</a> of file <a class="el" href="load_8h_source.xhtml">load.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;{                                      \</div></div><!-- fragment -->
</div>
</div>
<a id="a77f54eded7fef436d3a4f21ad5a00da6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a77f54eded7fef436d3a4f21ad5a00da6">&#9670;&nbsp;</a></span>vloadq() <span class="overload">[1/7]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint8x16_t arm_compute::wrapper::vloadq </td>
          <td>(</td>
          <td class="paramtype">const uint8_t *&#160;</td>
          <td class="paramname"><em>ptr</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="load_8h_source.xhtml#l00058">58</a> of file <a class="el" href="load_8h_source.xhtml">load.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="_n_e_width_concatenate_layer_kernel_8cpp_source.xhtml#l00103">NEWidthConcatenateLayerKernel::run()</a>.</p>

</div>
</div>
<a id="abdcc9846d94853fcbddb817879de1a34"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abdcc9846d94853fcbddb817879de1a34">&#9670;&nbsp;</a></span>vloadq() <span class="overload">[2/7]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int8x16_t arm_compute::wrapper::vloadq </td>
          <td>(</td>
          <td class="paramtype">const int8_t *&#160;</td>
          <td class="paramname"><em>ptr</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="load_8h_source.xhtml#l00059">59</a> of file <a class="el" href="load_8h_source.xhtml">load.h</a>.</p>

</div>
</div>
<a id="aace1a8b4ba67c412574180dd492e480b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aace1a8b4ba67c412574180dd492e480b">&#9670;&nbsp;</a></span>vloadq() <span class="overload">[3/7]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint16x8_t arm_compute::wrapper::vloadq </td>
          <td>(</td>
          <td class="paramtype">const uint16_t *&#160;</td>
          <td class="paramname"><em>ptr</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="load_8h_source.xhtml#l00060">60</a> of file <a class="el" href="load_8h_source.xhtml">load.h</a>.</p>

</div>
</div>
<a id="ae189872ea41a0947dd06f560aaca3fbb"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae189872ea41a0947dd06f560aaca3fbb">&#9670;&nbsp;</a></span>vloadq() <span class="overload">[4/7]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int16x8_t arm_compute::wrapper::vloadq </td>
          <td>(</td>
          <td class="paramtype">const int16_t *&#160;</td>
          <td class="paramname"><em>ptr</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="load_8h_source.xhtml#l00061">61</a> of file <a class="el" href="load_8h_source.xhtml">load.h</a>.</p>

</div>
</div>
<a id="a3ea1791012d4495628c21706e031a1eb"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3ea1791012d4495628c21706e031a1eb">&#9670;&nbsp;</a></span>vloadq() <span class="overload">[5/7]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint32x4_t arm_compute::wrapper::vloadq </td>
          <td>(</td>
          <td class="paramtype">const uint32_t *&#160;</td>
          <td class="paramname"><em>ptr</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="load_8h_source.xhtml#l00062">62</a> of file <a class="el" href="load_8h_source.xhtml">load.h</a>.</p>

</div>
</div>
<a id="a68cae5637e21bb5bc7563a5a89c27764"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a68cae5637e21bb5bc7563a5a89c27764">&#9670;&nbsp;</a></span>vloadq() <span class="overload">[6/7]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int32x4_t arm_compute::wrapper::vloadq </td>
          <td>(</td>
          <td class="paramtype">const int32_t *&#160;</td>
          <td class="paramname"><em>ptr</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="load_8h_source.xhtml#l00063">63</a> of file <a class="el" href="load_8h_source.xhtml">load.h</a>.</p>

</div>
</div>
<a id="adbe3f94e4c5f2a89be3c5fff7c87a1c2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#adbe3f94e4c5f2a89be3c5fff7c87a1c2">&#9670;&nbsp;</a></span>vloadq() <span class="overload">[7/7]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">float32x4_t arm_compute::wrapper::vloadq </td>
          <td>(</td>
          <td class="paramtype">const float *&#160;</td>
          <td class="paramname"><em>ptr</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="load_8h_source.xhtml#l00066">66</a> of file <a class="el" href="load_8h_source.xhtml">load.h</a>.</p>

</div>
</div>
<a id="a8d1d14000c959f1146a8a64e1dafae5f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8d1d14000c959f1146a8a64e1dafae5f">&#9670;&nbsp;</a></span>vmax() <span class="overload">[1/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint8x8_t arm_compute::wrapper::vmax </td>
          <td>(</td>
          <td class="paramtype">const uint8x8_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const uint8x8_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="max_8h_source.xhtml#l00039">39</a> of file <a class="el" href="max_8h_source.xhtml">max.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="_n_e_activation_function_detail_8h_source.xhtml#l00171">relu&lt; T, S &gt;::operator()()</a>, <a class="el" href="_n_e_activation_function_detail_8h_source.xhtml#l00202">brelu&lt; T, S &gt;::operator()()</a>, and <a class="el" href="_n_e_activation_function_detail_8h_source.xhtml#l00235">lubrelu&lt; T, S &gt;::operator()()</a>.</p>

</div>
</div>
<a id="a8f7649f2ee606cf842115341b7571aab"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8f7649f2ee606cf842115341b7571aab">&#9670;&nbsp;</a></span>vmax() <span class="overload">[2/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int8x8_t arm_compute::wrapper::vmax </td>
          <td>(</td>
          <td class="paramtype">const int8x8_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int8x8_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="max_8h_source.xhtml#l00040">40</a> of file <a class="el" href="max_8h_source.xhtml">max.h</a>.</p>

</div>
</div>
<a id="adf5ce125cc789021a3d24f5707d711ec"></a>
<h2 class="memtitle"><span class="permalink"><a href="#adf5ce125cc789021a3d24f5707d711ec">&#9670;&nbsp;</a></span>vmax() <span class="overload">[3/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint16x4_t arm_compute::wrapper::vmax </td>
          <td>(</td>
          <td class="paramtype">const uint16x4_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const uint16x4_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="max_8h_source.xhtml#l00041">41</a> of file <a class="el" href="max_8h_source.xhtml">max.h</a>.</p>

</div>
</div>
<a id="a7afbbd0a831ad31c1a75e48b7d93324a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7afbbd0a831ad31c1a75e48b7d93324a">&#9670;&nbsp;</a></span>vmax() <span class="overload">[4/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int16x4_t arm_compute::wrapper::vmax </td>
          <td>(</td>
          <td class="paramtype">const int16x4_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int16x4_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="max_8h_source.xhtml#l00042">42</a> of file <a class="el" href="max_8h_source.xhtml">max.h</a>.</p>

</div>
</div>
<a id="a6b553699a7c1e9d9cb109a49ad3c5727"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6b553699a7c1e9d9cb109a49ad3c5727">&#9670;&nbsp;</a></span>vmax() <span class="overload">[5/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint32x2_t arm_compute::wrapper::vmax </td>
          <td>(</td>
          <td class="paramtype">const uint32x2_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const uint32x2_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="max_8h_source.xhtml#l00043">43</a> of file <a class="el" href="max_8h_source.xhtml">max.h</a>.</p>

</div>
</div>
<a id="a5ca7ae9e30647c4643b1eb31f6517791"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5ca7ae9e30647c4643b1eb31f6517791">&#9670;&nbsp;</a></span>vmax() <span class="overload">[6/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int32x2_t arm_compute::wrapper::vmax </td>
          <td>(</td>
          <td class="paramtype">const int32x2_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int32x2_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="max_8h_source.xhtml#l00044">44</a> of file <a class="el" href="max_8h_source.xhtml">max.h</a>.</p>

</div>
</div>
<a id="ae2e5d4eb72295c6454bbd4a051cb32d6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae2e5d4eb72295c6454bbd4a051cb32d6">&#9670;&nbsp;</a></span>vmax() <span class="overload">[7/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">float32x2_t arm_compute::wrapper::vmax </td>
          <td>(</td>
          <td class="paramtype">const float32x2_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const float32x2_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="max_8h_source.xhtml#l00045">45</a> of file <a class="el" href="max_8h_source.xhtml">max.h</a>.</p>

</div>
</div>
<a id="a650538c522d3fd73c30e39cd170d02f9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a650538c522d3fd73c30e39cd170d02f9">&#9670;&nbsp;</a></span>vmax() <span class="overload">[8/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint8x16_t arm_compute::wrapper::vmax </td>
          <td>(</td>
          <td class="paramtype">const uint8x16_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const uint8x16_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="max_8h_source.xhtml#l00050">50</a> of file <a class="el" href="max_8h_source.xhtml">max.h</a>.</p>

</div>
</div>
<a id="ae30d6367801c1cba0e1e24b5e8a664b8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae30d6367801c1cba0e1e24b5e8a664b8">&#9670;&nbsp;</a></span>vmax() <span class="overload">[9/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int8x16_t arm_compute::wrapper::vmax </td>
          <td>(</td>
          <td class="paramtype">const int8x16_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int8x16_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="max_8h_source.xhtml#l00051">51</a> of file <a class="el" href="max_8h_source.xhtml">max.h</a>.</p>

</div>
</div>
<a id="afda337d70b92b77d4bb0601cd5673230"></a>
<h2 class="memtitle"><span class="permalink"><a href="#afda337d70b92b77d4bb0601cd5673230">&#9670;&nbsp;</a></span>vmax() <span class="overload">[10/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint16x8_t arm_compute::wrapper::vmax </td>
          <td>(</td>
          <td class="paramtype">const uint16x8_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const uint16x8_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="max_8h_source.xhtml#l00052">52</a> of file <a class="el" href="max_8h_source.xhtml">max.h</a>.</p>

</div>
</div>
<a id="ae5e87ca36a247c28d04b4bf992f5dd9a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae5e87ca36a247c28d04b4bf992f5dd9a">&#9670;&nbsp;</a></span>vmax() <span class="overload">[11/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int16x8_t arm_compute::wrapper::vmax </td>
          <td>(</td>
          <td class="paramtype">const int16x8_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int16x8_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="max_8h_source.xhtml#l00053">53</a> of file <a class="el" href="max_8h_source.xhtml">max.h</a>.</p>

</div>
</div>
<a id="a3b5bb4293c6cf9406b10543f2af45cae"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3b5bb4293c6cf9406b10543f2af45cae">&#9670;&nbsp;</a></span>vmax() <span class="overload">[12/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint32x4_t arm_compute::wrapper::vmax </td>
          <td>(</td>
          <td class="paramtype">const uint32x4_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const uint32x4_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="max_8h_source.xhtml#l00054">54</a> of file <a class="el" href="max_8h_source.xhtml">max.h</a>.</p>

</div>
</div>
<a id="a5305cd57eda646455fa9e5638d828db9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5305cd57eda646455fa9e5638d828db9">&#9670;&nbsp;</a></span>vmax() <span class="overload">[13/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int32x4_t arm_compute::wrapper::vmax </td>
          <td>(</td>
          <td class="paramtype">const int32x4_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int32x4_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="max_8h_source.xhtml#l00055">55</a> of file <a class="el" href="max_8h_source.xhtml">max.h</a>.</p>

</div>
</div>
<a id="a4a705920c79ac05f91ac30842627e97a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4a705920c79ac05f91ac30842627e97a">&#9670;&nbsp;</a></span>vmax() <span class="overload">[14/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">float32x4_t arm_compute::wrapper::vmax </td>
          <td>(</td>
          <td class="paramtype">const float32x4_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const float32x4_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="max_8h_source.xhtml#l00056">56</a> of file <a class="el" href="max_8h_source.xhtml">max.h</a>.</p>

</div>
</div>
<a id="ab026a1aeec48074092f548c130c323f4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab026a1aeec48074092f548c130c323f4">&#9670;&nbsp;</a></span>vmin() <span class="overload">[1/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint8x8_t arm_compute::wrapper::vmin </td>
          <td>(</td>
          <td class="paramtype">const uint8x8_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const uint8x8_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="min_8h_source.xhtml#l00039">39</a> of file <a class="el" href="min_8h_source.xhtml">min.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="dequantization__layer_8cl_source.xhtml#l00049">dequantization_layer()</a>, <a class="el" href="_n_e_activation_function_detail_8h_source.xhtml#l00202">brelu&lt; T, S &gt;::operator()()</a>, <a class="el" href="_n_e_activation_function_detail_8h_source.xhtml#l00235">lubrelu&lt; T, S &gt;::operator()()</a>, <a class="el" href="quantization__layer_8cl_source.xhtml#l00049">quantization_layer()</a>, <a class="el" href="_n_e_quantization_layer_kernel_8cpp_source.xhtml#l00107">NEQuantizationLayerKernel::run()</a>, and <a class="el" href="_n_e_dequantization_layer_kernel_8cpp_source.xhtml#l00107">NEDequantizationLayerKernel::run()</a>.</p>

</div>
</div>
<a id="a51eb407b34af91654602ed8f03e244d0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a51eb407b34af91654602ed8f03e244d0">&#9670;&nbsp;</a></span>vmin() <span class="overload">[2/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int8x8_t arm_compute::wrapper::vmin </td>
          <td>(</td>
          <td class="paramtype">const int8x8_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int8x8_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="min_8h_source.xhtml#l00040">40</a> of file <a class="el" href="min_8h_source.xhtml">min.h</a>.</p>

</div>
</div>
<a id="a5f9729c21d22cf563cfea46cf475102f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5f9729c21d22cf563cfea46cf475102f">&#9670;&nbsp;</a></span>vmin() <span class="overload">[3/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint16x4_t arm_compute::wrapper::vmin </td>
          <td>(</td>
          <td class="paramtype">const uint16x4_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const uint16x4_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="min_8h_source.xhtml#l00041">41</a> of file <a class="el" href="min_8h_source.xhtml">min.h</a>.</p>

</div>
</div>
<a id="aab638eca3c44bec3263d05c09708c62f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aab638eca3c44bec3263d05c09708c62f">&#9670;&nbsp;</a></span>vmin() <span class="overload">[4/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int16x4_t arm_compute::wrapper::vmin </td>
          <td>(</td>
          <td class="paramtype">const int16x4_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int16x4_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="min_8h_source.xhtml#l00042">42</a> of file <a class="el" href="min_8h_source.xhtml">min.h</a>.</p>

</div>
</div>
<a id="a57673ef73ff89d5a1b3fe00447d13e5b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a57673ef73ff89d5a1b3fe00447d13e5b">&#9670;&nbsp;</a></span>vmin() <span class="overload">[5/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint32x2_t arm_compute::wrapper::vmin </td>
          <td>(</td>
          <td class="paramtype">const uint32x2_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const uint32x2_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="min_8h_source.xhtml#l00043">43</a> of file <a class="el" href="min_8h_source.xhtml">min.h</a>.</p>

</div>
</div>
<a id="a8d9f1c86402d06b9b6565d090e6c8516"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8d9f1c86402d06b9b6565d090e6c8516">&#9670;&nbsp;</a></span>vmin() <span class="overload">[6/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int32x2_t arm_compute::wrapper::vmin </td>
          <td>(</td>
          <td class="paramtype">const int32x2_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int32x2_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="min_8h_source.xhtml#l00044">44</a> of file <a class="el" href="min_8h_source.xhtml">min.h</a>.</p>

</div>
</div>
<a id="ab810d1d59b9ae09dd6c4f829fb50b6e9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab810d1d59b9ae09dd6c4f829fb50b6e9">&#9670;&nbsp;</a></span>vmin() <span class="overload">[7/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">float32x2_t arm_compute::wrapper::vmin </td>
          <td>(</td>
          <td class="paramtype">const float32x2_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const float32x2_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="min_8h_source.xhtml#l00045">45</a> of file <a class="el" href="min_8h_source.xhtml">min.h</a>.</p>

</div>
</div>
<a id="ab1ee5e3e73a507eccc2ae66ba7e6fdc6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab1ee5e3e73a507eccc2ae66ba7e6fdc6">&#9670;&nbsp;</a></span>vmin() <span class="overload">[8/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint8x16_t arm_compute::wrapper::vmin </td>
          <td>(</td>
          <td class="paramtype">const uint8x16_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const uint8x16_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="min_8h_source.xhtml#l00050">50</a> of file <a class="el" href="min_8h_source.xhtml">min.h</a>.</p>

</div>
</div>
<a id="af67a7cc27575ee4da73c711225c51b53"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af67a7cc27575ee4da73c711225c51b53">&#9670;&nbsp;</a></span>vmin() <span class="overload">[9/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int8x16_t arm_compute::wrapper::vmin </td>
          <td>(</td>
          <td class="paramtype">const int8x16_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int8x16_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="min_8h_source.xhtml#l00051">51</a> of file <a class="el" href="min_8h_source.xhtml">min.h</a>.</p>

</div>
</div>
<a id="a1572d51ddecf974abf037055a1e5c334"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1572d51ddecf974abf037055a1e5c334">&#9670;&nbsp;</a></span>vmin() <span class="overload">[10/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint16x8_t arm_compute::wrapper::vmin </td>
          <td>(</td>
          <td class="paramtype">const uint16x8_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const uint16x8_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="min_8h_source.xhtml#l00052">52</a> of file <a class="el" href="min_8h_source.xhtml">min.h</a>.</p>

</div>
</div>
<a id="a435329432b5a078c141b0cbc8c0ce0ec"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a435329432b5a078c141b0cbc8c0ce0ec">&#9670;&nbsp;</a></span>vmin() <span class="overload">[11/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int16x8_t arm_compute::wrapper::vmin </td>
          <td>(</td>
          <td class="paramtype">const int16x8_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int16x8_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="min_8h_source.xhtml#l00053">53</a> of file <a class="el" href="min_8h_source.xhtml">min.h</a>.</p>

</div>
</div>
<a id="a48871d33cc9dbec5947efe4a5f180712"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a48871d33cc9dbec5947efe4a5f180712">&#9670;&nbsp;</a></span>vmin() <span class="overload">[12/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint32x4_t arm_compute::wrapper::vmin </td>
          <td>(</td>
          <td class="paramtype">const uint32x4_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const uint32x4_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="min_8h_source.xhtml#l00054">54</a> of file <a class="el" href="min_8h_source.xhtml">min.h</a>.</p>

</div>
</div>
<a id="a0342e5fbea4e9b848a20f8ff8d365456"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0342e5fbea4e9b848a20f8ff8d365456">&#9670;&nbsp;</a></span>vmin() <span class="overload">[13/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int32x4_t arm_compute::wrapper::vmin </td>
          <td>(</td>
          <td class="paramtype">const int32x4_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int32x4_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="min_8h_source.xhtml#l00055">55</a> of file <a class="el" href="min_8h_source.xhtml">min.h</a>.</p>

</div>
</div>
<a id="aded29dd88bb45804ea08fe7e4959368e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aded29dd88bb45804ea08fe7e4959368e">&#9670;&nbsp;</a></span>vmin() <span class="overload">[14/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">float32x4_t arm_compute::wrapper::vmin </td>
          <td>(</td>
          <td class="paramtype">const float32x4_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const float32x4_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="min_8h_source.xhtml#l00056">56</a> of file <a class="el" href="min_8h_source.xhtml">min.h</a>.</p>

</div>
</div>
<a id="a4287931a2912ecb6cece71219ca5478c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4287931a2912ecb6cece71219ca5478c">&#9670;&nbsp;</a></span>vmla() <span class="overload">[1/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint8x8_t arm_compute::wrapper::vmla </td>
          <td>(</td>
          <td class="paramtype">const uint8x8_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const uint8x8_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const uint8x8_t &amp;&#160;</td>
          <td class="paramname"><em>c</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="mla_8h_source.xhtml#l00039">39</a> of file <a class="el" href="mla_8h_source.xhtml">mla.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="_n_e_activation_function_detail_8h_source.xhtml#l00080">linear&lt; T, S &gt;::operator()()</a>.</p>

</div>
</div>
<a id="a37f88ce34194adf857254339a0dcf79b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a37f88ce34194adf857254339a0dcf79b">&#9670;&nbsp;</a></span>vmla() <span class="overload">[2/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int8x8_t arm_compute::wrapper::vmla </td>
          <td>(</td>
          <td class="paramtype">const int8x8_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int8x8_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int8x8_t &amp;&#160;</td>
          <td class="paramname"><em>c</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="mla_8h_source.xhtml#l00040">40</a> of file <a class="el" href="mla_8h_source.xhtml">mla.h</a>.</p>

</div>
</div>
<a id="a42223331ada67c8e42296d82f84892bb"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a42223331ada67c8e42296d82f84892bb">&#9670;&nbsp;</a></span>vmla() <span class="overload">[3/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint16x4_t arm_compute::wrapper::vmla </td>
          <td>(</td>
          <td class="paramtype">const uint16x4_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const uint16x4_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const uint16x4_t &amp;&#160;</td>
          <td class="paramname"><em>c</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="mla_8h_source.xhtml#l00041">41</a> of file <a class="el" href="mla_8h_source.xhtml">mla.h</a>.</p>

</div>
</div>
<a id="abfa9b0883aa3181f35138d1334cb6254"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abfa9b0883aa3181f35138d1334cb6254">&#9670;&nbsp;</a></span>vmla() <span class="overload">[4/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int16x4_t arm_compute::wrapper::vmla </td>
          <td>(</td>
          <td class="paramtype">const int16x4_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int16x4_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int16x4_t &amp;&#160;</td>
          <td class="paramname"><em>c</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="mla_8h_source.xhtml#l00042">42</a> of file <a class="el" href="mla_8h_source.xhtml">mla.h</a>.</p>

</div>
</div>
<a id="ac0d3c9db71218e51620b55f1c65bee02"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac0d3c9db71218e51620b55f1c65bee02">&#9670;&nbsp;</a></span>vmla() <span class="overload">[5/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint32x2_t arm_compute::wrapper::vmla </td>
          <td>(</td>
          <td class="paramtype">const uint32x2_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const uint32x2_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const uint32x2_t &amp;&#160;</td>
          <td class="paramname"><em>c</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="mla_8h_source.xhtml#l00043">43</a> of file <a class="el" href="mla_8h_source.xhtml">mla.h</a>.</p>

</div>
</div>
<a id="ae0885e9c52aa46752544466bc926f38a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae0885e9c52aa46752544466bc926f38a">&#9670;&nbsp;</a></span>vmla() <span class="overload">[6/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int32x2_t arm_compute::wrapper::vmla </td>
          <td>(</td>
          <td class="paramtype">const int32x2_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int32x2_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int32x2_t &amp;&#160;</td>
          <td class="paramname"><em>c</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="mla_8h_source.xhtml#l00044">44</a> of file <a class="el" href="mla_8h_source.xhtml">mla.h</a>.</p>

</div>
</div>
<a id="a303b6b566f2673b81e3ec38ae63c6e9e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a303b6b566f2673b81e3ec38ae63c6e9e">&#9670;&nbsp;</a></span>vmla() <span class="overload">[7/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">float32x2_t arm_compute::wrapper::vmla </td>
          <td>(</td>
          <td class="paramtype">const float32x2_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const float32x2_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const float32x2_t &amp;&#160;</td>
          <td class="paramname"><em>c</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="mla_8h_source.xhtml#l00045">45</a> of file <a class="el" href="mla_8h_source.xhtml">mla.h</a>.</p>

</div>
</div>
<a id="ac1a53ae8a71f3589b9af290a8a181c14"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac1a53ae8a71f3589b9af290a8a181c14">&#9670;&nbsp;</a></span>vmla() <span class="overload">[8/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint8x16_t arm_compute::wrapper::vmla </td>
          <td>(</td>
          <td class="paramtype">const uint8x16_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const uint8x16_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const uint8x16_t &amp;&#160;</td>
          <td class="paramname"><em>c</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="mla_8h_source.xhtml#l00047">47</a> of file <a class="el" href="mla_8h_source.xhtml">mla.h</a>.</p>

</div>
</div>
<a id="a9d83113a1e94bf011cf09a8e4e41e298"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9d83113a1e94bf011cf09a8e4e41e298">&#9670;&nbsp;</a></span>vmla() <span class="overload">[9/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int8x16_t arm_compute::wrapper::vmla </td>
          <td>(</td>
          <td class="paramtype">const int8x16_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int8x16_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int8x16_t &amp;&#160;</td>
          <td class="paramname"><em>c</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="mla_8h_source.xhtml#l00048">48</a> of file <a class="el" href="mla_8h_source.xhtml">mla.h</a>.</p>

</div>
</div>
<a id="ab87d76495291fa17d8227360e5d3df40"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab87d76495291fa17d8227360e5d3df40">&#9670;&nbsp;</a></span>vmla() <span class="overload">[10/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint16x8_t arm_compute::wrapper::vmla </td>
          <td>(</td>
          <td class="paramtype">const uint16x8_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const uint16x8_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const uint16x8_t &amp;&#160;</td>
          <td class="paramname"><em>c</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="mla_8h_source.xhtml#l00049">49</a> of file <a class="el" href="mla_8h_source.xhtml">mla.h</a>.</p>

</div>
</div>
<a id="ad1ab258613e35189ff0d2aaeaf88382c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad1ab258613e35189ff0d2aaeaf88382c">&#9670;&nbsp;</a></span>vmla() <span class="overload">[11/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int16x8_t arm_compute::wrapper::vmla </td>
          <td>(</td>
          <td class="paramtype">const int16x8_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int16x8_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int16x8_t &amp;&#160;</td>
          <td class="paramname"><em>c</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="mla_8h_source.xhtml#l00050">50</a> of file <a class="el" href="mla_8h_source.xhtml">mla.h</a>.</p>

</div>
</div>
<a id="a8c7b807fd519b6cc6944585b13c02141"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8c7b807fd519b6cc6944585b13c02141">&#9670;&nbsp;</a></span>vmla() <span class="overload">[12/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint32x4_t arm_compute::wrapper::vmla </td>
          <td>(</td>
          <td class="paramtype">const uint32x4_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const uint32x4_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const uint32x4_t &amp;&#160;</td>
          <td class="paramname"><em>c</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="mla_8h_source.xhtml#l00051">51</a> of file <a class="el" href="mla_8h_source.xhtml">mla.h</a>.</p>

</div>
</div>
<a id="ac1e660abafdcb4d69d264f85aa48c2c7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac1e660abafdcb4d69d264f85aa48c2c7">&#9670;&nbsp;</a></span>vmla() <span class="overload">[13/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int32x4_t arm_compute::wrapper::vmla </td>
          <td>(</td>
          <td class="paramtype">const int32x4_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int32x4_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int32x4_t &amp;&#160;</td>
          <td class="paramname"><em>c</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="mla_8h_source.xhtml#l00052">52</a> of file <a class="el" href="mla_8h_source.xhtml">mla.h</a>.</p>

</div>
</div>
<a id="ae38f1d4af6841a054a793640eff009b3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae38f1d4af6841a054a793640eff009b3">&#9670;&nbsp;</a></span>vmla() <span class="overload">[14/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">float32x4_t arm_compute::wrapper::vmla </td>
          <td>(</td>
          <td class="paramtype">const float32x4_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const float32x4_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const float32x4_t &amp;&#160;</td>
          <td class="paramname"><em>c</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="mla_8h_source.xhtml#l00053">53</a> of file <a class="el" href="mla_8h_source.xhtml">mla.h</a>.</p>

</div>
</div>
<a id="a8dbba1731c32d176ae6635be1c65cbd6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8dbba1731c32d176ae6635be1c65cbd6">&#9670;&nbsp;</a></span>vmovl() <span class="overload">[1/6]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint16x8_t arm_compute::wrapper::vmovl </td>
          <td>(</td>
          <td class="paramtype">const uint8x8_t &amp;&#160;</td>
          <td class="paramname"><em>a</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="movl_8h_source.xhtml#l00039">39</a> of file <a class="el" href="movl_8h_source.xhtml">movl.h</a>.</p>

</div>
</div>
<a id="aa929d20322303880b8b6429b19eeea21"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa929d20322303880b8b6429b19eeea21">&#9670;&nbsp;</a></span>vmovl() <span class="overload">[2/6]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int16x8_t arm_compute::wrapper::vmovl </td>
          <td>(</td>
          <td class="paramtype">const int8x8_t &amp;&#160;</td>
          <td class="paramname"><em>a</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="movl_8h_source.xhtml#l00040">40</a> of file <a class="el" href="movl_8h_source.xhtml">movl.h</a>.</p>

</div>
</div>
<a id="a7c3fe657db220619affef40899e7a3d3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7c3fe657db220619affef40899e7a3d3">&#9670;&nbsp;</a></span>vmovl() <span class="overload">[3/6]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint32x4_t arm_compute::wrapper::vmovl </td>
          <td>(</td>
          <td class="paramtype">const uint16x4_t &amp;&#160;</td>
          <td class="paramname"><em>a</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="movl_8h_source.xhtml#l00041">41</a> of file <a class="el" href="movl_8h_source.xhtml">movl.h</a>.</p>

</div>
</div>
<a id="a9301713b642622ad8891b0917e98fc2a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9301713b642622ad8891b0917e98fc2a">&#9670;&nbsp;</a></span>vmovl() <span class="overload">[4/6]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int32x4_t arm_compute::wrapper::vmovl </td>
          <td>(</td>
          <td class="paramtype">const int16x4_t &amp;&#160;</td>
          <td class="paramname"><em>a</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="movl_8h_source.xhtml#l00042">42</a> of file <a class="el" href="movl_8h_source.xhtml">movl.h</a>.</p>

</div>
</div>
<a id="ab8d18c4574de6d24cf727f83081e9a52"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab8d18c4574de6d24cf727f83081e9a52">&#9670;&nbsp;</a></span>vmovl() <span class="overload">[5/6]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint64x2_t arm_compute::wrapper::vmovl </td>
          <td>(</td>
          <td class="paramtype">const uint32x2_t &amp;&#160;</td>
          <td class="paramname"><em>a</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="movl_8h_source.xhtml#l00043">43</a> of file <a class="el" href="movl_8h_source.xhtml">movl.h</a>.</p>

</div>
</div>
<a id="a8fa6221077a840ac278fe21fdcaeca2a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8fa6221077a840ac278fe21fdcaeca2a">&#9670;&nbsp;</a></span>vmovl() <span class="overload">[6/6]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int64x2_t arm_compute::wrapper::vmovl </td>
          <td>(</td>
          <td class="paramtype">const int32x2_t &amp;&#160;</td>
          <td class="paramname"><em>a</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="movl_8h_source.xhtml#l00044">44</a> of file <a class="el" href="movl_8h_source.xhtml">movl.h</a>.</p>

</div>
</div>
<a id="aea0b656edc428c1f7702d86bbb97df6b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aea0b656edc428c1f7702d86bbb97df6b">&#9670;&nbsp;</a></span>vmovn() <span class="overload">[1/6]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint32x2_t arm_compute::wrapper::vmovn </td>
          <td>(</td>
          <td class="paramtype">const uint64x2_t &amp;&#160;</td>
          <td class="paramname"><em>a</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="movn_8h_source.xhtml#l00039">39</a> of file <a class="el" href="movn_8h_source.xhtml">movn.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;{                                              \</div></div><!-- fragment -->
</div>
</div>
<a id="ab31fa5f935432afeae5e4c873b6bb8fd"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab31fa5f935432afeae5e4c873b6bb8fd">&#9670;&nbsp;</a></span>vmovn() <span class="overload">[2/6]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int32x2_t arm_compute::wrapper::vmovn </td>
          <td>(</td>
          <td class="paramtype">const int64x2_t &amp;&#160;</td>
          <td class="paramname"><em>a</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="movn_8h_source.xhtml#l00040">40</a> of file <a class="el" href="movn_8h_source.xhtml">movn.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;{                                              \</div></div><!-- fragment -->
</div>
</div>
<a id="a89a44d45022193bc148089fec401d437"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a89a44d45022193bc148089fec401d437">&#9670;&nbsp;</a></span>vmovn() <span class="overload">[3/6]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint16x4_t arm_compute::wrapper::vmovn </td>
          <td>(</td>
          <td class="paramtype">const uint32x4_t &amp;&#160;</td>
          <td class="paramname"><em>a</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="movn_8h_source.xhtml#l00041">41</a> of file <a class="el" href="movn_8h_source.xhtml">movn.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;{                                              \</div></div><!-- fragment -->
</div>
</div>
<a id="ac9b48bf24969c71d62ab2837957a3b93"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac9b48bf24969c71d62ab2837957a3b93">&#9670;&nbsp;</a></span>vmovn() <span class="overload">[4/6]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int16x4_t arm_compute::wrapper::vmovn </td>
          <td>(</td>
          <td class="paramtype">const int32x4_t &amp;&#160;</td>
          <td class="paramname"><em>a</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="movn_8h_source.xhtml#l00042">42</a> of file <a class="el" href="movn_8h_source.xhtml">movn.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;{                                              \</div></div><!-- fragment -->
</div>
</div>
<a id="a9fee192f80eebcf368ee4e662c455d7d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9fee192f80eebcf368ee4e662c455d7d">&#9670;&nbsp;</a></span>vmovn() <span class="overload">[5/6]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint8x8_t arm_compute::wrapper::vmovn </td>
          <td>(</td>
          <td class="paramtype">const uint16x8_t &amp;&#160;</td>
          <td class="paramname"><em>a</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="movn_8h_source.xhtml#l00043">43</a> of file <a class="el" href="movn_8h_source.xhtml">movn.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;{                                              \</div></div><!-- fragment -->
</div>
</div>
<a id="a36c832fbcec771dae0fe1b8b215399f2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a36c832fbcec771dae0fe1b8b215399f2">&#9670;&nbsp;</a></span>vmovn() <span class="overload">[6/6]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int8x8_t arm_compute::wrapper::vmovn </td>
          <td>(</td>
          <td class="paramtype">const int16x8_t &amp;&#160;</td>
          <td class="paramname"><em>a</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="movn_8h_source.xhtml#l00044">44</a> of file <a class="el" href="movn_8h_source.xhtml">movn.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;{                                              \</div></div><!-- fragment -->
</div>
</div>
<a id="a66c8dd218a4863a14fec363e3dd13dc4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a66c8dd218a4863a14fec363e3dd13dc4">&#9670;&nbsp;</a></span>vmul() <span class="overload">[1/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint8x8_t arm_compute::wrapper::vmul </td>
          <td>(</td>
          <td class="paramtype">const uint8x8_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const uint8x8_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="mul_8h_source.xhtml#l00039">39</a> of file <a class="el" href="mul_8h_source.xhtml">mul.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="_n_e_activation_function_detail_8h_source.xhtml#l00112">square&lt; T, S &gt;::operator()()</a>.</p>

</div>
</div>
<a id="a66a7fd5e2104da748fdb7665e3505b3c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a66a7fd5e2104da748fdb7665e3505b3c">&#9670;&nbsp;</a></span>vmul() <span class="overload">[2/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int8x8_t arm_compute::wrapper::vmul </td>
          <td>(</td>
          <td class="paramtype">const int8x8_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int8x8_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="mul_8h_source.xhtml#l00040">40</a> of file <a class="el" href="mul_8h_source.xhtml">mul.h</a>.</p>

</div>
</div>
<a id="a1aefc54a525724581b1a09f3b9e33111"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1aefc54a525724581b1a09f3b9e33111">&#9670;&nbsp;</a></span>vmul() <span class="overload">[3/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint16x4_t arm_compute::wrapper::vmul </td>
          <td>(</td>
          <td class="paramtype">const uint16x4_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const uint16x4_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="mul_8h_source.xhtml#l00041">41</a> of file <a class="el" href="mul_8h_source.xhtml">mul.h</a>.</p>

</div>
</div>
<a id="a32c397e73d2083c8f48aaf0afcdd81c8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a32c397e73d2083c8f48aaf0afcdd81c8">&#9670;&nbsp;</a></span>vmul() <span class="overload">[4/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int16x4_t arm_compute::wrapper::vmul </td>
          <td>(</td>
          <td class="paramtype">const int16x4_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int16x4_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="mul_8h_source.xhtml#l00042">42</a> of file <a class="el" href="mul_8h_source.xhtml">mul.h</a>.</p>

</div>
</div>
<a id="aa2579d7197d661c7e483c2b4079c5037"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa2579d7197d661c7e483c2b4079c5037">&#9670;&nbsp;</a></span>vmul() <span class="overload">[5/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint32x2_t arm_compute::wrapper::vmul </td>
          <td>(</td>
          <td class="paramtype">const uint32x2_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const uint32x2_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="mul_8h_source.xhtml#l00043">43</a> of file <a class="el" href="mul_8h_source.xhtml">mul.h</a>.</p>

</div>
</div>
<a id="ace213c51916a0c2f979f3082663765e1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ace213c51916a0c2f979f3082663765e1">&#9670;&nbsp;</a></span>vmul() <span class="overload">[6/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int32x2_t arm_compute::wrapper::vmul </td>
          <td>(</td>
          <td class="paramtype">const int32x2_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int32x2_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="mul_8h_source.xhtml#l00044">44</a> of file <a class="el" href="mul_8h_source.xhtml">mul.h</a>.</p>

</div>
</div>
<a id="aaa99c51650860bee18dc2a1c6259c661"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aaa99c51650860bee18dc2a1c6259c661">&#9670;&nbsp;</a></span>vmul() <span class="overload">[7/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">float32x2_t arm_compute::wrapper::vmul </td>
          <td>(</td>
          <td class="paramtype">const float32x2_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const float32x2_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="mul_8h_source.xhtml#l00045">45</a> of file <a class="el" href="mul_8h_source.xhtml">mul.h</a>.</p>

</div>
</div>
<a id="a1e6e6496807b9c330c9a21749f442a6d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1e6e6496807b9c330c9a21749f442a6d">&#9670;&nbsp;</a></span>vmul() <span class="overload">[8/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint8x16_t arm_compute::wrapper::vmul </td>
          <td>(</td>
          <td class="paramtype">const uint8x16_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const uint8x16_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="mul_8h_source.xhtml#l00050">50</a> of file <a class="el" href="mul_8h_source.xhtml">mul.h</a>.</p>

</div>
</div>
<a id="a34bb12fc418530504162b300bf417ee9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a34bb12fc418530504162b300bf417ee9">&#9670;&nbsp;</a></span>vmul() <span class="overload">[9/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int8x16_t arm_compute::wrapper::vmul </td>
          <td>(</td>
          <td class="paramtype">const int8x16_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int8x16_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="mul_8h_source.xhtml#l00051">51</a> of file <a class="el" href="mul_8h_source.xhtml">mul.h</a>.</p>

</div>
</div>
<a id="a4f2e93cec76891a55fde0d4ead3f7728"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4f2e93cec76891a55fde0d4ead3f7728">&#9670;&nbsp;</a></span>vmul() <span class="overload">[10/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint16x8_t arm_compute::wrapper::vmul </td>
          <td>(</td>
          <td class="paramtype">const uint16x8_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const uint16x8_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="mul_8h_source.xhtml#l00052">52</a> of file <a class="el" href="mul_8h_source.xhtml">mul.h</a>.</p>

</div>
</div>
<a id="a3f1fb2425af2afc3bcfb2ee0c8a68119"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3f1fb2425af2afc3bcfb2ee0c8a68119">&#9670;&nbsp;</a></span>vmul() <span class="overload">[11/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int16x8_t arm_compute::wrapper::vmul </td>
          <td>(</td>
          <td class="paramtype">const int16x8_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int16x8_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="mul_8h_source.xhtml#l00053">53</a> of file <a class="el" href="mul_8h_source.xhtml">mul.h</a>.</p>

</div>
</div>
<a id="af797877175d454cbaa6b25b19fb6c7e1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af797877175d454cbaa6b25b19fb6c7e1">&#9670;&nbsp;</a></span>vmul() <span class="overload">[12/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint32x4_t arm_compute::wrapper::vmul </td>
          <td>(</td>
          <td class="paramtype">const uint32x4_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const uint32x4_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="mul_8h_source.xhtml#l00054">54</a> of file <a class="el" href="mul_8h_source.xhtml">mul.h</a>.</p>

</div>
</div>
<a id="aab8ce1a283f1649a3a7763c0600dd7f7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aab8ce1a283f1649a3a7763c0600dd7f7">&#9670;&nbsp;</a></span>vmul() <span class="overload">[13/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int32x4_t arm_compute::wrapper::vmul </td>
          <td>(</td>
          <td class="paramtype">const int32x4_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int32x4_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="mul_8h_source.xhtml#l00055">55</a> of file <a class="el" href="mul_8h_source.xhtml">mul.h</a>.</p>

</div>
</div>
<a id="a04525a80382277955944902464f660e4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a04525a80382277955944902464f660e4">&#9670;&nbsp;</a></span>vmul() <span class="overload">[14/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">float32x4_t arm_compute::wrapper::vmul </td>
          <td>(</td>
          <td class="paramtype">const float32x4_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const float32x4_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="mul_8h_source.xhtml#l00056">56</a> of file <a class="el" href="mul_8h_source.xhtml">mul.h</a>.</p>

</div>
</div>
<a id="aa24da6d1c1ce97217bab0291ce404fa7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa24da6d1c1ce97217bab0291ce404fa7">&#9670;&nbsp;</a></span>vneg() <span class="overload">[1/4]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int8x8_t arm_compute::wrapper::vneg </td>
          <td>(</td>
          <td class="paramtype">const int8x8_t &amp;&#160;</td>
          <td class="paramname"><em>a</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="neg_8h_source.xhtml#l00039">39</a> of file <a class="el" href="neg_8h_source.xhtml">neg.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;{                                  \</div></div><!-- fragment -->
</div>
</div>
<a id="a2c6508f2e9aa4b8832aa4e05716a436f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2c6508f2e9aa4b8832aa4e05716a436f">&#9670;&nbsp;</a></span>vneg() <span class="overload">[2/4]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int16x4_t arm_compute::wrapper::vneg </td>
          <td>(</td>
          <td class="paramtype">const int16x4_t &amp;&#160;</td>
          <td class="paramname"><em>a</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="neg_8h_source.xhtml#l00040">40</a> of file <a class="el" href="neg_8h_source.xhtml">neg.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;{                                  \</div></div><!-- fragment -->
</div>
</div>
<a id="a1fcdbb04887f4009d8eaf423260d862e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1fcdbb04887f4009d8eaf423260d862e">&#9670;&nbsp;</a></span>vneg() <span class="overload">[3/4]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int32x2_t arm_compute::wrapper::vneg </td>
          <td>(</td>
          <td class="paramtype">const int32x2_t &amp;&#160;</td>
          <td class="paramname"><em>a</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="neg_8h_source.xhtml#l00041">41</a> of file <a class="el" href="neg_8h_source.xhtml">neg.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;{                                  \</div></div><!-- fragment -->
</div>
</div>
<a id="a3f8675538052849d9a77195dcb2a0475"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3f8675538052849d9a77195dcb2a0475">&#9670;&nbsp;</a></span>vneg() <span class="overload">[4/4]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">float32x2_t arm_compute::wrapper::vneg </td>
          <td>(</td>
          <td class="paramtype">const float32x2_t &amp;&#160;</td>
          <td class="paramname"><em>a</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="neg_8h_source.xhtml#l00042">42</a> of file <a class="el" href="neg_8h_source.xhtml">neg.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;{                                  \</div></div><!-- fragment -->
</div>
</div>
<a id="acfca5c0549569d0748bbc1bbabae8b5b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#acfca5c0549569d0748bbc1bbabae8b5b">&#9670;&nbsp;</a></span>vnegq() <span class="overload">[1/4]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int8x16_t arm_compute::wrapper::vnegq </td>
          <td>(</td>
          <td class="paramtype">const int8x16_t &amp;&#160;</td>
          <td class="paramname"><em>a</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="neg_8h_source.xhtml#l00054">54</a> of file <a class="el" href="neg_8h_source.xhtml">neg.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="_n_e_activation_function_detail_8h_source.xhtml#l00140">logistic&lt; T, S &gt;::operator()()</a>.</p>

</div>
</div>
<a id="a42f50a3e82d32abc2786a355428ba7d5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a42f50a3e82d32abc2786a355428ba7d5">&#9670;&nbsp;</a></span>vnegq() <span class="overload">[2/4]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int16x8_t arm_compute::wrapper::vnegq </td>
          <td>(</td>
          <td class="paramtype">const int16x8_t &amp;&#160;</td>
          <td class="paramname"><em>a</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="neg_8h_source.xhtml#l00055">55</a> of file <a class="el" href="neg_8h_source.xhtml">neg.h</a>.</p>

</div>
</div>
<a id="aaa09e8d6796678cced3dbc18dfe940a9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aaa09e8d6796678cced3dbc18dfe940a9">&#9670;&nbsp;</a></span>vnegq() <span class="overload">[3/4]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int32x4_t arm_compute::wrapper::vnegq </td>
          <td>(</td>
          <td class="paramtype">const int32x4_t &amp;&#160;</td>
          <td class="paramname"><em>a</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="neg_8h_source.xhtml#l00056">56</a> of file <a class="el" href="neg_8h_source.xhtml">neg.h</a>.</p>

</div>
</div>
<a id="a9f567c83d21c9f879ee1e4c5deed598f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9f567c83d21c9f879ee1e4c5deed598f">&#9670;&nbsp;</a></span>vnegq() <span class="overload">[4/4]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">float32x4_t arm_compute::wrapper::vnegq </td>
          <td>(</td>
          <td class="paramtype">const float32x4_t &amp;&#160;</td>
          <td class="paramname"><em>a</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="neg_8h_source.xhtml#l00057">57</a> of file <a class="el" href="neg_8h_source.xhtml">neg.h</a>.</p>

</div>
</div>
<a id="a475ee3c8ef70a2e4f18effd1d527a63a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a475ee3c8ef70a2e4f18effd1d527a63a">&#9670;&nbsp;</a></span>vpadd() <span class="overload">[1/7]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint8x8_t arm_compute::wrapper::vpadd </td>
          <td>(</td>
          <td class="paramtype">const uint8x8_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const uint8x8_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="padd_8h_source.xhtml#l00039">39</a> of file <a class="el" href="padd_8h_source.xhtml">padd.h</a>.</p>

</div>
</div>
<a id="a484740aa6942805e042822fb7cef12ec"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a484740aa6942805e042822fb7cef12ec">&#9670;&nbsp;</a></span>vpadd() <span class="overload">[2/7]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int8x8_t arm_compute::wrapper::vpadd </td>
          <td>(</td>
          <td class="paramtype">const int8x8_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int8x8_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="padd_8h_source.xhtml#l00040">40</a> of file <a class="el" href="padd_8h_source.xhtml">padd.h</a>.</p>

</div>
</div>
<a id="af7354b0a019a54faca6951b03d9cf766"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af7354b0a019a54faca6951b03d9cf766">&#9670;&nbsp;</a></span>vpadd() <span class="overload">[3/7]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint16x4_t arm_compute::wrapper::vpadd </td>
          <td>(</td>
          <td class="paramtype">const uint16x4_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const uint16x4_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="padd_8h_source.xhtml#l00041">41</a> of file <a class="el" href="padd_8h_source.xhtml">padd.h</a>.</p>

</div>
</div>
<a id="abd6493e8a191146e3455134723c495d1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abd6493e8a191146e3455134723c495d1">&#9670;&nbsp;</a></span>vpadd() <span class="overload">[4/7]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int16x4_t arm_compute::wrapper::vpadd </td>
          <td>(</td>
          <td class="paramtype">const int16x4_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int16x4_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="padd_8h_source.xhtml#l00042">42</a> of file <a class="el" href="padd_8h_source.xhtml">padd.h</a>.</p>

</div>
</div>
<a id="ac025e9eb7cd72f6ef016cb928b51b02d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac025e9eb7cd72f6ef016cb928b51b02d">&#9670;&nbsp;</a></span>vpadd() <span class="overload">[5/7]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint32x2_t arm_compute::wrapper::vpadd </td>
          <td>(</td>
          <td class="paramtype">const uint32x2_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const uint32x2_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="padd_8h_source.xhtml#l00043">43</a> of file <a class="el" href="padd_8h_source.xhtml">padd.h</a>.</p>

</div>
</div>
<a id="ac061b47e13fa4832ee51b203de487325"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac061b47e13fa4832ee51b203de487325">&#9670;&nbsp;</a></span>vpadd() <span class="overload">[6/7]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int32x2_t arm_compute::wrapper::vpadd </td>
          <td>(</td>
          <td class="paramtype">const int32x2_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int32x2_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="padd_8h_source.xhtml#l00044">44</a> of file <a class="el" href="padd_8h_source.xhtml">padd.h</a>.</p>

</div>
</div>
<a id="adae782aae6d44f1f87f624b31a544c59"></a>
<h2 class="memtitle"><span class="permalink"><a href="#adae782aae6d44f1f87f624b31a544c59">&#9670;&nbsp;</a></span>vpadd() <span class="overload">[7/7]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">float32x2_t arm_compute::wrapper::vpadd </td>
          <td>(</td>
          <td class="paramtype">const float32x2_t &amp;&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const float32x2_t &amp;&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="padd_8h_source.xhtml#l00045">45</a> of file <a class="el" href="padd_8h_source.xhtml">padd.h</a>.</p>

</div>
</div>
<a id="a55bc37be5f14e4c561d3ca93b2a34aa9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a55bc37be5f14e4c561d3ca93b2a34aa9">&#9670;&nbsp;</a></span>vqmovn() <span class="overload">[1/6]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint32x2_t arm_compute::wrapper::vqmovn </td>
          <td>(</td>
          <td class="paramtype">const uint64x2_t &amp;&#160;</td>
          <td class="paramname"><em>a</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="movn_8h_source.xhtml#l00052">52</a> of file <a class="el" href="movn_8h_source.xhtml">movn.h</a>.</p>

</div>
</div>
<a id="a7154843230482bb0b779d95621541003"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7154843230482bb0b779d95621541003">&#9670;&nbsp;</a></span>vqmovn() <span class="overload">[2/6]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int32x2_t arm_compute::wrapper::vqmovn </td>
          <td>(</td>
          <td class="paramtype">const int64x2_t &amp;&#160;</td>
          <td class="paramname"><em>a</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="movn_8h_source.xhtml#l00053">53</a> of file <a class="el" href="movn_8h_source.xhtml">movn.h</a>.</p>

</div>
</div>
<a id="a57941a547a0cfad979bd6b8fa9e030b7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a57941a547a0cfad979bd6b8fa9e030b7">&#9670;&nbsp;</a></span>vqmovn() <span class="overload">[3/6]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint16x4_t arm_compute::wrapper::vqmovn </td>
          <td>(</td>
          <td class="paramtype">const uint32x4_t &amp;&#160;</td>
          <td class="paramname"><em>a</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="movn_8h_source.xhtml#l00054">54</a> of file <a class="el" href="movn_8h_source.xhtml">movn.h</a>.</p>

</div>
</div>
<a id="a1128ee038af1aeb3df753bd4958e2009"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1128ee038af1aeb3df753bd4958e2009">&#9670;&nbsp;</a></span>vqmovn() <span class="overload">[4/6]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int16x4_t arm_compute::wrapper::vqmovn </td>
          <td>(</td>
          <td class="paramtype">const int32x4_t &amp;&#160;</td>
          <td class="paramname"><em>a</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="movn_8h_source.xhtml#l00055">55</a> of file <a class="el" href="movn_8h_source.xhtml">movn.h</a>.</p>

</div>
</div>
<a id="a03d244df122ac5030119baa1dfe319c6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a03d244df122ac5030119baa1dfe319c6">&#9670;&nbsp;</a></span>vqmovn() <span class="overload">[5/6]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint8x8_t arm_compute::wrapper::vqmovn </td>
          <td>(</td>
          <td class="paramtype">const uint16x8_t &amp;&#160;</td>
          <td class="paramname"><em>a</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="movn_8h_source.xhtml#l00056">56</a> of file <a class="el" href="movn_8h_source.xhtml">movn.h</a>.</p>

</div>
</div>
<a id="aaca6eb034c8564ecc9b32f50e85349ea"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aaca6eb034c8564ecc9b32f50e85349ea">&#9670;&nbsp;</a></span>vqmovn() <span class="overload">[6/6]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int8x8_t arm_compute::wrapper::vqmovn </td>
          <td>(</td>
          <td class="paramtype">const int16x8_t &amp;&#160;</td>
          <td class="paramname"><em>a</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="movn_8h_source.xhtml#l00057">57</a> of file <a class="el" href="movn_8h_source.xhtml">movn.h</a>.</p>

</div>
</div>
<a id="ae7943ea9c1f74dc72c62d4cc3966a459"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae7943ea9c1f74dc72c62d4cc3966a459">&#9670;&nbsp;</a></span>vstore() <span class="overload">[1/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void arm_compute::wrapper::vstore </td>
          <td>(</td>
          <td class="paramtype">uint8_t *&#160;</td>
          <td class="paramname"><em>ptr</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8x8_t&#160;</td>
          <td class="paramname"><em>val</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="store_8h_source.xhtml#l00039">39</a> of file <a class="el" href="store_8h_source.xhtml">store.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="_n_e_width_concatenate_layer_kernel_8cpp_source.xhtml#l00103">NEWidthConcatenateLayerKernel::run()</a>.</p>

</div>
</div>
<a id="a256a55d40b65c0a2a22b3f64045716be"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a256a55d40b65c0a2a22b3f64045716be">&#9670;&nbsp;</a></span>vstore() <span class="overload">[2/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void arm_compute::wrapper::vstore </td>
          <td>(</td>
          <td class="paramtype">int8_t *&#160;</td>
          <td class="paramname"><em>ptr</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int8x8_t&#160;</td>
          <td class="paramname"><em>val</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="store_8h_source.xhtml#l00040">40</a> of file <a class="el" href="store_8h_source.xhtml">store.h</a>.</p>

</div>
</div>
<a id="ab2a18e2f73c6066ec4af6ff793dc854c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab2a18e2f73c6066ec4af6ff793dc854c">&#9670;&nbsp;</a></span>vstore() <span class="overload">[3/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void arm_compute::wrapper::vstore </td>
          <td>(</td>
          <td class="paramtype">uint16_t *&#160;</td>
          <td class="paramname"><em>ptr</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint16x4_t&#160;</td>
          <td class="paramname"><em>val</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="store_8h_source.xhtml#l00041">41</a> of file <a class="el" href="store_8h_source.xhtml">store.h</a>.</p>

</div>
</div>
<a id="acbd85567ac69618d6ac0fe06fb72af44"></a>
<h2 class="memtitle"><span class="permalink"><a href="#acbd85567ac69618d6ac0fe06fb72af44">&#9670;&nbsp;</a></span>vstore() <span class="overload">[4/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void arm_compute::wrapper::vstore </td>
          <td>(</td>
          <td class="paramtype">int16_t *&#160;</td>
          <td class="paramname"><em>ptr</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int16x4_t&#160;</td>
          <td class="paramname"><em>val</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="store_8h_source.xhtml#l00042">42</a> of file <a class="el" href="store_8h_source.xhtml">store.h</a>.</p>

</div>
</div>
<a id="a65e75ff8f4d05960e50761a5a58dd386"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a65e75ff8f4d05960e50761a5a58dd386">&#9670;&nbsp;</a></span>vstore() <span class="overload">[5/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void arm_compute::wrapper::vstore </td>
          <td>(</td>
          <td class="paramtype">uint32_t *&#160;</td>
          <td class="paramname"><em>ptr</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32x2_t&#160;</td>
          <td class="paramname"><em>val</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="store_8h_source.xhtml#l00043">43</a> of file <a class="el" href="store_8h_source.xhtml">store.h</a>.</p>

</div>
</div>
<a id="a01875212af1a5ab754c818415f8df88d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a01875212af1a5ab754c818415f8df88d">&#9670;&nbsp;</a></span>vstore() <span class="overload">[6/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void arm_compute::wrapper::vstore </td>
          <td>(</td>
          <td class="paramtype">int32_t *&#160;</td>
          <td class="paramname"><em>ptr</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int32x2_t&#160;</td>
          <td class="paramname"><em>val</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="store_8h_source.xhtml#l00044">44</a> of file <a class="el" href="store_8h_source.xhtml">store.h</a>.</p>

</div>
</div>
<a id="ad417a154c619b3568b9eb97fc475a20c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad417a154c619b3568b9eb97fc475a20c">&#9670;&nbsp;</a></span>vstore() <span class="overload">[7/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void arm_compute::wrapper::vstore </td>
          <td>(</td>
          <td class="paramtype">float *&#160;</td>
          <td class="paramname"><em>ptr</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float32x2_t&#160;</td>
          <td class="paramname"><em>val</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="store_8h_source.xhtml#l00047">47</a> of file <a class="el" href="store_8h_source.xhtml">store.h</a>.</p>

</div>
</div>
<a id="a23d6ee788a3fdc90cfe7455e6c567aa9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a23d6ee788a3fdc90cfe7455e6c567aa9">&#9670;&nbsp;</a></span>vstore() <span class="overload">[8/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void arm_compute::wrapper::vstore </td>
          <td>(</td>
          <td class="paramtype">uint8_t *&#160;</td>
          <td class="paramname"><em>ptr</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8x16_t&#160;</td>
          <td class="paramname"><em>val</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="store_8h_source.xhtml#l00052">52</a> of file <a class="el" href="store_8h_source.xhtml">store.h</a>.</p>

</div>
</div>
<a id="a0a18c21e0fa9aea77c824091f2121f53"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0a18c21e0fa9aea77c824091f2121f53">&#9670;&nbsp;</a></span>vstore() <span class="overload">[9/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void arm_compute::wrapper::vstore </td>
          <td>(</td>
          <td class="paramtype">int8_t *&#160;</td>
          <td class="paramname"><em>ptr</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int8x16_t&#160;</td>
          <td class="paramname"><em>val</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="store_8h_source.xhtml#l00053">53</a> of file <a class="el" href="store_8h_source.xhtml">store.h</a>.</p>

</div>
</div>
<a id="a68347843dccc0dda3b8d96400782a1d4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a68347843dccc0dda3b8d96400782a1d4">&#9670;&nbsp;</a></span>vstore() <span class="overload">[10/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void arm_compute::wrapper::vstore </td>
          <td>(</td>
          <td class="paramtype">uint16_t *&#160;</td>
          <td class="paramname"><em>ptr</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint16x8_t&#160;</td>
          <td class="paramname"><em>val</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="store_8h_source.xhtml#l00054">54</a> of file <a class="el" href="store_8h_source.xhtml">store.h</a>.</p>

</div>
</div>
<a id="aea6948f7d0bf41e8db92807708860a81"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aea6948f7d0bf41e8db92807708860a81">&#9670;&nbsp;</a></span>vstore() <span class="overload">[11/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void arm_compute::wrapper::vstore </td>
          <td>(</td>
          <td class="paramtype">int16_t *&#160;</td>
          <td class="paramname"><em>ptr</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int16x8_t&#160;</td>
          <td class="paramname"><em>val</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="store_8h_source.xhtml#l00055">55</a> of file <a class="el" href="store_8h_source.xhtml">store.h</a>.</p>

</div>
</div>
<a id="a03ba7288457603cf531d82704aae5115"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a03ba7288457603cf531d82704aae5115">&#9670;&nbsp;</a></span>vstore() <span class="overload">[12/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void arm_compute::wrapper::vstore </td>
          <td>(</td>
          <td class="paramtype">uint32_t *&#160;</td>
          <td class="paramname"><em>ptr</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32x4_t&#160;</td>
          <td class="paramname"><em>val</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="store_8h_source.xhtml#l00056">56</a> of file <a class="el" href="store_8h_source.xhtml">store.h</a>.</p>

</div>
</div>
<a id="aefc551995598c813e0e9bd5a0a32821b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aefc551995598c813e0e9bd5a0a32821b">&#9670;&nbsp;</a></span>vstore() <span class="overload">[13/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void arm_compute::wrapper::vstore </td>
          <td>(</td>
          <td class="paramtype">int32_t *&#160;</td>
          <td class="paramname"><em>ptr</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int32x4_t&#160;</td>
          <td class="paramname"><em>val</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="store_8h_source.xhtml#l00057">57</a> of file <a class="el" href="store_8h_source.xhtml">store.h</a>.</p>

</div>
</div>
<a id="a9d16581b2d731ab0217ba7bd77b573d8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9d16581b2d731ab0217ba7bd77b573d8">&#9670;&nbsp;</a></span>vstore() <span class="overload">[14/14]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void arm_compute::wrapper::vstore </td>
          <td>(</td>
          <td class="paramtype">float *&#160;</td>
          <td class="paramname"><em>ptr</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float32x4_t&#160;</td>
          <td class="paramname"><em>val</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="store_8h_source.xhtml#l00060">60</a> of file <a class="el" href="store_8h_source.xhtml">store.h</a>.</p>

</div>
</div>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespacearm__compute.xhtml">arm_compute</a></li><li class="navelem"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml">wrapper</a></li>
    <li class="footer">Generated on Thu Nov 22 2018 11:57:52 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
