<!-- HTML header for doxygen 1.8.9.1-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: arm_compute/core/NEON/wrapper/intrinsics/getlane.h File Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">Compute Library
   &#160;<span id="projectnumber">18.11</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('getlane_8h.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#namespaces">Namespaces</a> &#124;
<a href="#define-members">Macros</a> &#124;
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle">
<div class="title">getlane.h File Reference</div>  </div>
</div><!--header-->
<div class="contents">
<div class="textblock"><code>#include &lt;arm_neon.h&gt;</code><br />
</div>
<p><a href="getlane_8h_source.xhtml">Go to the source code of this file.</a></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="namespaces"></a>
Namespaces</h2></td></tr>
<tr class="memitem:namespacearm__compute"><td class="memItemLeft" align="right" valign="top"> &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute.xhtml">arm_compute</a></td></tr>
<tr class="memdesc:namespacearm__compute"><td class="mdescLeft">&#160;</td><td class="mdescRight">Copyright (c) 2017-2018 ARM Limited. <br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:namespacearm__compute_1_1wrapper"><td class="memItemLeft" align="right" valign="top"> &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml">arm_compute::wrapper</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="define-members"></a>
Macros</h2></td></tr>
<tr class="memitem:a8c1f71cee67d8f261738daec48f791b3"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="getlane_8h.xhtml#a8c1f71cee67d8f261738daec48f791b3">VGETLANE_IMPL_8</a>(stype,  vtype,  postfix)</td></tr>
<tr class="separator:a8c1f71cee67d8f261738daec48f791b3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab21355519afdee817ec3095881a40da4"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="getlane_8h.xhtml#ab21355519afdee817ec3095881a40da4">VGETLANE_IMPL_4</a>(stype,  vtype,  postfix)</td></tr>
<tr class="separator:ab21355519afdee817ec3095881a40da4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a613f369eab3c81d4644ec91a9e0e16db"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="getlane_8h.xhtml#a613f369eab3c81d4644ec91a9e0e16db">VGETLANE_IMPL_2</a>(stype,  vtype,  postfix)</td></tr>
<tr class="separator:a613f369eab3c81d4644ec91a9e0e16db"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a37206d490f1251da106a185eab356881"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="getlane_8h.xhtml#a37206d490f1251da106a185eab356881">VGETQLANE_IMPL_16</a>(stype,  vtype,  postfix)</td></tr>
<tr class="separator:a37206d490f1251da106a185eab356881"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae68e7caec08496db4a3590e1aed6f606"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="getlane_8h.xhtml#ae68e7caec08496db4a3590e1aed6f606">VGETQLANE_IMPL_8</a>(stype,  vtype,  postfix)</td></tr>
<tr class="separator:ae68e7caec08496db4a3590e1aed6f606"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac99257d17af60fc10fea00c4c6b21755"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="getlane_8h.xhtml#ac99257d17af60fc10fea00c4c6b21755">VGETQLANE_IMPL_4</a>(stype,  vtype,  postfix)</td></tr>
<tr class="separator:ac99257d17af60fc10fea00c4c6b21755"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:a7942760521e166be06dd2fb44a7dcf25"><td class="memItemLeft" align="right" valign="top">uint8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a7942760521e166be06dd2fb44a7dcf25">vgetlane</a> (const uint8x8_t vector, const int lane)</td></tr>
<tr class="separator:a7942760521e166be06dd2fb44a7dcf25"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6d21ff1bd5ffea4299349bce82002aa2"><td class="memItemLeft" align="right" valign="top">int8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a6d21ff1bd5ffea4299349bce82002aa2">vgetlane</a> (const int8x8_t vector, const int lane)</td></tr>
<tr class="separator:a6d21ff1bd5ffea4299349bce82002aa2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac09ddece1e3391bb56fb3d3d0131ecdf"><td class="memItemLeft" align="right" valign="top">uint16_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#ac09ddece1e3391bb56fb3d3d0131ecdf">vgetlane</a> (const uint16x4_t vector, const int lane)</td></tr>
<tr class="separator:ac09ddece1e3391bb56fb3d3d0131ecdf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afdb5b5bd6639c3f4ae13eda87f565228"><td class="memItemLeft" align="right" valign="top">int16_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#afdb5b5bd6639c3f4ae13eda87f565228">vgetlane</a> (const int16x4_t vector, const int lane)</td></tr>
<tr class="separator:afdb5b5bd6639c3f4ae13eda87f565228"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae167e6fe177fb9816f466ad9c422ff8a"><td class="memItemLeft" align="right" valign="top">uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#ae167e6fe177fb9816f466ad9c422ff8a">vgetlane</a> (const uint32x2_t vector, const int lane)</td></tr>
<tr class="separator:ae167e6fe177fb9816f466ad9c422ff8a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:add649a246ec5b87317cbc55d6b870ab7"><td class="memItemLeft" align="right" valign="top">int32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#add649a246ec5b87317cbc55d6b870ab7">vgetlane</a> (const int32x2_t vector, const int lane)</td></tr>
<tr class="separator:add649a246ec5b87317cbc55d6b870ab7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af05d7ba1b1ed3b05a92144feb0616611"><td class="memItemLeft" align="right" valign="top">float&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#af05d7ba1b1ed3b05a92144feb0616611">vgetlane</a> (const float32x2_t vector, const int lane)</td></tr>
<tr class="separator:af05d7ba1b1ed3b05a92144feb0616611"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afd38fe23c36b3beae2328e48a52201f4"><td class="memItemLeft" align="right" valign="top">uint8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#afd38fe23c36b3beae2328e48a52201f4">vgetqlane</a> (const uint8x16_t vector, const int lane)</td></tr>
<tr class="separator:afd38fe23c36b3beae2328e48a52201f4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1bd18d87a40b79527b49347f35d2c9b5"><td class="memItemLeft" align="right" valign="top">int8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a1bd18d87a40b79527b49347f35d2c9b5">vgetqlane</a> (const int8x16_t vector, const int lane)</td></tr>
<tr class="separator:a1bd18d87a40b79527b49347f35d2c9b5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9dab805d3cfaef1a075d41f47fc3a6bb"><td class="memItemLeft" align="right" valign="top">uint16_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#a9dab805d3cfaef1a075d41f47fc3a6bb">vgetqlane</a> (const uint16x8_t vector, const int lane)</td></tr>
<tr class="separator:a9dab805d3cfaef1a075d41f47fc3a6bb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acd4dd84d48c63324d7ff91499b2ace33"><td class="memItemLeft" align="right" valign="top">int16_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#acd4dd84d48c63324d7ff91499b2ace33">vgetqlane</a> (const int16x8_t vector, const int lane)</td></tr>
<tr class="separator:acd4dd84d48c63324d7ff91499b2ace33"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad1c1c26eb0ae665f630b89aa4b36b65a"><td class="memItemLeft" align="right" valign="top">uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#ad1c1c26eb0ae665f630b89aa4b36b65a">vgetqlane</a> (const uint32x4_t vector, const int lane)</td></tr>
<tr class="separator:ad1c1c26eb0ae665f630b89aa4b36b65a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aab7e595808ac79d53ecf90da0de5dd31"><td class="memItemLeft" align="right" valign="top">int32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#aab7e595808ac79d53ecf90da0de5dd31">vgetqlane</a> (const int32x4_t vector, const int lane)</td></tr>
<tr class="separator:aab7e595808ac79d53ecf90da0de5dd31"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af5b5e943c70b14264adc2d023f3463eb"><td class="memItemLeft" align="right" valign="top">float&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacearm__compute_1_1wrapper.xhtml#af5b5e943c70b14264adc2d023f3463eb">vgetqlane</a> (const float32x4_t vector, const int lane)</td></tr>
<tr class="separator:af5b5e943c70b14264adc2d023f3463eb"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Macro Definition Documentation</h2>
<a id="a613f369eab3c81d4644ec91a9e0e16db"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a613f369eab3c81d4644ec91a9e0e16db">&#9670;&nbsp;</a></span>VGETLANE_IMPL_2</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define VGETLANE_IMPL_2</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">stype, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">vtype, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">postfix&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<b>Value:</b><div class="fragment"><div class="line"><span class="keyword">inline</span> stype <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#af05d7ba1b1ed3b05a92144feb0616611">vgetlane</a>(<span class="keyword">const</span> vtype vector, <span class="keyword">const</span> <span class="keywordtype">int</span> lane) \</div><div class="line">    {                                                         \</div><div class="line">        switch(lane)                                          \</div><div class="line">        {                                                     \</div><div class="line">            case 0:                                           \</div><div class="line">                return vget_lane_##postfix(vector, 0);        \</div><div class="line">            case 1:                                           \</div><div class="line">                return vget_lane_##postfix(vector, 1);        \</div><div class="line">            default:                                          \</div><div class="line">                ARM_COMPUTE_ERROR(<span class="stringliteral">&quot;Invalid lane&quot;</span>);            \</div><div class="line">        }                                                     \</div><div class="line">    }</div><div class="ttc" id="namespacearm__compute_1_1wrapper_xhtml_af05d7ba1b1ed3b05a92144feb0616611"><div class="ttname"><a href="namespacearm__compute_1_1wrapper.xhtml#af05d7ba1b1ed3b05a92144feb0616611">arm_compute::wrapper::vgetlane</a></div><div class="ttdeci">float vgetlane(const float32x2_t vector, const int lane)</div><div class="ttdef"><b>Definition:</b> <a href="getlane_8h_source.xhtml#l00097">getlane.h:97</a></div></div>
</div><!-- fragment -->
<p class="definition">Definition at line <a class="el" href="getlane_8h_source.xhtml#l00077">77</a> of file <a class="el" href="getlane_8h_source.xhtml">getlane.h</a>.</p>

</div>
</div>
<a id="ab21355519afdee817ec3095881a40da4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab21355519afdee817ec3095881a40da4">&#9670;&nbsp;</a></span>VGETLANE_IMPL_4</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define VGETLANE_IMPL_4</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">stype, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">vtype, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">postfix&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<b>Value:</b><div class="fragment"><div class="line"><span class="keyword">inline</span> stype <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#af05d7ba1b1ed3b05a92144feb0616611">vgetlane</a>(<span class="keyword">const</span> vtype vector, <span class="keyword">const</span> <span class="keywordtype">int</span> lane) \</div><div class="line">    {                                                         \</div><div class="line">        switch(lane)                                          \</div><div class="line">        {                                                     \</div><div class="line">            case 0:                                           \</div><div class="line">                return vget_lane_##postfix(vector, 0);        \</div><div class="line">            case 1:                                           \</div><div class="line">                return vget_lane_##postfix(vector, 1);        \</div><div class="line">            case 2:                                           \</div><div class="line">                return vget_lane_##postfix(vector, 2);        \</div><div class="line">            case 3:                                           \</div><div class="line">                return vget_lane_##postfix(vector, 3);        \</div><div class="line">            default:                                          \</div><div class="line">                ARM_COMPUTE_ERROR(<span class="stringliteral">&quot;Invalid lane&quot;</span>);            \</div><div class="line">        }                                                     \</div><div class="line">    }</div><div class="ttc" id="namespacearm__compute_1_1wrapper_xhtml_af05d7ba1b1ed3b05a92144feb0616611"><div class="ttname"><a href="namespacearm__compute_1_1wrapper.xhtml#af05d7ba1b1ed3b05a92144feb0616611">arm_compute::wrapper::vgetlane</a></div><div class="ttdeci">float vgetlane(const float32x2_t vector, const int lane)</div><div class="ttdef"><b>Definition:</b> <a href="getlane_8h_source.xhtml#l00097">getlane.h:97</a></div></div>
</div><!-- fragment -->
<p class="definition">Definition at line <a class="el" href="getlane_8h_source.xhtml#l00059">59</a> of file <a class="el" href="getlane_8h_source.xhtml">getlane.h</a>.</p>

</div>
</div>
<a id="a8c1f71cee67d8f261738daec48f791b3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8c1f71cee67d8f261738daec48f791b3">&#9670;&nbsp;</a></span>VGETLANE_IMPL_8</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define VGETLANE_IMPL_8</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">stype, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">vtype, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">postfix&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<b>Value:</b><div class="fragment"><div class="line"><span class="keyword">inline</span> stype <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#af05d7ba1b1ed3b05a92144feb0616611">vgetlane</a>(<span class="keyword">const</span> vtype vector, <span class="keyword">const</span> <span class="keywordtype">int</span> lane) \</div><div class="line">    {                                                         \</div><div class="line">        switch(lane)                                          \</div><div class="line">        {                                                     \</div><div class="line">            case 0:                                           \</div><div class="line">                return vget_lane_##postfix(vector, 0);        \</div><div class="line">            case 1:                                           \</div><div class="line">                return vget_lane_##postfix(vector, 1);        \</div><div class="line">            case 2:                                           \</div><div class="line">                return vget_lane_##postfix(vector, 2);        \</div><div class="line">            case 3:                                           \</div><div class="line">                return vget_lane_##postfix(vector, 3);        \</div><div class="line">            case 4:                                           \</div><div class="line">                return vget_lane_##postfix(vector, 4);        \</div><div class="line">            case 5:                                           \</div><div class="line">                return vget_lane_##postfix(vector, 5);        \</div><div class="line">            case 6:                                           \</div><div class="line">                return vget_lane_##postfix(vector, 6);        \</div><div class="line">            case 7:                                           \</div><div class="line">                return vget_lane_##postfix(vector, 7);        \</div><div class="line">            default:                                          \</div><div class="line">                ARM_COMPUTE_ERROR(<span class="stringliteral">&quot;Invalid lane&quot;</span>);            \</div><div class="line">        }                                                     \</div><div class="line">    }</div><div class="ttc" id="namespacearm__compute_1_1wrapper_xhtml_af05d7ba1b1ed3b05a92144feb0616611"><div class="ttname"><a href="namespacearm__compute_1_1wrapper.xhtml#af05d7ba1b1ed3b05a92144feb0616611">arm_compute::wrapper::vgetlane</a></div><div class="ttdeci">float vgetlane(const float32x2_t vector, const int lane)</div><div class="ttdef"><b>Definition:</b> <a href="getlane_8h_source.xhtml#l00097">getlane.h:97</a></div></div>
</div><!-- fragment -->
<p class="definition">Definition at line <a class="el" href="getlane_8h_source.xhtml#l00033">33</a> of file <a class="el" href="getlane_8h_source.xhtml">getlane.h</a>.</p>

</div>
</div>
<a id="a37206d490f1251da106a185eab356881"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a37206d490f1251da106a185eab356881">&#9670;&nbsp;</a></span>VGETQLANE_IMPL_16</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define VGETQLANE_IMPL_16</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">stype, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">vtype, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">postfix&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="getlane_8h_source.xhtml#l00102">102</a> of file <a class="el" href="getlane_8h_source.xhtml">getlane.h</a>.</p>

</div>
</div>
<a id="ac99257d17af60fc10fea00c4c6b21755"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac99257d17af60fc10fea00c4c6b21755">&#9670;&nbsp;</a></span>VGETQLANE_IMPL_4</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define VGETQLANE_IMPL_4</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">stype, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">vtype, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">postfix&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<b>Value:</b><div class="fragment"><div class="line"><span class="keyword">inline</span> stype <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#af5b5e943c70b14264adc2d023f3463eb">vgetqlane</a>(<span class="keyword">const</span> vtype vector, <span class="keyword">const</span> <span class="keywordtype">int</span> lane) \</div><div class="line">    {                                                          \</div><div class="line">        switch(lane)                                           \</div><div class="line">        {                                                      \</div><div class="line">            case 0:                                            \</div><div class="line">                return vgetq_lane_##postfix(vector, 0);        \</div><div class="line">            case 1:                                            \</div><div class="line">                return vgetq_lane_##postfix(vector, 1);        \</div><div class="line">            case 2:                                            \</div><div class="line">                return vgetq_lane_##postfix(vector, 2);        \</div><div class="line">            case 3:                                            \</div><div class="line">                return vgetq_lane_##postfix(vector, 3);        \</div><div class="line">            default:                                           \</div><div class="line">                ARM_COMPUTE_ERROR(<span class="stringliteral">&quot;Invalid lane&quot;</span>);             \</div><div class="line">        }                                                      \</div><div class="line">    }</div><div class="ttc" id="namespacearm__compute_1_1wrapper_xhtml_af5b5e943c70b14264adc2d023f3463eb"><div class="ttname"><a href="namespacearm__compute_1_1wrapper.xhtml#af5b5e943c70b14264adc2d023f3463eb">arm_compute::wrapper::vgetqlane</a></div><div class="ttdeci">float vgetqlane(const float32x4_t vector, const int lane)</div><div class="ttdef"><b>Definition:</b> <a href="getlane_8h_source.xhtml#l00194">getlane.h:194</a></div></div>
</div><!-- fragment -->
<p class="definition">Definition at line <a class="el" href="getlane_8h_source.xhtml#l00170">170</a> of file <a class="el" href="getlane_8h_source.xhtml">getlane.h</a>.</p>

</div>
</div>
<a id="ae68e7caec08496db4a3590e1aed6f606"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae68e7caec08496db4a3590e1aed6f606">&#9670;&nbsp;</a></span>VGETQLANE_IMPL_8</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define VGETQLANE_IMPL_8</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">stype, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">vtype, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">postfix&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<b>Value:</b><div class="fragment"><div class="line"><span class="keyword">inline</span> stype <a class="code" href="namespacearm__compute_1_1wrapper.xhtml#af5b5e943c70b14264adc2d023f3463eb">vgetqlane</a>(<span class="keyword">const</span> vtype vector, <span class="keyword">const</span> <span class="keywordtype">int</span> lane) \</div><div class="line">    {                                                          \</div><div class="line">        switch(lane)                                           \</div><div class="line">        {                                                      \</div><div class="line">            case 0:                                            \</div><div class="line">                return vgetq_lane_##postfix(vector, 0);        \</div><div class="line">            case 1:                                            \</div><div class="line">                return vgetq_lane_##postfix(vector, 1);        \</div><div class="line">            case 2:                                            \</div><div class="line">                return vgetq_lane_##postfix(vector, 2);        \</div><div class="line">            case 3:                                            \</div><div class="line">                return vgetq_lane_##postfix(vector, 3);        \</div><div class="line">            case 4:                                            \</div><div class="line">                return vgetq_lane_##postfix(vector, 4);        \</div><div class="line">            case 5:                                            \</div><div class="line">                return vgetq_lane_##postfix(vector, 5);        \</div><div class="line">            case 6:                                            \</div><div class="line">                return vgetq_lane_##postfix(vector, 6);        \</div><div class="line">            case 7:                                            \</div><div class="line">                return vgetq_lane_##postfix(vector, 7);        \</div><div class="line">            default:                                           \</div><div class="line">                ARM_COMPUTE_ERROR(<span class="stringliteral">&quot;Invalid lane&quot;</span>);             \</div><div class="line">        }                                                      \</div><div class="line">    }</div><div class="ttc" id="namespacearm__compute_1_1wrapper_xhtml_af5b5e943c70b14264adc2d023f3463eb"><div class="ttname"><a href="namespacearm__compute_1_1wrapper.xhtml#af5b5e943c70b14264adc2d023f3463eb">arm_compute::wrapper::vgetqlane</a></div><div class="ttdeci">float vgetqlane(const float32x4_t vector, const int lane)</div><div class="ttdef"><b>Definition:</b> <a href="getlane_8h_source.xhtml#l00194">getlane.h:194</a></div></div>
</div><!-- fragment -->
<p class="definition">Definition at line <a class="el" href="getlane_8h_source.xhtml#l00144">144</a> of file <a class="el" href="getlane_8h_source.xhtml">getlane.h</a>.</p>

</div>
</div>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_214608ef36d61442cb2b0c1c4e9a7def.xhtml">arm_compute</a></li><li class="navelem"><a class="el" href="dir_1fb090f0c6070330bfaccc4236d3ca0d.xhtml">core</a></li><li class="navelem"><a class="el" href="dir_315f6cf1ec0b2df3ae747ff8286a19f5.xhtml">NEON</a></li><li class="navelem"><a class="el" href="dir_9eca3c725728e372597fcd0d17c1ea0f.xhtml">wrapper</a></li><li class="navelem"><a class="el" href="dir_36bd1941057d7130e210a25993eacc69.xhtml">intrinsics</a></li><li class="navelem"><a class="el" href="getlane_8h.xhtml">getlane.h</a></li>
    <li class="footer">Generated on Thu Nov 22 2018 11:57:43 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
