<!-- HTML header for doxygen 1.8.9.1-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.11"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: src/core/CL/cl_kernels/winograd_input_transform.cl Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
  $(window).load(resizeHeight);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { init_search(); });
</script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">Compute Library
   &#160;<span id="projectnumber">18.08</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.11 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li><a href="annotated.xhtml"><span>Data&#160;Structures</span></a></li>
      <li class="current"><a href="files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.xhtml"><span>File&#160;List</span></a></li>
      <li><a href="globals.xhtml"><span>Globals</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('winograd__input__transform_8cl_source.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">winograd_input_transform.cl</div>  </div>
</div><!--header-->
<div class="contents">
<a href="winograd__input__transform_8cl.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/*</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> * Copyright (c) 2018 ARM Limited.</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> * SPDX-License-Identifier: MIT</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> * Permission is hereby granted, free of charge, to any person obtaining a copy</span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"> * of this software and associated documentation files (the &quot;Software&quot;), to</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"> * deal in the Software without restriction, including without limitation the</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"> * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or</span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment"> * sell copies of the Software, and to permit persons to whom the Software is</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"> * furnished to do so, subject to the following conditions:</span></div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"> * The above copyright notice and this permission notice shall be included in all</span></div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment"> * copies or substantial portions of the Software.</span></div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment"> * THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR</span></div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment"> * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,</span></div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment"> * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE</span></div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment"> * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER</span></div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment"> * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,</span></div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment"> * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE</span></div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment"> * SOFTWARE.</span></div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment"> */</span></div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="helpers_8h.xhtml">helpers.h</a>&quot;</span></div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;</div><div class="line"><a name="l00026"></a><span class="lineno"><a class="line" href="winograd__input__transform_8cl.xhtml#a993dcfcc7bd076d4d0f33be70e42e2b9">   26</a></span>&#160;<span class="preprocessor">#define OUTPUT_ROW_4x4_5x5(out, tmp, comm_fact)                     \</span></div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="preprocessor">    ({                                                              \</span></div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="preprocessor">        comm_fact.s0 = tmp.s2 - 4.25f * tmp.s4 + tmp.s6;            \</span></div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="preprocessor">        comm_fact.s1 = tmp.s1 - 4.25f * tmp.s3 + tmp.s5;            \</span></div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="preprocessor">        comm_fact.s2 = 2.5f * tmp.s3;                               \</span></div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="preprocessor">        comm_fact.s3 = 0.5f * tmp.s1 + 2.f * tmp.s5 - comm_fact.s2; \</span></div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="preprocessor">        comm_fact.s4 = 0.25f * tmp.s2 - 1.25f * tmp.s4 + tmp.s6;    \</span></div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="preprocessor">        comm_fact.s5 = 4.f * tmp.s2 + tmp.s6 - 5.f * tmp.s4;        \</span></div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="preprocessor">        comm_fact.s6 = 2.f * tmp.s1 + 0.5f * tmp.s5 - comm_fact.s2; \</span></div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;<span class="preprocessor">        \</span></div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;<span class="preprocessor">        out.s0 = tmp.s0 - tmp.s6 + 5.25f * tmp.s4 - 5.25f * tmp.s2; \</span></div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;<span class="preprocessor">        out.s1 = comm_fact.s0 + comm_fact.s1;                       \</span></div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;<span class="preprocessor">        out.s2 = comm_fact.s0 - comm_fact.s1;                       \</span></div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;<span class="preprocessor">        out.s3 = comm_fact.s3 + comm_fact.s4;                       \</span></div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;<span class="preprocessor">        out.s4 = comm_fact.s4 - comm_fact.s3;                       \</span></div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;<span class="preprocessor">        out.s5 = comm_fact.s5 + comm_fact.s6;                       \</span></div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;<span class="preprocessor">        out.s6 = comm_fact.s5 - comm_fact.s6;                       \</span></div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;<span class="preprocessor">        out.s7 = tmp.s7 - tmp.s1 + 5.25f * tmp.s3 - 5.25f * tmp.s5; \</span></div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;<span class="preprocessor">    })</span></div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;<span class="preprocessor">#if defined(NUM_TILES_X) &amp;&amp; defined(PAD_LEFT) &amp;&amp; defined(PAD_TOP) &amp;&amp; defined(OUTPUT_TILE_W) &amp;&amp; defined(OUTPUT_TILE_H)</span></div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;__kernel <span class="keywordtype">void</span> winograd_input_transform_2x2_3x3_stepz1_nchw(</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;    <a class="code" href="helpers_8h.xhtml#a6b83038822d1ae7ab619b684ed3b7fc0">TENSOR3D_DECLARATION</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a6743f0a130e8311e6f5b1a23df102472">src</a>),</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;    <a class="code" href="helpers_8h.xhtml#a6b83038822d1ae7ab619b684ed3b7fc0">TENSOR3D_DECLARATION</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>))</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;{</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;    <span class="keywordtype">int</span> x = get_global_id(0);</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;    <span class="keywordtype">int</span> y = get_global_id(1);</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;    <span class="keywordtype">int</span> z = get_global_id(2);</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;    <span class="comment">// Compute input address</span></div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;    __global uchar *src_addr = src_ptr + src_offset_first_element_in_bytes + x * OUTPUT_TILE_W * <span class="keyword">sizeof</span>(float) + y * OUTPUT_TILE_H * src_stride_y + z * src_stride_z;</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;    src_addr = src_addr - ((int)PAD_LEFT * <span class="keyword">sizeof</span>(<span class="keywordtype">float</span>)) - ((<span class="keywordtype">int</span>)PAD_TOP * src_stride_y);</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;<span class="preprocessor">#if defined(WINOGRAD_INPUT_TRANSFORM_HORIZONTAL)</span></div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;    float4 in_row0 = vload4(0, (__global <span class="keywordtype">float</span> *)(src_addr));</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;<span class="preprocessor">#elif defined(WINOGRAD_INPUT_TRANSFORM_VERTICAL) // !defined(WINOGRAD_FILTER_TRANSFORM_HORIZONTAL)</span></div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;    float4 in_row0 = (float4)(*((__global <span class="keywordtype">float</span> *)(src_addr + 0 * src_stride_y)),</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;                              *((__global <span class="keywordtype">float</span> *)(src_addr + 1 * src_stride_y)),</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;                              *((__global <span class="keywordtype">float</span> *)(src_addr + 2 * src_stride_y)),</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;                              *((__global <span class="keywordtype">float</span> *)(src_addr + 3 * src_stride_y)));</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;<span class="preprocessor">#else                                            // !defined(WINOGRAD_INPUT_TRANSFORM_HORIZONTAL) &amp;&amp; !defined(WINOGRAD_INPUT_TRANSFORM_VERTICAL)</span></div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;    float4       in_row0 = vload4(0, (__global <span class="keywordtype">float</span> *)(src_addr + 0 * src_stride_y));</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;    float4       in_row1 = vload4(0, (__global <span class="keywordtype">float</span> *)(src_addr + 1 * src_stride_y));</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;    float4       in_row2 = vload4(0, (__global <span class="keywordtype">float</span> *)(src_addr + 2 * src_stride_y));</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;    float4       in_row3 = vload4(0, (__global <span class="keywordtype">float</span> *)(src_addr + 3 * src_stride_y));</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;<span class="preprocessor">#endif                                           // !defined(WINOGRAD_INPUT_TRANSFORM_HORIZONTAL) &amp;&amp; !defined(WINOGRAD_INPUT_TRANSFORM_VERTICAL)</span></div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;    float4 tmp0 = in_row0;</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;<span class="preprocessor">#if !defined(WINOGRAD_INPUT_TRANSFORM_HORIZONTAL) &amp;&amp; !defined(WINOGRAD_INPUT_TRANSFORM_VERTICAL)</span></div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;    tmp0 -= in_row2;</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;<span class="preprocessor">#endif // !defined(WINOGRAD_INPUT_TRANSFORM_HORIZONTAL) &amp;&amp; !defined(WINOGRAD_INPUT_TRANSFORM_VERTICAL)</span></div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;    <span class="keywordtype">float</span> out00 = tmp0.s0 - tmp0.s2;</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;    <span class="keywordtype">float</span> out01 = tmp0.s1 + tmp0.s2;</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;    <span class="keywordtype">float</span> out02 = tmp0.s2 - tmp0.s1;</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;    <span class="keywordtype">float</span> out03 = tmp0.s1 - tmp0.s3;</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;<span class="preprocessor">#if !defined(WINOGRAD_INPUT_TRANSFORM_HORIZONTAL) &amp;&amp; !defined(WINOGRAD_INPUT_TRANSFORM_VERTICAL)</span></div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;    float4 tmp1 = in_row1 + in_row2;</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;    float4 tmp2 = in_row2 - in_row1;</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;    float4 tmp3 = in_row1 - in_row3;</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;    <span class="keywordtype">float</span> out10 = tmp1.s0 - tmp1.s2;</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;    <span class="keywordtype">float</span> out11 = tmp1.s1 + tmp1.s2;</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;    <span class="keywordtype">float</span> out12 = tmp1.s2 - tmp1.s1;</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;    <span class="keywordtype">float</span> out13 = tmp1.s1 - tmp1.s3;</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;    <span class="keywordtype">float</span> out20 = tmp2.s0 - tmp2.s2;</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;    <span class="keywordtype">float</span> out21 = tmp2.s1 + tmp2.s2;</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;    <span class="keywordtype">float</span> out22 = tmp2.s2 - tmp2.s1;</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;    <span class="keywordtype">float</span> out23 = tmp2.s1 - tmp2.s3;</div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;    <span class="keywordtype">float</span> out30 = tmp3.s0 - tmp3.s2;</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;    <span class="keywordtype">float</span> out31 = tmp3.s1 + tmp3.s2;</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;    <span class="keywordtype">float</span> out32 = tmp3.s2 - tmp3.s1;</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;    <span class="keywordtype">float</span> out33 = tmp3.s1 - tmp3.s3;</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;<span class="preprocessor">#endif // !defined(WINOGRAD_INPUT_TRANSFORM_HORIZONTAL) &amp;&amp; !defined(WINOGRAD_INPUT_TRANSFORM_VERTICAL)</span></div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;    __global uchar *dst_addr = dst_ptr + dst_offset_first_element_in_bytes + z * <span class="keyword">sizeof</span>(float) + (x + y * (<span class="keywordtype">int</span>)NUM_TILES_X) * dst_stride_y;</div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;    *((__global <span class="keywordtype">float</span> *)(dst_addr + 0 * dst_stride_z)) = out00; <span class="comment">// in_row0.s0; out00;</span></div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;    *((__global <span class="keywordtype">float</span> *)(dst_addr + 1 * dst_stride_z)) = out01; <span class="comment">// in_row0.s1; out01;</span></div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;    *((__global <span class="keywordtype">float</span> *)(dst_addr + 2 * dst_stride_z)) = out02; <span class="comment">// in_row0.s2; out02;</span></div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;    *((__global <span class="keywordtype">float</span> *)(dst_addr + 3 * dst_stride_z)) = out03; <span class="comment">// in_row0.s3; out03;</span></div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;</div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;<span class="preprocessor">#if !defined(WINOGRAD_INPUT_TRANSFORM_HORIZONTAL) &amp;&amp; !defined(WINOGRAD_INPUT_TRANSFORM_VERTICAL)</span></div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;    *((__global <span class="keywordtype">float</span> *)(dst_addr + 4 * dst_stride_z))  = out10;</div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;    *((__global <span class="keywordtype">float</span> *)(dst_addr + 5 * dst_stride_z))  = out11;</div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;    *((__global <span class="keywordtype">float</span> *)(dst_addr + 6 * dst_stride_z))  = out12;</div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;    *((__global <span class="keywordtype">float</span> *)(dst_addr + 7 * dst_stride_z))  = out13;</div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;    *((__global <span class="keywordtype">float</span> *)(dst_addr + 8 * dst_stride_z))  = out20;</div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;    *((__global <span class="keywordtype">float</span> *)(dst_addr + 9 * dst_stride_z))  = out21;</div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;    *((__global <span class="keywordtype">float</span> *)(dst_addr + 10 * dst_stride_z)) = out22;</div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;    *((__global <span class="keywordtype">float</span> *)(dst_addr + 11 * dst_stride_z)) = out23;</div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;    *((__global <span class="keywordtype">float</span> *)(dst_addr + 12 * dst_stride_z)) = out30;</div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;    *((__global <span class="keywordtype">float</span> *)(dst_addr + 13 * dst_stride_z)) = out31;</div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;    *((__global <span class="keywordtype">float</span> *)(dst_addr + 14 * dst_stride_z)) = out32;</div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;    *((__global <span class="keywordtype">float</span> *)(dst_addr + 15 * dst_stride_z)) = out33;</div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;<span class="preprocessor">#endif // !defined(WINOGRAD_INPUT_TRANSFORM_HORIZONTAL) &amp;&amp; !defined(WINOGRAD_INPUT_TRANSFORM_VERTICAL)</span></div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;}</div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;</div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;__kernel <span class="keywordtype">void</span> winograd_input_transform_2x2_3x3_stepz2_nchw(</div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;    <a class="code" href="helpers_8h.xhtml#a6b83038822d1ae7ab619b684ed3b7fc0">TENSOR3D_DECLARATION</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a6743f0a130e8311e6f5b1a23df102472">src</a>),</div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;    <a class="code" href="helpers_8h.xhtml#a6b83038822d1ae7ab619b684ed3b7fc0">TENSOR3D_DECLARATION</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>))</div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;{</div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;    <span class="keywordtype">int</span> x = get_global_id(0);</div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;    <span class="keywordtype">int</span> y = get_global_id(1);</div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;    <span class="keywordtype">int</span> z = get_global_id(2) * 2;</div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;</div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;    <span class="comment">// Compute input address</span></div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;    __global uchar *src_addr = src_ptr + src_offset_first_element_in_bytes + x * OUTPUT_TILE_W * <span class="keyword">sizeof</span>(float) + y * OUTPUT_TILE_H * src_stride_y + z * src_stride_z;</div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;</div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;    src_addr = src_addr - ((int)PAD_LEFT * <span class="keyword">sizeof</span>(<span class="keywordtype">float</span>)) - ((<span class="keywordtype">int</span>)PAD_TOP * src_stride_y);</div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;</div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;<span class="preprocessor">#if defined(WINOGRAD_INPUT_TRANSFORM_HORIZONTAL)</span></div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;    float4 in_row0 = vload4(0, (__global <span class="keywordtype">float</span> *)(src_addr));</div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;<span class="preprocessor">#elif defined(WINOGRAD_INPUT_TRANSFORM_VERTICAL) // !defined(WINOGRAD_FILTER_TRANSFORM_HORIZONTAL)</span></div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;    float4 in_row0 = (float4)(*((__global <span class="keywordtype">float</span> *)(src_addr + 0 * src_stride_y)),</div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;                              *((__global <span class="keywordtype">float</span> *)(src_addr + 1 * src_stride_y)),</div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;                              *((__global <span class="keywordtype">float</span> *)(src_addr + 2 * src_stride_y)),</div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;                              *((__global <span class="keywordtype">float</span> *)(src_addr + 3 * src_stride_y)));</div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;<span class="preprocessor">#else                                            // !defined(WINOGRAD_INPUT_TRANSFORM_HORIZONTAL) &amp;&amp; !defined(WINOGRAD_INPUT_TRANSFORM_VERTICAL)</span></div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;    float4       in_row0 = vload4(0, (__global <span class="keywordtype">float</span> *)(src_addr + 0 * src_stride_y));</div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;    float4       in_row1 = vload4(0, (__global <span class="keywordtype">float</span> *)(src_addr + 1 * src_stride_y));</div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;    float4       in_row2 = vload4(0, (__global <span class="keywordtype">float</span> *)(src_addr + 2 * src_stride_y));</div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;    float4       in_row3 = vload4(0, (__global <span class="keywordtype">float</span> *)(src_addr + 3 * src_stride_y));</div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;<span class="preprocessor">#endif                                           // !defined(WINOGRAD_INPUT_TRANSFORM_HORIZONTAL) &amp;&amp; !defined(WINOGRAD_INPUT_TRANSFORM_VERTICAL)</span></div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;</div><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;    src_addr += src_stride_z;</div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;<span class="preprocessor">#if defined(WINOGRAD_INPUT_TRANSFORM_HORIZONTAL)</span></div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;    float4 in_row4 = vload4(0, (__global <span class="keywordtype">float</span> *)(src_addr));</div><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;<span class="preprocessor">#elif defined(WINOGRAD_INPUT_TRANSFORM_VERTICAL) // !defined(WINOGRAD_FILTER_TRANSFORM_HORIZONTAL)</span></div><div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;    float4 in_row4 = (float4)(*((__global <span class="keywordtype">float</span> *)(src_addr + 0 * src_stride_y)),</div><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;                              *((__global <span class="keywordtype">float</span> *)(src_addr + 1 * src_stride_y)),</div><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;                              *((__global <span class="keywordtype">float</span> *)(src_addr + 2 * src_stride_y)),</div><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;                              *((__global <span class="keywordtype">float</span> *)(src_addr + 3 * src_stride_y)));</div><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;<span class="preprocessor">#else                                            // !defined(WINOGRAD_INPUT_TRANSFORM_HORIZONTAL) &amp;&amp; !defined(WINOGRAD_INPUT_TRANSFORM_VERTICAL)</span></div><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;    float4       in_row4 = vload4(0, (__global <span class="keywordtype">float</span> *)(src_addr + 0 * src_stride_y));</div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;    float4       in_row5 = vload4(0, (__global <span class="keywordtype">float</span> *)(src_addr + 1 * src_stride_y));</div><div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;    float4       in_row6 = vload4(0, (__global <span class="keywordtype">float</span> *)(src_addr + 2 * src_stride_y));</div><div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;    float4       in_row7 = vload4(0, (__global <span class="keywordtype">float</span> *)(src_addr + 3 * src_stride_y));</div><div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;<span class="preprocessor">#endif                                           // !defined(WINOGRAD_INPUT_TRANSFORM_HORIZONTAL) &amp;&amp; !defined(WINOGRAD_INPUT_TRANSFORM_VERTICAL)</span></div><div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;</div><div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;    float4 tmp0 = in_row0;</div><div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;    float4 tmp4 = in_row4;</div><div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;</div><div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;<span class="preprocessor">#if !defined(WINOGRAD_INPUT_TRANSFORM_HORIZONTAL) &amp;&amp; !defined(WINOGRAD_INPUT_TRANSFORM_VERTICAL)</span></div><div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;    tmp0 -= in_row2;</div><div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;    tmp4 -= in_row6;</div><div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;<span class="preprocessor">#endif // !defined(WINOGRAD_INPUT_TRANSFORM_HORIZONTAL) &amp;&amp; !defined(WINOGRAD_INPUT_TRANSFORM_VERTICAL)</span></div><div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;</div><div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;    float2 out00 = (float2)(tmp0.s0 - tmp0.s2, tmp4.s0 - tmp4.s2);</div><div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;    float2 out01 = (float2)(tmp0.s1 + tmp0.s2, tmp4.s1 + tmp4.s2);</div><div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;    float2 out02 = (float2)(tmp0.s2 - tmp0.s1, tmp4.s2 - tmp4.s1);</div><div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;    float2 out03 = (float2)(tmp0.s1 - tmp0.s3, tmp4.s1 - tmp4.s3);</div><div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;</div><div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;<span class="preprocessor">#if !defined(WINOGRAD_INPUT_TRANSFORM_HORIZONTAL) &amp;&amp; !defined(WINOGRAD_INPUT_TRANSFORM_VERTICAL)</span></div><div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;    float4 tmp1 = in_row1 + in_row2;</div><div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;    float4 tmp2 = in_row2 - in_row1;</div><div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;    float4 tmp3 = in_row1 - in_row3;</div><div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;</div><div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;    float4 tmp5 = in_row5 + in_row6;</div><div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;    float4 tmp6 = in_row6 - in_row5;</div><div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;    float4 tmp7 = in_row5 - in_row7;</div><div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;</div><div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;    float2 out10 = (float2)(tmp1.s0 - tmp1.s2, tmp5.s0 - tmp5.s2);</div><div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;    float2 out11 = (float2)(tmp1.s1 + tmp1.s2, tmp5.s1 + tmp5.s2);</div><div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;    float2 out12 = (float2)(tmp1.s2 - tmp1.s1, tmp5.s2 - tmp5.s1);</div><div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;    float2 out13 = (float2)(tmp1.s1 - tmp1.s3, tmp5.s1 - tmp5.s3);</div><div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;</div><div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;    float2 out20 = (float2)(tmp2.s0 - tmp2.s2, tmp6.s0 - tmp6.s2);</div><div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;    float2 out21 = (float2)(tmp2.s1 + tmp2.s2, tmp6.s1 + tmp6.s2);</div><div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;    float2 out22 = (float2)(tmp2.s2 - tmp2.s1, tmp6.s2 - tmp6.s1);</div><div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;    float2 out23 = (float2)(tmp2.s1 - tmp2.s3, tmp6.s1 - tmp6.s3);</div><div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;</div><div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;    float2 out30 = (float2)(tmp3.s0 - tmp3.s2, tmp7.s0 - tmp7.s2);</div><div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;    float2 out31 = (float2)(tmp3.s1 + tmp3.s2, tmp7.s1 + tmp7.s2);</div><div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;    float2 out32 = (float2)(tmp3.s2 - tmp3.s1, tmp7.s2 - tmp7.s1);</div><div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;    float2 out33 = (float2)(tmp3.s1 - tmp3.s3, tmp7.s1 - tmp7.s3);</div><div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;<span class="preprocessor">#endif // !defined(WINOGRAD_INPUT_TRANSFORM_HORIZONTAL) &amp;&amp; !defined(WINOGRAD_INPUT_TRANSFORM_VERTICAL)</span></div><div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;</div><div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;    __global uchar *dst_addr = dst_ptr + dst_offset_first_element_in_bytes + z * <span class="keyword">sizeof</span>(float) + (x + y * (<span class="keywordtype">int</span>)NUM_TILES_X) * dst_stride_y;</div><div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;</div><div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;    vstore2(out00, 0, (__global <span class="keywordtype">float</span> *)(dst_addr + 0 * dst_stride_z));</div><div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;    vstore2(out01, 0, (__global <span class="keywordtype">float</span> *)(dst_addr + 1 * dst_stride_z));</div><div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;    vstore2(out02, 0, (__global <span class="keywordtype">float</span> *)(dst_addr + 2 * dst_stride_z));</div><div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;    vstore2(out03, 0, (__global <span class="keywordtype">float</span> *)(dst_addr + 3 * dst_stride_z));</div><div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;</div><div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;<span class="preprocessor">#if !defined(WINOGRAD_INPUT_TRANSFORM_HORIZONTAL) &amp;&amp; !defined(WINOGRAD_INPUT_TRANSFORM_VERTICAL)</span></div><div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;    vstore2(out10, 0, (__global <span class="keywordtype">float</span> *)(dst_addr + 4 * dst_stride_z));</div><div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;    vstore2(out11, 0, (__global <span class="keywordtype">float</span> *)(dst_addr + 5 * dst_stride_z));</div><div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;    vstore2(out12, 0, (__global <span class="keywordtype">float</span> *)(dst_addr + 6 * dst_stride_z));</div><div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;    vstore2(out13, 0, (__global <span class="keywordtype">float</span> *)(dst_addr + 7 * dst_stride_z));</div><div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;    vstore2(out20, 0, (__global <span class="keywordtype">float</span> *)(dst_addr + 8 * dst_stride_z));</div><div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;    vstore2(out21, 0, (__global <span class="keywordtype">float</span> *)(dst_addr + 9 * dst_stride_z));</div><div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;    vstore2(out22, 0, (__global <span class="keywordtype">float</span> *)(dst_addr + 10 * dst_stride_z));</div><div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;    vstore2(out23, 0, (__global <span class="keywordtype">float</span> *)(dst_addr + 11 * dst_stride_z));</div><div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;    vstore2(out30, 0, (__global <span class="keywordtype">float</span> *)(dst_addr + 12 * dst_stride_z));</div><div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;    vstore2(out31, 0, (__global <span class="keywordtype">float</span> *)(dst_addr + 13 * dst_stride_z));</div><div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;    vstore2(out32, 0, (__global <span class="keywordtype">float</span> *)(dst_addr + 14 * dst_stride_z));</div><div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;    vstore2(out33, 0, (__global <span class="keywordtype">float</span> *)(dst_addr + 15 * dst_stride_z));</div><div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;<span class="preprocessor">#endif // !defined(WINOGRAD_INPUT_TRANSFORM_HORIZONTAL) &amp;&amp; !defined(WINOGRAD_INPUT_TRANSFORM_VERTICAL)</span></div><div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;}</div><div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;</div><div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;__kernel <span class="keywordtype">void</span> winograd_input_transform_4x4_3x3_stepz1_nchw(</div><div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;    <a class="code" href="helpers_8h.xhtml#a6b83038822d1ae7ab619b684ed3b7fc0">TENSOR3D_DECLARATION</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a6743f0a130e8311e6f5b1a23df102472">src</a>),</div><div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;    <a class="code" href="helpers_8h.xhtml#a6b83038822d1ae7ab619b684ed3b7fc0">TENSOR3D_DECLARATION</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>))</div><div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;{</div><div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;    <span class="keywordtype">int</span> x = get_global_id(0);</div><div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;    <span class="keywordtype">int</span> y = get_global_id(1);</div><div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;    <span class="keywordtype">int</span> z = get_global_id(2);</div><div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;</div><div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;    <span class="comment">// Compute input address</span></div><div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;    __global uchar *src_addr = src_ptr + src_offset_first_element_in_bytes + x * OUTPUT_TILE_W * <span class="keyword">sizeof</span>(float) + y * OUTPUT_TILE_H * src_stride_y + z * src_stride_z;</div><div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;</div><div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;    src_addr = src_addr - ((int)PAD_LEFT * <span class="keyword">sizeof</span>(<span class="keywordtype">float</span>)) - ((<span class="keywordtype">int</span>)PAD_TOP * src_stride_y);</div><div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;</div><div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;<span class="preprocessor">#if defined(WINOGRAD_INPUT_TRANSFORM_VERTICAL)</span></div><div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;    <span class="comment">// Row0</span></div><div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;    float4 d00 = (float4)(*((__global <span class="keywordtype">float</span> *)(src_addr + 0 * src_stride_y)),</div><div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;                          *((__global <span class="keywordtype">float</span> *)(src_addr + 1 * src_stride_y)),</div><div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;                          *((__global <span class="keywordtype">float</span> *)(src_addr + 2 * src_stride_y)),</div><div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;                          *((__global <span class="keywordtype">float</span> *)(src_addr + 3 * src_stride_y)));</div><div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;    float2 d01 = (float2)(*((__global <span class="keywordtype">float</span> *)(src_addr + 4 * src_stride_y)),</div><div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;                          *((__global <span class="keywordtype">float</span> *)(src_addr + 5 * src_stride_y)));</div><div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;<span class="preprocessor">#else  // defined(WINOGRAD_INPUT_TRANSFORM_VERTICAL)</span></div><div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;    <span class="comment">// Row0</span></div><div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;    float4       d00     = vload4(0, (__global <span class="keywordtype">float</span> *)(src_addr + 0 * src_stride_y));</div><div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;    float2       d01     = vload2(2, (__global <span class="keywordtype">float</span> *)(src_addr + 0 * src_stride_y));</div><div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;<span class="preprocessor">#endif // defined(WINOGRAD_INPUT_TRANSFORM_VERTICAL)</span></div><div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;</div><div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;    <span class="keywordtype">float</span> out0 = 0.0f;</div><div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;    <span class="keywordtype">float</span> out1 = 0.0f;</div><div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;    <span class="keywordtype">float</span> out2 = 0.0f;</div><div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;    <span class="keywordtype">float</span> out3 = 0.0f;</div><div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;    <span class="keywordtype">float</span> out4 = 0.0f;</div><div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;    <span class="keywordtype">float</span> out5 = 0.0f;</div><div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;</div><div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;    <span class="comment">// Channels [0, 5]: [out00, out01, out02, out03, out04, out05]</span></div><div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;    out0 += 16.0f * d00.s0 - 20.0f * d00.s2 + 4.0f * d01.s0;</div><div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160;    out1 += -16.0f * d00.s1 - 16.0f * d00.s2 + 4.0f * d00.s3 + 4.0f * d01.s0;</div><div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;    out2 += 16.0f * d00.s1 - 16.0f * d00.s2 - 4.0f * d00.s3 + 4.0f * d01.s0;</div><div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;    out3 += -8.0f * d00.s1 - 4.0f * d00.s2 + 8.0f * d00.s3 + 4.0f * d01.s0;</div><div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;    out4 += 8.0f * d00.s1 - 4.0f * d00.s2 - 8.0f * d00.s3 + 4.0f * d01.s0;</div><div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;    out5 += 16.0f * d00.s1 - 20.0f * d00.s3 + 4.0f * d01.s1;</div><div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;</div><div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;<span class="preprocessor">#if !defined(WINOGRAD_INPUT_TRANSFORM_HORIZONTAL) &amp;&amp; !defined(WINOGRAD_INPUT_TRANSFORM_VERTICAL)</span></div><div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;    <span class="comment">// Row4</span></div><div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160;    float4 d40 = vload4(0, (__global <span class="keywordtype">float</span> *)(src_addr + 4 * src_stride_y));</div><div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160;    float2 d41 = vload2(2, (__global <span class="keywordtype">float</span> *)(src_addr + 4 * src_stride_y));</div><div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;</div><div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160;    <span class="comment">// k0, k1, k2, k3, k4, k5 are common terms for row0, row1, row2, row3 and row4</span></div><div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;    <span class="keywordtype">float</span> k0 = d41.s0;</div><div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;    <span class="keywordtype">float</span> k1 = d41.s0;</div><div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;    <span class="keywordtype">float</span> k2 = d41.s0;</div><div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;    <span class="keywordtype">float</span> k3 = d41.s0;</div><div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;    <span class="keywordtype">float</span> k4 = d41.s0;</div><div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160;    <span class="keywordtype">float</span> k5 = 0.0f;</div><div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;</div><div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160;    k0 += 4.0f * d40.s0 - 5.0f * d40.s2;</div><div class="line"><a name="l00366"></a><span class="lineno">  366</span>&#160;    k1 += -4.0f * d40.s1 - 4.0f * d40.s2 + d40.s3;</div><div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160;    k2 += 4.0f * d40.s1 - 4.0f * d40.s2 - d40.s3;</div><div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160;    k3 += -2.0f * d40.s1 + 2.0f * d40.s3 - d40.s2;</div><div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160;    k4 += 2.0f * d40.s1 - 2.0f * d40.s3 - d40.s2;</div><div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160;    k5 += 4.0f * d40.s1 - 5.0f * d40.s3 + d41.s1;</div><div class="line"><a name="l00371"></a><span class="lineno">  371</span>&#160;</div><div class="line"><a name="l00372"></a><span class="lineno">  372</span>&#160;    out0 += k0;</div><div class="line"><a name="l00373"></a><span class="lineno">  373</span>&#160;    out1 += k1;</div><div class="line"><a name="l00374"></a><span class="lineno">  374</span>&#160;    out2 += k2;</div><div class="line"><a name="l00375"></a><span class="lineno">  375</span>&#160;    out3 += k3;</div><div class="line"><a name="l00376"></a><span class="lineno">  376</span>&#160;    out4 += k4;</div><div class="line"><a name="l00377"></a><span class="lineno">  377</span>&#160;    out5 += k5;</div><div class="line"><a name="l00378"></a><span class="lineno">  378</span>&#160;</div><div class="line"><a name="l00379"></a><span class="lineno">  379</span>&#160;    <span class="comment">// Row2</span></div><div class="line"><a name="l00380"></a><span class="lineno">  380</span>&#160;    float4 d20 = vload4(0, (__global <span class="keywordtype">float</span> *)(src_addr + 2 * src_stride_y));</div><div class="line"><a name="l00381"></a><span class="lineno">  381</span>&#160;    float2 d21 = vload2(2, (__global <span class="keywordtype">float</span> *)(src_addr + 2 * src_stride_y));</div><div class="line"><a name="l00382"></a><span class="lineno">  382</span>&#160;</div><div class="line"><a name="l00383"></a><span class="lineno">  383</span>&#160;    out0 += -20.0f * d20.s0 + 25.0f * d20.s2 - 5.0f * d21.s0;</div><div class="line"><a name="l00384"></a><span class="lineno">  384</span>&#160;    out1 += +20.0f * d20.s1 + 20.0f * d20.s2 - 5.0f * d20.s3 - 5.0f * d21.s0;</div><div class="line"><a name="l00385"></a><span class="lineno">  385</span>&#160;    out2 += -20.0f * d20.s1 + 20.0f * d20.s2 + 5.0f * d20.s3 - 5.0f * d21.s0;</div><div class="line"><a name="l00386"></a><span class="lineno">  386</span>&#160;    out3 += +10.0f * d20.s1 + 5.0f * d20.s2 - 10.0f * d20.s3 - 5.0f * d21.s0;</div><div class="line"><a name="l00387"></a><span class="lineno">  387</span>&#160;    out4 += -10.0f * d20.s1 + 5.0f * d20.s2 + 10.0f * d20.s3 - 5.0f * d21.s0;</div><div class="line"><a name="l00388"></a><span class="lineno">  388</span>&#160;    out5 += -20.0f * d20.s1 + 25.0f * d20.s3 - 5.0f * d21.s1;</div><div class="line"><a name="l00389"></a><span class="lineno">  389</span>&#160;<span class="preprocessor">#endif // #if !defined(WINOGRAD_INPUT_TRANSFORM_HORIZONTAL) &amp;&amp; !defined(WINOGRAD_INPUT_TRANSFORM_VERTICAL)</span></div><div class="line"><a name="l00390"></a><span class="lineno">  390</span>&#160;</div><div class="line"><a name="l00391"></a><span class="lineno">  391</span>&#160;    <span class="comment">// Compute destination address</span></div><div class="line"><a name="l00392"></a><span class="lineno">  392</span>&#160;    __global <span class="keywordtype">float</span> *dst_addr = (__global <span class="keywordtype">float</span> *)(dst_ptr + dst_offset_first_element_in_bytes + z * <span class="keyword">sizeof</span>(<span class="keywordtype">float</span>) + (x + y * (int)NUM_TILES_X) * dst_stride_y);</div><div class="line"><a name="l00393"></a><span class="lineno">  393</span>&#160;</div><div class="line"><a name="l00394"></a><span class="lineno">  394</span>&#160;    uint dst_plane_stride = dst_stride_z / <span class="keyword">sizeof</span>(float);</div><div class="line"><a name="l00395"></a><span class="lineno">  395</span>&#160;</div><div class="line"><a name="l00396"></a><span class="lineno">  396</span>&#160;    *(dst_addr) = out0;</div><div class="line"><a name="l00397"></a><span class="lineno">  397</span>&#160;    dst_addr += dst_plane_stride;</div><div class="line"><a name="l00398"></a><span class="lineno">  398</span>&#160;    *(dst_addr) = out1;</div><div class="line"><a name="l00399"></a><span class="lineno">  399</span>&#160;    dst_addr += dst_plane_stride;</div><div class="line"><a name="l00400"></a><span class="lineno">  400</span>&#160;    *(dst_addr) = out2;</div><div class="line"><a name="l00401"></a><span class="lineno">  401</span>&#160;    dst_addr += dst_plane_stride;</div><div class="line"><a name="l00402"></a><span class="lineno">  402</span>&#160;    *(dst_addr) = out3;</div><div class="line"><a name="l00403"></a><span class="lineno">  403</span>&#160;    dst_addr += dst_plane_stride;</div><div class="line"><a name="l00404"></a><span class="lineno">  404</span>&#160;    *(dst_addr) = out4;</div><div class="line"><a name="l00405"></a><span class="lineno">  405</span>&#160;    dst_addr += dst_plane_stride;</div><div class="line"><a name="l00406"></a><span class="lineno">  406</span>&#160;    *(dst_addr) = out5;</div><div class="line"><a name="l00407"></a><span class="lineno">  407</span>&#160;    dst_addr += dst_plane_stride;</div><div class="line"><a name="l00408"></a><span class="lineno">  408</span>&#160;</div><div class="line"><a name="l00409"></a><span class="lineno">  409</span>&#160;<span class="preprocessor">#if !defined(WINOGRAD_INPUT_TRANSFORM_HORIZONTAL) &amp;&amp; !defined(WINOGRAD_INPUT_TRANSFORM_VERTICAL)</span></div><div class="line"><a name="l00410"></a><span class="lineno">  410</span>&#160;    <span class="keywordtype">float</span> out6  = k0;</div><div class="line"><a name="l00411"></a><span class="lineno">  411</span>&#160;    <span class="keywordtype">float</span> out7  = k1;</div><div class="line"><a name="l00412"></a><span class="lineno">  412</span>&#160;    <span class="keywordtype">float</span> out8  = k2;</div><div class="line"><a name="l00413"></a><span class="lineno">  413</span>&#160;    <span class="keywordtype">float</span> out9  = k3;</div><div class="line"><a name="l00414"></a><span class="lineno">  414</span>&#160;    <span class="keywordtype">float</span> out10 = k4;</div><div class="line"><a name="l00415"></a><span class="lineno">  415</span>&#160;    <span class="keywordtype">float</span> out11 = k5;</div><div class="line"><a name="l00416"></a><span class="lineno">  416</span>&#160;    <span class="keywordtype">float</span> out12 = k0;</div><div class="line"><a name="l00417"></a><span class="lineno">  417</span>&#160;    <span class="keywordtype">float</span> out13 = k1;</div><div class="line"><a name="l00418"></a><span class="lineno">  418</span>&#160;    <span class="keywordtype">float</span> out14 = k2;</div><div class="line"><a name="l00419"></a><span class="lineno">  419</span>&#160;    <span class="keywordtype">float</span> out15 = k3;</div><div class="line"><a name="l00420"></a><span class="lineno">  420</span>&#160;    <span class="keywordtype">float</span> out16 = k4;</div><div class="line"><a name="l00421"></a><span class="lineno">  421</span>&#160;    <span class="keywordtype">float</span> out17 = k5;</div><div class="line"><a name="l00422"></a><span class="lineno">  422</span>&#160;    <span class="keywordtype">float</span> out18 = k0;</div><div class="line"><a name="l00423"></a><span class="lineno">  423</span>&#160;    <span class="keywordtype">float</span> out19 = k1;</div><div class="line"><a name="l00424"></a><span class="lineno">  424</span>&#160;    <span class="keywordtype">float</span> out20 = k2;</div><div class="line"><a name="l00425"></a><span class="lineno">  425</span>&#160;    <span class="keywordtype">float</span> out21 = k3;</div><div class="line"><a name="l00426"></a><span class="lineno">  426</span>&#160;    <span class="keywordtype">float</span> out22 = k4;</div><div class="line"><a name="l00427"></a><span class="lineno">  427</span>&#160;    <span class="keywordtype">float</span> out23 = k5;</div><div class="line"><a name="l00428"></a><span class="lineno">  428</span>&#160;    <span class="keywordtype">float</span> out24 = k0;</div><div class="line"><a name="l00429"></a><span class="lineno">  429</span>&#160;    <span class="keywordtype">float</span> out25 = k1;</div><div class="line"><a name="l00430"></a><span class="lineno">  430</span>&#160;    <span class="keywordtype">float</span> out26 = k2;</div><div class="line"><a name="l00431"></a><span class="lineno">  431</span>&#160;    <span class="keywordtype">float</span> out27 = k3;</div><div class="line"><a name="l00432"></a><span class="lineno">  432</span>&#160;    <span class="keywordtype">float</span> out28 = k4;</div><div class="line"><a name="l00433"></a><span class="lineno">  433</span>&#160;    <span class="keywordtype">float</span> out29 = k5;</div><div class="line"><a name="l00434"></a><span class="lineno">  434</span>&#160;</div><div class="line"><a name="l00435"></a><span class="lineno">  435</span>&#160;    <span class="comment">// Row1</span></div><div class="line"><a name="l00436"></a><span class="lineno">  436</span>&#160;    float4 d10 = vload4(0, (__global <span class="keywordtype">float</span> *)(src_addr + 1 * src_stride_y));</div><div class="line"><a name="l00437"></a><span class="lineno">  437</span>&#160;    float2 d11 = vload2(2, (__global <span class="keywordtype">float</span> *)(src_addr + 1 * src_stride_y));</div><div class="line"><a name="l00438"></a><span class="lineno">  438</span>&#160;</div><div class="line"><a name="l00439"></a><span class="lineno">  439</span>&#160;    <span class="comment">// Row3</span></div><div class="line"><a name="l00440"></a><span class="lineno">  440</span>&#160;    float4 d30 = vload4(0, (__global <span class="keywordtype">float</span> *)(src_addr + 3 * src_stride_y));</div><div class="line"><a name="l00441"></a><span class="lineno">  441</span>&#160;    float2 d31 = vload2(2, (__global <span class="keywordtype">float</span> *)(src_addr + 3 * src_stride_y));</div><div class="line"><a name="l00442"></a><span class="lineno">  442</span>&#160;</div><div class="line"><a name="l00443"></a><span class="lineno">  443</span>&#160;    <span class="comment">// Compute common parts for the channels between [6, 29]</span></div><div class="line"><a name="l00444"></a><span class="lineno">  444</span>&#160;    <span class="comment">// Channels [6, 11]:  [out10, out11, out12, out13, out14, out15]</span></div><div class="line"><a name="l00445"></a><span class="lineno">  445</span>&#160;    <span class="comment">// Channels [12, 17]: [out20, out21, out22, out23, out24, out25]</span></div><div class="line"><a name="l00446"></a><span class="lineno">  446</span>&#160;    <span class="keywordtype">float</span> part0  = -16.0f * d20.s0 + 20.0f * d20.s2 - 4.0f * d21.s0;</div><div class="line"><a name="l00447"></a><span class="lineno">  447</span>&#160;    <span class="keywordtype">float</span> part1  = 16.0f * d10.s0 - 20.0f * d10.s2 + 4.0f * d11.s0 - 4.0f * d30.s0 + 5.0f * d30.s2 - d31.s0;</div><div class="line"><a name="l00448"></a><span class="lineno">  448</span>&#160;    <span class="keywordtype">float</span> part2  = 16.0f * d20.s2 - 4.0f * d21.s0;</div><div class="line"><a name="l00449"></a><span class="lineno">  449</span>&#160;    <span class="keywordtype">float</span> part3  = 16.0f * d20.s1 - 4.0f * d20.s3;</div><div class="line"><a name="l00450"></a><span class="lineno">  450</span>&#160;    <span class="keywordtype">float</span> part4  = 16.0f * d10.s2 - 4.0f * d11.s0 - 4.0f * d30.s2 + d31.s0;</div><div class="line"><a name="l00451"></a><span class="lineno">  451</span>&#160;    <span class="keywordtype">float</span> part5  = 16.0f * d10.s1 - 4.0f * d10.s3 - 4.0f * d30.s1 + d30.s3;</div><div class="line"><a name="l00452"></a><span class="lineno">  452</span>&#160;    <span class="keywordtype">float</span> part6  = 4.0f * d20.s2 - 4.0f * d21.s0;</div><div class="line"><a name="l00453"></a><span class="lineno">  453</span>&#160;    <span class="keywordtype">float</span> part7  = 8.0f * d10.s1 - 8.0f * d10.s3 - 2.0f * d30.s1 + 2.0f * d30.s3;</div><div class="line"><a name="l00454"></a><span class="lineno">  454</span>&#160;    <span class="keywordtype">float</span> part8  = 4.0f * d10.s2 - 4.0f * d11.s0 - d30.s2 + d31.s0;</div><div class="line"><a name="l00455"></a><span class="lineno">  455</span>&#160;    <span class="keywordtype">float</span> part9  = 8.0f * d20.s1 - 8.0f * d20.s3;</div><div class="line"><a name="l00456"></a><span class="lineno">  456</span>&#160;    <span class="keywordtype">float</span> part10 = -16.0f * d20.s1 + 20.0f * d20.s3 - 4.0f * d21.s1;</div><div class="line"><a name="l00457"></a><span class="lineno">  457</span>&#160;    <span class="keywordtype">float</span> part11 = -16.0f * d10.s1 + 20.0f * d10.s3 - 4.0f * d11.s1 + 4.0f * d30.s1 - 5.0f * d30.s3 + d31.s1;</div><div class="line"><a name="l00458"></a><span class="lineno">  458</span>&#160;</div><div class="line"><a name="l00459"></a><span class="lineno">  459</span>&#160;    <span class="comment">// Channels [18, 23]: [out30, out31, out32, out33, out34, out35]</span></div><div class="line"><a name="l00460"></a><span class="lineno">  460</span>&#160;    <span class="comment">// Channels [24, 29]: [out40, out41, out42, out43, out44, out45]</span></div><div class="line"><a name="l00461"></a><span class="lineno">  461</span>&#160;    <span class="keywordtype">float</span> part12 = 8.0f * d10.s0 - 10.0f * d10.s2 + 2.0f * d11.s0 - 8.0f * d30.s0 + 10.0f * d30.s2 - 2.0f * d31.s0;</div><div class="line"><a name="l00462"></a><span class="lineno">  462</span>&#160;    <span class="keywordtype">float</span> part13 = part0 * 0.25f; <span class="comment">// -4.0f * d20.s0 + 5.0f * d20.s2 - d21.s0</span></div><div class="line"><a name="l00463"></a><span class="lineno">  463</span>&#160;    <span class="keywordtype">float</span> part14 = part2 * 0.25f; <span class="comment">// 4.0f * d20.s2 - d21.s0</span></div><div class="line"><a name="l00464"></a><span class="lineno">  464</span>&#160;    <span class="keywordtype">float</span> part15 = 8.0f * d10.s1 - 2.0f * d10.s3 - 8.0f * d30.s1 + 2.0f * d30.s3;</div><div class="line"><a name="l00465"></a><span class="lineno">  465</span>&#160;    <span class="keywordtype">float</span> part16 = 8.0f * d10.s2 - 2.0f * d11.s0 - 8.0f * d30.s2 + 2.0f * d31.s0;</div><div class="line"><a name="l00466"></a><span class="lineno">  466</span>&#160;    <span class="keywordtype">float</span> part17 = part3 * 0.25f; <span class="comment">// 4.0f * d20.s1 - d20.s3</span></div><div class="line"><a name="l00467"></a><span class="lineno">  467</span>&#160;    <span class="keywordtype">float</span> part18 = part6 * 0.25f; <span class="comment">// d20.s2 - d21.s0</span></div><div class="line"><a name="l00468"></a><span class="lineno">  468</span>&#160;    <span class="keywordtype">float</span> part19 = 4.0f * d10.s1 - 4.0f * d10.s3 - 4.0f * d30.s1 + 4.0f * d30.s3;</div><div class="line"><a name="l00469"></a><span class="lineno">  469</span>&#160;    <span class="keywordtype">float</span> part20 = 2.0f * d10.s2 - 2.0f * d11.s0 - 2.0f * d30.s2 + 2.0f * d31.s0;</div><div class="line"><a name="l00470"></a><span class="lineno">  470</span>&#160;    <span class="keywordtype">float</span> part21 = part9 * 0.25f;                                                 <span class="comment">// 2.0f * (d20.s1 - d20.s3)</span></div><div class="line"><a name="l00471"></a><span class="lineno">  471</span>&#160;    <span class="keywordtype">float</span> part22 = part10 * 0.25f;                                                <span class="comment">// - 4.0f * d20.s1 + 5.0f * d20.s3 - d21.s1</span></div><div class="line"><a name="l00472"></a><span class="lineno">  472</span>&#160;    <span class="keywordtype">float</span> part23 = part11 * 0.5f + 6.0f * d30.s1 - 7.5f * d30.s3 + 1.5f * d31.s1; <span class="comment">// - 8.0f * d10.s1 + 10.0f * d10.s3 - 2.0f * d11.s1 + 8.0f * d30.s1 - 10.0f * d30.s3 + 2.0f * d31.s1;</span></div><div class="line"><a name="l00473"></a><span class="lineno">  473</span>&#160;</div><div class="line"><a name="l00474"></a><span class="lineno">  474</span>&#160;    out6 += part0 - part1;</div><div class="line"><a name="l00475"></a><span class="lineno">  475</span>&#160;    out12 += part0 + part1;</div><div class="line"><a name="l00476"></a><span class="lineno">  476</span>&#160;    out7 += part2 + part3 + part4 + part5;</div><div class="line"><a name="l00477"></a><span class="lineno">  477</span>&#160;    out8 += part2 - part3 + part4 - part5;</div><div class="line"><a name="l00478"></a><span class="lineno">  478</span>&#160;    out13 += part2 + part3 - part4 - part5;</div><div class="line"><a name="l00479"></a><span class="lineno">  479</span>&#160;    out14 += part2 - part3 - part4 + part5;</div><div class="line"><a name="l00480"></a><span class="lineno">  480</span>&#160;    out9 += part6 + part7 + part8 + part9;</div><div class="line"><a name="l00481"></a><span class="lineno">  481</span>&#160;    out10 += part6 - part7 + part8 - part9;</div><div class="line"><a name="l00482"></a><span class="lineno">  482</span>&#160;    out15 += part6 - part7 - part8 + part9;</div><div class="line"><a name="l00483"></a><span class="lineno">  483</span>&#160;    out16 += part6 + part7 - part8 - part9;</div><div class="line"><a name="l00484"></a><span class="lineno">  484</span>&#160;    out11 += part10 + part11;</div><div class="line"><a name="l00485"></a><span class="lineno">  485</span>&#160;    out17 += part10 - part11;</div><div class="line"><a name="l00486"></a><span class="lineno">  486</span>&#160;</div><div class="line"><a name="l00487"></a><span class="lineno">  487</span>&#160;    out18 += part13 - part12;</div><div class="line"><a name="l00488"></a><span class="lineno">  488</span>&#160;    out24 += part13 + part12;</div><div class="line"><a name="l00489"></a><span class="lineno">  489</span>&#160;    out19 += part14 + part15 + part16 + part17;</div><div class="line"><a name="l00490"></a><span class="lineno">  490</span>&#160;    out20 += part14 - part15 + part16 - part17;</div><div class="line"><a name="l00491"></a><span class="lineno">  491</span>&#160;    out25 += part14 - part15 - part16 + part17;</div><div class="line"><a name="l00492"></a><span class="lineno">  492</span>&#160;    out26 += part14 + part15 - part16 - part17;</div><div class="line"><a name="l00493"></a><span class="lineno">  493</span>&#160;    out21 += part18 + part19 + part20 + part21;</div><div class="line"><a name="l00494"></a><span class="lineno">  494</span>&#160;    out22 += part18 - part19 + part20 - part21;</div><div class="line"><a name="l00495"></a><span class="lineno">  495</span>&#160;    out27 += part18 - part19 - part20 + part21;</div><div class="line"><a name="l00496"></a><span class="lineno">  496</span>&#160;    out28 += part18 + part19 - part20 - part21;</div><div class="line"><a name="l00497"></a><span class="lineno">  497</span>&#160;    out23 += part22 + part23;</div><div class="line"><a name="l00498"></a><span class="lineno">  498</span>&#160;    out29 += part22 - part23;</div><div class="line"><a name="l00499"></a><span class="lineno">  499</span>&#160;</div><div class="line"><a name="l00500"></a><span class="lineno">  500</span>&#160;    *(dst_addr) = out6;</div><div class="line"><a name="l00501"></a><span class="lineno">  501</span>&#160;    dst_addr += dst_plane_stride;</div><div class="line"><a name="l00502"></a><span class="lineno">  502</span>&#160;    *(dst_addr) = out7;</div><div class="line"><a name="l00503"></a><span class="lineno">  503</span>&#160;    dst_addr += dst_plane_stride;</div><div class="line"><a name="l00504"></a><span class="lineno">  504</span>&#160;    *(dst_addr) = out8;</div><div class="line"><a name="l00505"></a><span class="lineno">  505</span>&#160;    dst_addr += dst_plane_stride;</div><div class="line"><a name="l00506"></a><span class="lineno">  506</span>&#160;    *(dst_addr) = out9;</div><div class="line"><a name="l00507"></a><span class="lineno">  507</span>&#160;    dst_addr += dst_plane_stride;</div><div class="line"><a name="l00508"></a><span class="lineno">  508</span>&#160;    *(dst_addr) = out10;</div><div class="line"><a name="l00509"></a><span class="lineno">  509</span>&#160;    dst_addr += dst_plane_stride;</div><div class="line"><a name="l00510"></a><span class="lineno">  510</span>&#160;    *(dst_addr) = out11;</div><div class="line"><a name="l00511"></a><span class="lineno">  511</span>&#160;    dst_addr += dst_plane_stride;</div><div class="line"><a name="l00512"></a><span class="lineno">  512</span>&#160;    *(dst_addr) = out12;</div><div class="line"><a name="l00513"></a><span class="lineno">  513</span>&#160;    dst_addr += dst_plane_stride;</div><div class="line"><a name="l00514"></a><span class="lineno">  514</span>&#160;    *(dst_addr) = out13;</div><div class="line"><a name="l00515"></a><span class="lineno">  515</span>&#160;    dst_addr += dst_plane_stride;</div><div class="line"><a name="l00516"></a><span class="lineno">  516</span>&#160;    *(dst_addr) = out14;</div><div class="line"><a name="l00517"></a><span class="lineno">  517</span>&#160;    dst_addr += dst_plane_stride;</div><div class="line"><a name="l00518"></a><span class="lineno">  518</span>&#160;    *(dst_addr) = out15;</div><div class="line"><a name="l00519"></a><span class="lineno">  519</span>&#160;    dst_addr += dst_plane_stride;</div><div class="line"><a name="l00520"></a><span class="lineno">  520</span>&#160;    *(dst_addr) = out16;</div><div class="line"><a name="l00521"></a><span class="lineno">  521</span>&#160;    dst_addr += dst_plane_stride;</div><div class="line"><a name="l00522"></a><span class="lineno">  522</span>&#160;    *(dst_addr) = out17;</div><div class="line"><a name="l00523"></a><span class="lineno">  523</span>&#160;    dst_addr += dst_plane_stride;</div><div class="line"><a name="l00524"></a><span class="lineno">  524</span>&#160;</div><div class="line"><a name="l00525"></a><span class="lineno">  525</span>&#160;    *(dst_addr) = out18;</div><div class="line"><a name="l00526"></a><span class="lineno">  526</span>&#160;    dst_addr += dst_plane_stride;</div><div class="line"><a name="l00527"></a><span class="lineno">  527</span>&#160;    *(dst_addr) = out19;</div><div class="line"><a name="l00528"></a><span class="lineno">  528</span>&#160;    dst_addr += dst_plane_stride;</div><div class="line"><a name="l00529"></a><span class="lineno">  529</span>&#160;    *(dst_addr) = out20;</div><div class="line"><a name="l00530"></a><span class="lineno">  530</span>&#160;    dst_addr += dst_plane_stride;</div><div class="line"><a name="l00531"></a><span class="lineno">  531</span>&#160;    *(dst_addr) = out21;</div><div class="line"><a name="l00532"></a><span class="lineno">  532</span>&#160;    dst_addr += dst_plane_stride;</div><div class="line"><a name="l00533"></a><span class="lineno">  533</span>&#160;    *(dst_addr) = out22;</div><div class="line"><a name="l00534"></a><span class="lineno">  534</span>&#160;    dst_addr += dst_plane_stride;</div><div class="line"><a name="l00535"></a><span class="lineno">  535</span>&#160;    *(dst_addr) = out23;</div><div class="line"><a name="l00536"></a><span class="lineno">  536</span>&#160;    dst_addr += dst_plane_stride;</div><div class="line"><a name="l00537"></a><span class="lineno">  537</span>&#160;    *(dst_addr) = out24;</div><div class="line"><a name="l00538"></a><span class="lineno">  538</span>&#160;    dst_addr += dst_plane_stride;</div><div class="line"><a name="l00539"></a><span class="lineno">  539</span>&#160;    *(dst_addr) = out25;</div><div class="line"><a name="l00540"></a><span class="lineno">  540</span>&#160;    dst_addr += dst_plane_stride;</div><div class="line"><a name="l00541"></a><span class="lineno">  541</span>&#160;    *(dst_addr) = out26;</div><div class="line"><a name="l00542"></a><span class="lineno">  542</span>&#160;    dst_addr += dst_plane_stride;</div><div class="line"><a name="l00543"></a><span class="lineno">  543</span>&#160;    *(dst_addr) = out27;</div><div class="line"><a name="l00544"></a><span class="lineno">  544</span>&#160;    dst_addr += dst_plane_stride;</div><div class="line"><a name="l00545"></a><span class="lineno">  545</span>&#160;    *(dst_addr) = out28;</div><div class="line"><a name="l00546"></a><span class="lineno">  546</span>&#160;    dst_addr += dst_plane_stride;</div><div class="line"><a name="l00547"></a><span class="lineno">  547</span>&#160;    *(dst_addr) = out29;</div><div class="line"><a name="l00548"></a><span class="lineno">  548</span>&#160;    dst_addr += dst_plane_stride;</div><div class="line"><a name="l00549"></a><span class="lineno">  549</span>&#160;</div><div class="line"><a name="l00550"></a><span class="lineno">  550</span>&#160;    <span class="comment">// Row5</span></div><div class="line"><a name="l00551"></a><span class="lineno">  551</span>&#160;    float4 d50 = vload4(0, (__global <span class="keywordtype">float</span> *)(src_addr + 5 * src_stride_y));</div><div class="line"><a name="l00552"></a><span class="lineno">  552</span>&#160;    float2 d51 = vload2(2, (__global <span class="keywordtype">float</span> *)(src_addr + 5 * src_stride_y));</div><div class="line"><a name="l00553"></a><span class="lineno">  553</span>&#160;</div><div class="line"><a name="l00554"></a><span class="lineno">  554</span>&#160;    <span class="comment">// Channels [30, 35]</span></div><div class="line"><a name="l00555"></a><span class="lineno">  555</span>&#160;    out0 = 16.0f * d10.s0 - 20.0f * d10.s2 - 20.0f * d30.s0 + 25.0f * d30.s2 + 4.0f * d50.s0 - 5.0f * d50.s2 + d51.s0 + 4.0f * d11.s0 - 5.0f * d31.s0;</div><div class="line"><a name="l00556"></a><span class="lineno">  556</span>&#160;    out1 = -16.0f * d10.s1 - 16.0f * d10.s2 + 4.0f * d10.s3 + 20.0f * d30.s1 + 20.0f * d30.s2 - 5.0f * d30.s3 - 4.0f * d50.s1 - 4.0f * d50.s2 + d50.s3 + d51.s0 + 4.0f * d11.s0 - 5.0f * d31.s0;</div><div class="line"><a name="l00557"></a><span class="lineno">  557</span>&#160;    out2 = 16.0f * d10.s1 - 16.0f * d10.s2 - 4.0f * d10.s3 - 20.0f * d30.s1 + 20.0f * d30.s2 + 5.0f * d30.s3 + 4.0f * d50.s1 - 4.0f * d50.s2 - d50.s3 + d51.s0 + 4.0f * d11.s0 - 5.0f * d31.s0;</div><div class="line"><a name="l00558"></a><span class="lineno">  558</span>&#160;    out3 = -8.0f * d10.s1 - 4.0f * d10.s2 + 8.0f * d10.s3 + 10.0f * d30.s1 - 10.0f * d30.s3 + 5.0f * d30.s2 - 2.0f * d50.s1 + 2.0f * d50.s3 - d50.s2 + d51.s0 + 4.0f * d11.s0 - 5.0f * d31.s0;</div><div class="line"><a name="l00559"></a><span class="lineno">  559</span>&#160;    out4 = 8.0f * d10.s1 - 4.0f * d10.s2 - 8.0f * d10.s3 - 10.0f * d30.s1 + 5.0f * d30.s2 + 10.0f * d30.s3 + 2.0f * d50.s1 - 2.0f * d50.s3 - d50.s2 + d51.s0 + 4.0f * d11.s0 - 5.0f * d31.s0;</div><div class="line"><a name="l00560"></a><span class="lineno">  560</span>&#160;    out5 = 16.0f * d10.s1 - 20.0f * d10.s3 + 4.0f * d11.s1 - 20.0f * d30.s1 + 25.0f * d30.s3 - 5.0f * d31.s1 + 4.0f * d50.s1 - 5.0f * d50.s3 + d51.s1;</div><div class="line"><a name="l00561"></a><span class="lineno">  561</span>&#160;</div><div class="line"><a name="l00562"></a><span class="lineno">  562</span>&#160;    *(dst_addr) = out0;</div><div class="line"><a name="l00563"></a><span class="lineno">  563</span>&#160;    dst_addr += dst_plane_stride;</div><div class="line"><a name="l00564"></a><span class="lineno">  564</span>&#160;    *(dst_addr) = out1;</div><div class="line"><a name="l00565"></a><span class="lineno">  565</span>&#160;    dst_addr += dst_plane_stride;</div><div class="line"><a name="l00566"></a><span class="lineno">  566</span>&#160;    *(dst_addr) = out2;</div><div class="line"><a name="l00567"></a><span class="lineno">  567</span>&#160;    dst_addr += dst_plane_stride;</div><div class="line"><a name="l00568"></a><span class="lineno">  568</span>&#160;    *(dst_addr) = out3;</div><div class="line"><a name="l00569"></a><span class="lineno">  569</span>&#160;    dst_addr += dst_plane_stride;</div><div class="line"><a name="l00570"></a><span class="lineno">  570</span>&#160;    *(dst_addr) = out4;</div><div class="line"><a name="l00571"></a><span class="lineno">  571</span>&#160;    dst_addr += dst_plane_stride;</div><div class="line"><a name="l00572"></a><span class="lineno">  572</span>&#160;    *(dst_addr) = out5;</div><div class="line"><a name="l00573"></a><span class="lineno">  573</span>&#160;    dst_addr += dst_plane_stride;</div><div class="line"><a name="l00574"></a><span class="lineno">  574</span>&#160;<span class="preprocessor">#endif // #if !defined(WINOGRAD_INPUT_TRANSFORM_HORIZONTAL) &amp;&amp; !defined(WINOGRAD_INPUT_TRANSFORM_VERTICAL)</span></div><div class="line"><a name="l00575"></a><span class="lineno">  575</span>&#160;}</div><div class="line"><a name="l00576"></a><span class="lineno">  576</span>&#160;</div><div class="line"><a name="l00577"></a><span class="lineno">  577</span>&#160;<span class="preprocessor">#if defined(SRC_DIM_1) &amp;&amp; defined(SRC_DIM_2)</span></div><div class="line"><a name="l00578"></a><span class="lineno">  578</span>&#160;</div><div class="line"><a name="l00606"></a><span class="lineno">  606</span>&#160;__kernel <span class="keywordtype">void</span> winograd_input_transform_4x4_3x3_stepz1_nhwc(</div><div class="line"><a name="l00607"></a><span class="lineno">  607</span>&#160;    <a class="code" href="helpers_8h.xhtml#a6b83038822d1ae7ab619b684ed3b7fc0">TENSOR3D_DECLARATION</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a6743f0a130e8311e6f5b1a23df102472">src</a>),</div><div class="line"><a name="l00608"></a><span class="lineno">  608</span>&#160;    <a class="code" href="helpers_8h.xhtml#a6b83038822d1ae7ab619b684ed3b7fc0">TENSOR3D_DECLARATION</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>))</div><div class="line"><a name="l00609"></a><span class="lineno">  609</span>&#160;{</div><div class="line"><a name="l00610"></a><span class="lineno">  610</span>&#160;    <span class="keywordtype">int</span> x = get_global_id(0);</div><div class="line"><a name="l00611"></a><span class="lineno">  611</span>&#160;    <span class="keywordtype">int</span> y = get_global_id(1);</div><div class="line"><a name="l00612"></a><span class="lineno">  612</span>&#160;    <span class="keywordtype">int</span> z = get_global_id(2);</div><div class="line"><a name="l00613"></a><span class="lineno">  613</span>&#160;</div><div class="line"><a name="l00614"></a><span class="lineno">  614</span>&#160;    __global uchar *src_addr = src_ptr + src_offset_first_element_in_bytes + x * <span class="keyword">sizeof</span>(float);</div><div class="line"><a name="l00615"></a><span class="lineno">  615</span>&#160;</div><div class="line"><a name="l00616"></a><span class="lineno">  616</span>&#160;    <span class="comment">// Clamp coordinates. This clamp is valid for all rows</span></div><div class="line"><a name="l00617"></a><span class="lineno">  617</span>&#160;    int4 y_coord0 = (int4)(y * OUTPUT_TILE_W) + (int4)(0, 1, 2, 3) - (int4)PAD_LEFT;</div><div class="line"><a name="l00618"></a><span class="lineno">  618</span>&#160;    int2 y_coord1 = (int2)(y * OUTPUT_TILE_W) + (int2)(4, 5) - (int2)PAD_LEFT;</div><div class="line"><a name="l00619"></a><span class="lineno">  619</span>&#160;    y_coord0      = <a class="code" href="namespacearm__compute_1_1utility.xhtml#a12c3c62f510452805c289e180ec78bb7">clamp</a>(y_coord0, (int4) - 1, (int4)SRC_DIM_1);</div><div class="line"><a name="l00620"></a><span class="lineno">  620</span>&#160;    y_coord1      = <a class="code" href="namespacearm__compute_1_1utility.xhtml#a12c3c62f510452805c289e180ec78bb7">clamp</a>(y_coord1, (int2) - 1, (int2)SRC_DIM_1);</div><div class="line"><a name="l00621"></a><span class="lineno">  621</span>&#160;</div><div class="line"><a name="l00622"></a><span class="lineno">  622</span>&#160;    <span class="keywordtype">int</span>  z_coord;</div><div class="line"><a name="l00623"></a><span class="lineno">  623</span>&#160;    int4 valid_y0;</div><div class="line"><a name="l00624"></a><span class="lineno">  624</span>&#160;    int2 valid_y1;</div><div class="line"><a name="l00625"></a><span class="lineno">  625</span>&#160;</div><div class="line"><a name="l00626"></a><span class="lineno">  626</span>&#160;<span class="preprocessor">#if !defined(WINOGRAD_INPUT_TRANSFORM_HORIZONTAL) &amp;&amp; !defined(WINOGRAD_INPUT_TRANSFORM_VERTICAL)</span></div><div class="line"><a name="l00627"></a><span class="lineno">  627</span>&#160;    <span class="comment">// Row4</span></div><div class="line"><a name="l00628"></a><span class="lineno">  628</span>&#160;    z_coord = (z * 4) - (<span class="keywordtype">int</span>)PAD_TOP + 4;</div><div class="line"><a name="l00629"></a><span class="lineno">  629</span>&#160;</div><div class="line"><a name="l00630"></a><span class="lineno">  630</span>&#160;    <span class="comment">// If z &lt; 0, set y to -1</span></div><div class="line"><a name="l00631"></a><span class="lineno">  631</span>&#160;    valid_y0 = select(y_coord0, (int4) - 1, (int4)z_coord &lt; 0);</div><div class="line"><a name="l00632"></a><span class="lineno">  632</span>&#160;    valid_y1 = select(y_coord1, (int2) - 1, (int2)z_coord &lt; 0);</div><div class="line"><a name="l00633"></a><span class="lineno">  633</span>&#160;    <span class="comment">// If z &gt;= SRC_DIM_2, set y to SRC_DIM_2</span></div><div class="line"><a name="l00634"></a><span class="lineno">  634</span>&#160;    valid_y0 = select(valid_y0, (int4)SRC_DIM_1, (int4)z_coord &gt;= (<span class="keywordtype">int</span>)SRC_DIM_2);</div><div class="line"><a name="l00635"></a><span class="lineno">  635</span>&#160;    valid_y1 = select(valid_y1, (int2)SRC_DIM_1, (int2)z_coord &gt;= (<span class="keywordtype">int</span>)SRC_DIM_2);</div><div class="line"><a name="l00636"></a><span class="lineno">  636</span>&#160;</div><div class="line"><a name="l00637"></a><span class="lineno">  637</span>&#160;    <span class="comment">// Clamp z coordinate</span></div><div class="line"><a name="l00638"></a><span class="lineno">  638</span>&#160;    z_coord = <a class="code" href="namespacearm__compute_1_1utility.xhtml#a12c3c62f510452805c289e180ec78bb7">clamp</a>(z_coord, 0, (<span class="keywordtype">int</span>)SRC_DIM_2 - 1);</div><div class="line"><a name="l00639"></a><span class="lineno">  639</span>&#160;</div><div class="line"><a name="l00640"></a><span class="lineno">  640</span>&#160;    <span class="keywordtype">float</span> d40 = *(__global <span class="keywordtype">float</span> *)(src_addr + valid_y0.s0 * (<span class="keywordtype">int</span>)src_stride_y + z_coord * src_stride_z);</div><div class="line"><a name="l00641"></a><span class="lineno">  641</span>&#160;    <span class="keywordtype">float</span> d41 = *(__global <span class="keywordtype">float</span> *)(src_addr + valid_y0.s1 * (<span class="keywordtype">int</span>)src_stride_y + z_coord * src_stride_z);</div><div class="line"><a name="l00642"></a><span class="lineno">  642</span>&#160;    <span class="keywordtype">float</span> d42 = *(__global <span class="keywordtype">float</span> *)(src_addr + valid_y0.s2 * (<span class="keywordtype">int</span>)src_stride_y + z_coord * src_stride_z);</div><div class="line"><a name="l00643"></a><span class="lineno">  643</span>&#160;    <span class="keywordtype">float</span> d43 = *(__global <span class="keywordtype">float</span> *)(src_addr + valid_y0.s3 * (<span class="keywordtype">int</span>)src_stride_y + z_coord * src_stride_z);</div><div class="line"><a name="l00644"></a><span class="lineno">  644</span>&#160;    <span class="keywordtype">float</span> d44 = *(__global <span class="keywordtype">float</span> *)(src_addr + valid_y1.s0 * (<span class="keywordtype">int</span>)src_stride_y + z_coord * src_stride_z);</div><div class="line"><a name="l00645"></a><span class="lineno">  645</span>&#160;    <span class="keywordtype">float</span> d45 = *(__global <span class="keywordtype">float</span> *)(src_addr + valid_y1.s1 * (<span class="keywordtype">int</span>)src_stride_y + z_coord * src_stride_z);</div><div class="line"><a name="l00646"></a><span class="lineno">  646</span>&#160;</div><div class="line"><a name="l00647"></a><span class="lineno">  647</span>&#160;    <span class="keywordtype">float</span> k0 = d44;</div><div class="line"><a name="l00648"></a><span class="lineno">  648</span>&#160;    <span class="keywordtype">float</span> k1 = d44;</div><div class="line"><a name="l00649"></a><span class="lineno">  649</span>&#160;    <span class="keywordtype">float</span> k2 = d44;</div><div class="line"><a name="l00650"></a><span class="lineno">  650</span>&#160;    <span class="keywordtype">float</span> k3 = d44;</div><div class="line"><a name="l00651"></a><span class="lineno">  651</span>&#160;    <span class="keywordtype">float</span> k4 = d44;</div><div class="line"><a name="l00652"></a><span class="lineno">  652</span>&#160;    <span class="keywordtype">float</span> k5 = (float)0.0f;</div><div class="line"><a name="l00653"></a><span class="lineno">  653</span>&#160;</div><div class="line"><a name="l00654"></a><span class="lineno">  654</span>&#160;    k0 += 4.0f * d40 - 5.0f * d42;</div><div class="line"><a name="l00655"></a><span class="lineno">  655</span>&#160;    k1 += -4.0f * d41 - 4.0f * d42 + d43;</div><div class="line"><a name="l00656"></a><span class="lineno">  656</span>&#160;    k2 += 4.0f * d41 - 4.0f * d42 - d43;</div><div class="line"><a name="l00657"></a><span class="lineno">  657</span>&#160;    k3 += -2.0f * d41 + 2.0f * d43 - d42;</div><div class="line"><a name="l00658"></a><span class="lineno">  658</span>&#160;    k4 += 2.0f * d41 - 2.0f * d43 - d42;</div><div class="line"><a name="l00659"></a><span class="lineno">  659</span>&#160;    k5 += 4.0f * d41 - 5.0f * d43 + d45;</div><div class="line"><a name="l00660"></a><span class="lineno">  660</span>&#160;<span class="preprocessor">#endif // !defined(WINOGRAD_INPUT_TRANSFORM_HORIZONTAL) &amp;&amp; !defined(WINOGRAD_INPUT_TRANSFORM_VERTICAL)</span></div><div class="line"><a name="l00661"></a><span class="lineno">  661</span>&#160;</div><div class="line"><a name="l00662"></a><span class="lineno">  662</span>&#160;<span class="preprocessor">#if !defined(WINOGRAD_INPUT_TRANSFORM_VERTICAL)</span></div><div class="line"><a name="l00663"></a><span class="lineno">  663</span>&#160;    <span class="comment">// Row0</span></div><div class="line"><a name="l00664"></a><span class="lineno">  664</span>&#160;    z_coord = (z * (int)OUTPUT_TILE_H) - (int)PAD_TOP + 0;</div><div class="line"><a name="l00665"></a><span class="lineno">  665</span>&#160;</div><div class="line"><a name="l00666"></a><span class="lineno">  666</span>&#160;<span class="preprocessor">#if PAD_TOP != 0</span></div><div class="line"><a name="l00667"></a><span class="lineno">  667</span>&#160;    valid_y0 = select(y_coord0, (int4) - 1, (int4)z_coord &lt; 0);</div><div class="line"><a name="l00668"></a><span class="lineno">  668</span>&#160;    valid_y1 = select(y_coord1, (int2) - 1, (int2)z_coord &lt; 0);</div><div class="line"><a name="l00669"></a><span class="lineno">  669</span>&#160;    valid_y0 = select(valid_y0, (<span class="keywordtype">int</span>)SRC_DIM_1, (int4)z_coord &gt;= (<span class="keywordtype">int</span>)SRC_DIM_2);</div><div class="line"><a name="l00670"></a><span class="lineno">  670</span>&#160;    valid_y1 = select(valid_y1, (<span class="keywordtype">int</span>)SRC_DIM_1, (int2)z_coord &gt;= (<span class="keywordtype">int</span>)SRC_DIM_2);</div><div class="line"><a name="l00671"></a><span class="lineno">  671</span>&#160;    z_coord  = <a class="code" href="namespacearm__compute_1_1utility.xhtml#a12c3c62f510452805c289e180ec78bb7">clamp</a>(z_coord, 0, (<span class="keywordtype">int</span>)SRC_DIM_2 - 1);</div><div class="line"><a name="l00672"></a><span class="lineno">  672</span>&#160;<span class="preprocessor">#else  // PAD_TOP != 0</span></div><div class="line"><a name="l00673"></a><span class="lineno">  673</span>&#160;    valid_y0 = y_coord0;</div><div class="line"><a name="l00674"></a><span class="lineno">  674</span>&#160;    valid_y1 = y_coord1;</div><div class="line"><a name="l00675"></a><span class="lineno">  675</span>&#160;<span class="preprocessor">#endif // if PAD_TOP == 0, we cannot read out of bound</span></div><div class="line"><a name="l00676"></a><span class="lineno">  676</span>&#160;</div><div class="line"><a name="l00677"></a><span class="lineno">  677</span>&#160;    <span class="keywordtype">float</span> d00 = *(__global <span class="keywordtype">float</span> *)(src_addr + valid_y0.s0 * (<span class="keywordtype">int</span>)src_stride_y + z_coord * src_stride_z);</div><div class="line"><a name="l00678"></a><span class="lineno">  678</span>&#160;    <span class="keywordtype">float</span> d01 = *(__global <span class="keywordtype">float</span> *)(src_addr + valid_y0.s1 * (<span class="keywordtype">int</span>)src_stride_y + z_coord * src_stride_z);</div><div class="line"><a name="l00679"></a><span class="lineno">  679</span>&#160;    <span class="keywordtype">float</span> d02 = *(__global <span class="keywordtype">float</span> *)(src_addr + valid_y0.s2 * (<span class="keywordtype">int</span>)src_stride_y + z_coord * src_stride_z);</div><div class="line"><a name="l00680"></a><span class="lineno">  680</span>&#160;    <span class="keywordtype">float</span> d03 = *(__global <span class="keywordtype">float</span> *)(src_addr + valid_y0.s3 * (<span class="keywordtype">int</span>)src_stride_y + z_coord * src_stride_z);</div><div class="line"><a name="l00681"></a><span class="lineno">  681</span>&#160;    <span class="keywordtype">float</span> d04 = *(__global <span class="keywordtype">float</span> *)(src_addr + valid_y1.s0 * (<span class="keywordtype">int</span>)src_stride_y + z_coord * src_stride_z);</div><div class="line"><a name="l00682"></a><span class="lineno">  682</span>&#160;    <span class="keywordtype">float</span> d05 = *(__global <span class="keywordtype">float</span> *)(src_addr + valid_y1.s1 * (<span class="keywordtype">int</span>)src_stride_y + z_coord * src_stride_z);</div><div class="line"><a name="l00683"></a><span class="lineno">  683</span>&#160;<span class="preprocessor">#else  // !defined(WINOGRAD_INPUT_TRANSFORM_VERTICAL)</span></div><div class="line"><a name="l00684"></a><span class="lineno">  684</span>&#160;    int4 z_coords0 = (int4)(z * OUTPUT_TILE_H) + (int4)(0, 1, 2, 3) - (int4)PAD_TOP;</div><div class="line"><a name="l00685"></a><span class="lineno">  685</span>&#160;    int2 z_coords1 = (int2)(z * OUTPUT_TILE_H) + (int2)(4, 5) - (int2)PAD_TOP;</div><div class="line"><a name="l00686"></a><span class="lineno">  686</span>&#160;</div><div class="line"><a name="l00687"></a><span class="lineno">  687</span>&#160;    valid_y0 = select((int4)y_coord0.s0, (int4) - 1, z_coords0 &lt; (int4)0);</div><div class="line"><a name="l00688"></a><span class="lineno">  688</span>&#160;    valid_y1 = select((int2)y_coord0.s0, (int2) - 1, z_coords1 &lt; (int2)0);</div><div class="line"><a name="l00689"></a><span class="lineno">  689</span>&#160;    valid_y0 = select(valid_y0, (int4)SRC_DIM_1, z_coords0 &gt;= (int4)SRC_DIM_2);</div><div class="line"><a name="l00690"></a><span class="lineno">  690</span>&#160;    valid_y1 = select(valid_y1, (int2)SRC_DIM_1, z_coords1 &gt;= (int2)SRC_DIM_2);</div><div class="line"><a name="l00691"></a><span class="lineno">  691</span>&#160;</div><div class="line"><a name="l00692"></a><span class="lineno">  692</span>&#160;    z_coords0 = <a class="code" href="namespacearm__compute_1_1utility.xhtml#a12c3c62f510452805c289e180ec78bb7">clamp</a>((int4)z_coords0, (int4)0, (int4)((<span class="keywordtype">int</span>)SRC_DIM_2 - 1));</div><div class="line"><a name="l00693"></a><span class="lineno">  693</span>&#160;    z_coords1 = <a class="code" href="namespacearm__compute_1_1utility.xhtml#a12c3c62f510452805c289e180ec78bb7">clamp</a>((int2)z_coords1, (int2)0, (int2)((<span class="keywordtype">int</span>)SRC_DIM_2 - 1));</div><div class="line"><a name="l00694"></a><span class="lineno">  694</span>&#160;</div><div class="line"><a name="l00695"></a><span class="lineno">  695</span>&#160;    <span class="keywordtype">float</span> d00 = *(__global <span class="keywordtype">float</span> *)(src_addr + valid_y0.s0 * (<span class="keywordtype">int</span>)src_stride_y + z_coords0.s0 * src_stride_z);</div><div class="line"><a name="l00696"></a><span class="lineno">  696</span>&#160;    <span class="keywordtype">float</span> d01 = *(__global <span class="keywordtype">float</span> *)(src_addr + valid_y0.s1 * (<span class="keywordtype">int</span>)src_stride_y + z_coords0.s1 * src_stride_z);</div><div class="line"><a name="l00697"></a><span class="lineno">  697</span>&#160;    <span class="keywordtype">float</span> d02 = *(__global <span class="keywordtype">float</span> *)(src_addr + valid_y0.s2 * (<span class="keywordtype">int</span>)src_stride_y + z_coords0.s2 * src_stride_z);</div><div class="line"><a name="l00698"></a><span class="lineno">  698</span>&#160;    <span class="keywordtype">float</span> d03 = *(__global <span class="keywordtype">float</span> *)(src_addr + valid_y0.s3 * (<span class="keywordtype">int</span>)src_stride_y + z_coords0.s3 * src_stride_z);</div><div class="line"><a name="l00699"></a><span class="lineno">  699</span>&#160;    <span class="keywordtype">float</span> d04 = *(__global <span class="keywordtype">float</span> *)(src_addr + valid_y1.s0 * (<span class="keywordtype">int</span>)src_stride_y + z_coords1.s0 * src_stride_z);</div><div class="line"><a name="l00700"></a><span class="lineno">  700</span>&#160;    <span class="keywordtype">float</span> d05 = *(__global <span class="keywordtype">float</span> *)(src_addr + valid_y1.s1 * (<span class="keywordtype">int</span>)src_stride_y + z_coords1.s1 * src_stride_z);</div><div class="line"><a name="l00701"></a><span class="lineno">  701</span>&#160;<span class="preprocessor">#endif // !defined(WINOGRAD_INPUT_TRANSFORM_VERTICAL)</span></div><div class="line"><a name="l00702"></a><span class="lineno">  702</span>&#160;</div><div class="line"><a name="l00703"></a><span class="lineno">  703</span>&#160;    <span class="keywordtype">float</span> out0 = 16.0f * d00 - 20.0f * d02 + 4.0f * d04;</div><div class="line"><a name="l00704"></a><span class="lineno">  704</span>&#160;    <span class="keywordtype">float</span> out1 = -16.0f * d01 - 16.0f * d02 + 4.0f * d03 + 4.0f * d04;</div><div class="line"><a name="l00705"></a><span class="lineno">  705</span>&#160;    <span class="keywordtype">float</span> out2 = 16.0f * d01 - 16.0f * d02 - 4.0f * d03 + 4.0f * d04;</div><div class="line"><a name="l00706"></a><span class="lineno">  706</span>&#160;    <span class="keywordtype">float</span> out3 = -8.0f * d01 - 4.0f * d02 + 8.0f * d03 + 4.0f * d04;</div><div class="line"><a name="l00707"></a><span class="lineno">  707</span>&#160;    <span class="keywordtype">float</span> out4 = 8.0f * d01 - 4.0f * d02 - 8.0f * d03 + 4.0f * d04;</div><div class="line"><a name="l00708"></a><span class="lineno">  708</span>&#160;    <span class="keywordtype">float</span> out5 = 16.0f * d01 - 20.0f * d03 + 4.0f * d05;</div><div class="line"><a name="l00709"></a><span class="lineno">  709</span>&#160;</div><div class="line"><a name="l00710"></a><span class="lineno">  710</span>&#160;<span class="preprocessor">#if !defined(WINOGRAD_INPUT_TRANSFORM_HORIZONTAL) &amp;&amp; !defined(WINOGRAD_INPUT_TRANSFORM_VERTICAL)</span></div><div class="line"><a name="l00711"></a><span class="lineno">  711</span>&#160;    <span class="comment">// Row2</span></div><div class="line"><a name="l00712"></a><span class="lineno">  712</span>&#160;    z_coord  = (z * (int)OUTPUT_TILE_H) - (int)PAD_TOP + 2;</div><div class="line"><a name="l00713"></a><span class="lineno">  713</span>&#160;    valid_y0 = select(y_coord0, (int4) - 1, (int4)z_coord &lt; 0);</div><div class="line"><a name="l00714"></a><span class="lineno">  714</span>&#160;    valid_y1 = select(y_coord1, (int2) - 1, (int2)z_coord &lt; 0);</div><div class="line"><a name="l00715"></a><span class="lineno">  715</span>&#160;    valid_y0 = select(valid_y0, (int4)SRC_DIM_1, (int4)z_coord &gt;= (<span class="keywordtype">int</span>)SRC_DIM_2);</div><div class="line"><a name="l00716"></a><span class="lineno">  716</span>&#160;    valid_y1 = select(valid_y1, (int2)SRC_DIM_1, (int2)z_coord &gt;= (<span class="keywordtype">int</span>)SRC_DIM_2);</div><div class="line"><a name="l00717"></a><span class="lineno">  717</span>&#160;    z_coord  = <a class="code" href="namespacearm__compute_1_1utility.xhtml#a12c3c62f510452805c289e180ec78bb7">clamp</a>(z_coord, 0, (<span class="keywordtype">int</span>)SRC_DIM_2 - 1);</div><div class="line"><a name="l00718"></a><span class="lineno">  718</span>&#160;</div><div class="line"><a name="l00719"></a><span class="lineno">  719</span>&#160;    <span class="keywordtype">float</span> d20 = *(__global <span class="keywordtype">float</span> *)(src_addr + valid_y0.s0 * (<span class="keywordtype">int</span>)src_stride_y + z_coord * src_stride_z);</div><div class="line"><a name="l00720"></a><span class="lineno">  720</span>&#160;    <span class="keywordtype">float</span> d21 = *(__global <span class="keywordtype">float</span> *)(src_addr + valid_y0.s1 * (<span class="keywordtype">int</span>)src_stride_y + z_coord * src_stride_z);</div><div class="line"><a name="l00721"></a><span class="lineno">  721</span>&#160;    <span class="keywordtype">float</span> d22 = *(__global <span class="keywordtype">float</span> *)(src_addr + valid_y0.s2 * (<span class="keywordtype">int</span>)src_stride_y + z_coord * src_stride_z);</div><div class="line"><a name="l00722"></a><span class="lineno">  722</span>&#160;    <span class="keywordtype">float</span> d23 = *(__global <span class="keywordtype">float</span> *)(src_addr + valid_y0.s3 * (<span class="keywordtype">int</span>)src_stride_y + z_coord * src_stride_z);</div><div class="line"><a name="l00723"></a><span class="lineno">  723</span>&#160;    <span class="keywordtype">float</span> d24 = *(__global <span class="keywordtype">float</span> *)(src_addr + valid_y1.s0 * (<span class="keywordtype">int</span>)src_stride_y + z_coord * src_stride_z);</div><div class="line"><a name="l00724"></a><span class="lineno">  724</span>&#160;    <span class="keywordtype">float</span> d25 = *(__global <span class="keywordtype">float</span> *)(src_addr + valid_y1.s1 * (<span class="keywordtype">int</span>)src_stride_y + z_coord * src_stride_z);</div><div class="line"><a name="l00725"></a><span class="lineno">  725</span>&#160;</div><div class="line"><a name="l00726"></a><span class="lineno">  726</span>&#160;    out0 += k0;</div><div class="line"><a name="l00727"></a><span class="lineno">  727</span>&#160;    out1 += k1;</div><div class="line"><a name="l00728"></a><span class="lineno">  728</span>&#160;    out2 += k2;</div><div class="line"><a name="l00729"></a><span class="lineno">  729</span>&#160;    out3 += k3;</div><div class="line"><a name="l00730"></a><span class="lineno">  730</span>&#160;    out4 += k4;</div><div class="line"><a name="l00731"></a><span class="lineno">  731</span>&#160;    out5 += k5;</div><div class="line"><a name="l00732"></a><span class="lineno">  732</span>&#160;    <span class="keywordtype">float</span> out6  = k0;</div><div class="line"><a name="l00733"></a><span class="lineno">  733</span>&#160;    <span class="keywordtype">float</span> out7  = k1;</div><div class="line"><a name="l00734"></a><span class="lineno">  734</span>&#160;    <span class="keywordtype">float</span> out8  = k2;</div><div class="line"><a name="l00735"></a><span class="lineno">  735</span>&#160;    <span class="keywordtype">float</span> out9  = k3;</div><div class="line"><a name="l00736"></a><span class="lineno">  736</span>&#160;    <span class="keywordtype">float</span> out10 = k4;</div><div class="line"><a name="l00737"></a><span class="lineno">  737</span>&#160;    <span class="keywordtype">float</span> out11 = k5;</div><div class="line"><a name="l00738"></a><span class="lineno">  738</span>&#160;    <span class="keywordtype">float</span> out12 = k0;</div><div class="line"><a name="l00739"></a><span class="lineno">  739</span>&#160;    <span class="keywordtype">float</span> out13 = k1;</div><div class="line"><a name="l00740"></a><span class="lineno">  740</span>&#160;    <span class="keywordtype">float</span> out14 = k2;</div><div class="line"><a name="l00741"></a><span class="lineno">  741</span>&#160;    <span class="keywordtype">float</span> out15 = k3;</div><div class="line"><a name="l00742"></a><span class="lineno">  742</span>&#160;    <span class="keywordtype">float</span> out16 = k4;</div><div class="line"><a name="l00743"></a><span class="lineno">  743</span>&#160;    <span class="keywordtype">float</span> out17 = k5;</div><div class="line"><a name="l00744"></a><span class="lineno">  744</span>&#160;    <span class="keywordtype">float</span> out18 = k0;</div><div class="line"><a name="l00745"></a><span class="lineno">  745</span>&#160;    <span class="keywordtype">float</span> out19 = k1;</div><div class="line"><a name="l00746"></a><span class="lineno">  746</span>&#160;    <span class="keywordtype">float</span> out20 = k2;</div><div class="line"><a name="l00747"></a><span class="lineno">  747</span>&#160;    <span class="keywordtype">float</span> out21 = k3;</div><div class="line"><a name="l00748"></a><span class="lineno">  748</span>&#160;    <span class="keywordtype">float</span> out22 = k4;</div><div class="line"><a name="l00749"></a><span class="lineno">  749</span>&#160;    <span class="keywordtype">float</span> out23 = k5;</div><div class="line"><a name="l00750"></a><span class="lineno">  750</span>&#160;    <span class="keywordtype">float</span> out24 = k0;</div><div class="line"><a name="l00751"></a><span class="lineno">  751</span>&#160;    <span class="keywordtype">float</span> out25 = k1;</div><div class="line"><a name="l00752"></a><span class="lineno">  752</span>&#160;    <span class="keywordtype">float</span> out26 = k2;</div><div class="line"><a name="l00753"></a><span class="lineno">  753</span>&#160;    <span class="keywordtype">float</span> out27 = k3;</div><div class="line"><a name="l00754"></a><span class="lineno">  754</span>&#160;    <span class="keywordtype">float</span> out28 = k4;</div><div class="line"><a name="l00755"></a><span class="lineno">  755</span>&#160;    <span class="keywordtype">float</span> out29 = k5;</div><div class="line"><a name="l00756"></a><span class="lineno">  756</span>&#160;</div><div class="line"><a name="l00757"></a><span class="lineno">  757</span>&#160;    <span class="comment">// Channels [0, 5]: [out00, out01, out02, out03, out04, out05]</span></div><div class="line"><a name="l00758"></a><span class="lineno">  758</span>&#160;    out0 += -20.0f * d20 + 25.0f * d22 - 5.0f * d24;</div><div class="line"><a name="l00759"></a><span class="lineno">  759</span>&#160;    out1 += 20.0f * d21 + 20.0f * d22 - 5.0f * d23 - 5.0f * d24;</div><div class="line"><a name="l00760"></a><span class="lineno">  760</span>&#160;    out2 += -20.0f * d21 + 20.0f * d22 + 5.0f * d23 - 5.0f * d24;</div><div class="line"><a name="l00761"></a><span class="lineno">  761</span>&#160;    out3 += 10.0f * d21 + 5.0f * d22 - 10.0f * d23 - 5.0f * d24;</div><div class="line"><a name="l00762"></a><span class="lineno">  762</span>&#160;    out4 += -10.0f * d21 + 5.0f * d22 + 10.0f * d23 - 5.0f * d24;</div><div class="line"><a name="l00763"></a><span class="lineno">  763</span>&#160;    out5 += -20.0f * d21 + 25.0f * d23 - 5.0f * d25;</div><div class="line"><a name="l00764"></a><span class="lineno">  764</span>&#160;<span class="preprocessor">#endif // !defined(WINOGRAD_INPUT_TRANSFORM_HORIZONTAL) &amp;&amp; !defined(WINOGRAD_INPUT_TRANSFORM_VERTICAL)</span></div><div class="line"><a name="l00765"></a><span class="lineno">  765</span>&#160;</div><div class="line"><a name="l00766"></a><span class="lineno">  766</span>&#160;    <span class="comment">// Compute destination address</span></div><div class="line"><a name="l00767"></a><span class="lineno">  767</span>&#160;    __global <span class="keywordtype">float</span> *dst_addr         = (__global <span class="keywordtype">float</span> *)(dst_ptr + dst_offset_first_element_in_bytes + x * <span class="keyword">sizeof</span>(<span class="keywordtype">float</span>) + (y + z * (int)NUM_TILES_X) * dst_stride_y);</div><div class="line"><a name="l00768"></a><span class="lineno">  768</span>&#160;    uint            dst_plane_stride = dst_stride_z / <span class="keyword">sizeof</span>(float);</div><div class="line"><a name="l00769"></a><span class="lineno">  769</span>&#160;</div><div class="line"><a name="l00770"></a><span class="lineno">  770</span>&#160;    *((__global <span class="keywordtype">float</span> *)dst_addr) = out0;</div><div class="line"><a name="l00771"></a><span class="lineno">  771</span>&#160;    dst_addr += dst_plane_stride;</div><div class="line"><a name="l00772"></a><span class="lineno">  772</span>&#160;    *((__global <span class="keywordtype">float</span> *)dst_addr) = out1;</div><div class="line"><a name="l00773"></a><span class="lineno">  773</span>&#160;    dst_addr += dst_plane_stride;</div><div class="line"><a name="l00774"></a><span class="lineno">  774</span>&#160;    *((__global <span class="keywordtype">float</span> *)dst_addr) = out2;</div><div class="line"><a name="l00775"></a><span class="lineno">  775</span>&#160;    dst_addr += dst_plane_stride;</div><div class="line"><a name="l00776"></a><span class="lineno">  776</span>&#160;    *((__global <span class="keywordtype">float</span> *)dst_addr) = out3;</div><div class="line"><a name="l00777"></a><span class="lineno">  777</span>&#160;    dst_addr += dst_plane_stride;</div><div class="line"><a name="l00778"></a><span class="lineno">  778</span>&#160;    *((__global <span class="keywordtype">float</span> *)dst_addr) = out4;</div><div class="line"><a name="l00779"></a><span class="lineno">  779</span>&#160;    dst_addr += dst_plane_stride;</div><div class="line"><a name="l00780"></a><span class="lineno">  780</span>&#160;    *((__global <span class="keywordtype">float</span> *)dst_addr) = out5;</div><div class="line"><a name="l00781"></a><span class="lineno">  781</span>&#160;    dst_addr += dst_plane_stride;</div><div class="line"><a name="l00782"></a><span class="lineno">  782</span>&#160;</div><div class="line"><a name="l00783"></a><span class="lineno">  783</span>&#160;<span class="preprocessor">#if !defined(WINOGRAD_INPUT_TRANSFORM_HORIZONTAL) &amp;&amp; !defined(WINOGRAD_INPUT_TRANSFORM_VERTICAL)</span></div><div class="line"><a name="l00784"></a><span class="lineno">  784</span>&#160;    <span class="comment">// Row1</span></div><div class="line"><a name="l00785"></a><span class="lineno">  785</span>&#160;    z_coord = (z * (int)OUTPUT_TILE_H) - (int)PAD_TOP + 1;</div><div class="line"><a name="l00786"></a><span class="lineno">  786</span>&#160;    <span class="comment">// Row1 can never be out of bounds</span></div><div class="line"><a name="l00787"></a><span class="lineno">  787</span>&#160;    valid_y0 = y_coord0;</div><div class="line"><a name="l00788"></a><span class="lineno">  788</span>&#160;    valid_y1 = y_coord1;</div><div class="line"><a name="l00789"></a><span class="lineno">  789</span>&#160;</div><div class="line"><a name="l00790"></a><span class="lineno">  790</span>&#160;    <span class="keywordtype">float</span> d10 = *(__global <span class="keywordtype">float</span> *)(src_addr + valid_y0.s0 * (<span class="keywordtype">int</span>)src_stride_y + z_coord * src_stride_z);</div><div class="line"><a name="l00791"></a><span class="lineno">  791</span>&#160;    <span class="keywordtype">float</span> d11 = *(__global <span class="keywordtype">float</span> *)(src_addr + valid_y0.s1 * (<span class="keywordtype">int</span>)src_stride_y + z_coord * src_stride_z);</div><div class="line"><a name="l00792"></a><span class="lineno">  792</span>&#160;    <span class="keywordtype">float</span> d12 = *(__global <span class="keywordtype">float</span> *)(src_addr + valid_y0.s2 * (<span class="keywordtype">int</span>)src_stride_y + z_coord * src_stride_z);</div><div class="line"><a name="l00793"></a><span class="lineno">  793</span>&#160;    <span class="keywordtype">float</span> d13 = *(__global <span class="keywordtype">float</span> *)(src_addr + valid_y0.s3 * (<span class="keywordtype">int</span>)src_stride_y + z_coord * src_stride_z);</div><div class="line"><a name="l00794"></a><span class="lineno">  794</span>&#160;    <span class="keywordtype">float</span> d14 = *(__global <span class="keywordtype">float</span> *)(src_addr + valid_y1.s0 * (<span class="keywordtype">int</span>)src_stride_y + z_coord * src_stride_z);</div><div class="line"><a name="l00795"></a><span class="lineno">  795</span>&#160;    <span class="keywordtype">float</span> d15 = *(__global <span class="keywordtype">float</span> *)(src_addr + valid_y1.s1 * (<span class="keywordtype">int</span>)src_stride_y + z_coord * src_stride_z);</div><div class="line"><a name="l00796"></a><span class="lineno">  796</span>&#160;</div><div class="line"><a name="l00797"></a><span class="lineno">  797</span>&#160;    <span class="comment">// Row3</span></div><div class="line"><a name="l00798"></a><span class="lineno">  798</span>&#160;    z_coord  = (z * (int)OUTPUT_TILE_H) - (int)PAD_TOP + 3;</div><div class="line"><a name="l00799"></a><span class="lineno">  799</span>&#160;    valid_y0 = select(y_coord0, (int4) - 1, (int4)z_coord &lt; 0);</div><div class="line"><a name="l00800"></a><span class="lineno">  800</span>&#160;    valid_y1 = select(y_coord1, (int2) - 1, (int2)z_coord &lt; 0);</div><div class="line"><a name="l00801"></a><span class="lineno">  801</span>&#160;    valid_y0 = select(valid_y0, (int4)SRC_DIM_1, (int4)z_coord &gt;= (<span class="keywordtype">int</span>)SRC_DIM_2);</div><div class="line"><a name="l00802"></a><span class="lineno">  802</span>&#160;    valid_y1 = select(valid_y1, (int2)SRC_DIM_1, (int2)z_coord &gt;= (<span class="keywordtype">int</span>)SRC_DIM_2);</div><div class="line"><a name="l00803"></a><span class="lineno">  803</span>&#160;    z_coord  = <a class="code" href="namespacearm__compute_1_1utility.xhtml#a12c3c62f510452805c289e180ec78bb7">clamp</a>(z_coord, 0, (<span class="keywordtype">int</span>)SRC_DIM_2 - 1);</div><div class="line"><a name="l00804"></a><span class="lineno">  804</span>&#160;    z_coord  = <a class="code" href="namespacearm__compute_1_1utility.xhtml#a12c3c62f510452805c289e180ec78bb7">clamp</a>(z_coord, 0, (<span class="keywordtype">int</span>)SRC_DIM_2 - 1);</div><div class="line"><a name="l00805"></a><span class="lineno">  805</span>&#160;</div><div class="line"><a name="l00806"></a><span class="lineno">  806</span>&#160;    <span class="keywordtype">float</span> d30 = *(__global <span class="keywordtype">float</span> *)(src_addr + valid_y0.s0 * (<span class="keywordtype">int</span>)src_stride_y + z_coord * src_stride_z);</div><div class="line"><a name="l00807"></a><span class="lineno">  807</span>&#160;    <span class="keywordtype">float</span> d31 = *(__global <span class="keywordtype">float</span> *)(src_addr + valid_y0.s1 * (<span class="keywordtype">int</span>)src_stride_y + z_coord * src_stride_z);</div><div class="line"><a name="l00808"></a><span class="lineno">  808</span>&#160;    <span class="keywordtype">float</span> d32 = *(__global <span class="keywordtype">float</span> *)(src_addr + valid_y0.s2 * (<span class="keywordtype">int</span>)src_stride_y + z_coord * src_stride_z);</div><div class="line"><a name="l00809"></a><span class="lineno">  809</span>&#160;    <span class="keywordtype">float</span> d33 = *(__global <span class="keywordtype">float</span> *)(src_addr + valid_y0.s3 * (<span class="keywordtype">int</span>)src_stride_y + z_coord * src_stride_z);</div><div class="line"><a name="l00810"></a><span class="lineno">  810</span>&#160;    <span class="keywordtype">float</span> d34 = *(__global <span class="keywordtype">float</span> *)(src_addr + valid_y1.s0 * (<span class="keywordtype">int</span>)src_stride_y + z_coord * src_stride_z);</div><div class="line"><a name="l00811"></a><span class="lineno">  811</span>&#160;    <span class="keywordtype">float</span> d35 = *(__global <span class="keywordtype">float</span> *)(src_addr + valid_y1.s1 * (<span class="keywordtype">int</span>)src_stride_y + z_coord * src_stride_z);</div><div class="line"><a name="l00812"></a><span class="lineno">  812</span>&#160;</div><div class="line"><a name="l00813"></a><span class="lineno">  813</span>&#160;    <span class="comment">// Compute common parts for the channels between [6, 29]</span></div><div class="line"><a name="l00814"></a><span class="lineno">  814</span>&#160;    <span class="comment">// Channels [6, 11]:  [out10, out11, out12, out13, out14, out15]</span></div><div class="line"><a name="l00815"></a><span class="lineno">  815</span>&#160;    <span class="comment">// Channels [12, 17]: [out20, out21, out22, out23, out24, out25]</span></div><div class="line"><a name="l00816"></a><span class="lineno">  816</span>&#160;    <span class="keywordtype">float</span> part0  = -16.0f * d20 + 20.0f * d22 - 4.0f * d24;</div><div class="line"><a name="l00817"></a><span class="lineno">  817</span>&#160;    <span class="keywordtype">float</span> part1  = 16.0f * d10 - 20.0f * d12 + 4.0f * d14 - 4.0f * d30 + 5.0f * d32 - d34;</div><div class="line"><a name="l00818"></a><span class="lineno">  818</span>&#160;    <span class="keywordtype">float</span> part2  = 16.0f * d22 - 4.0f * d24;</div><div class="line"><a name="l00819"></a><span class="lineno">  819</span>&#160;    <span class="keywordtype">float</span> part3  = 16.0f * d21 - 4.0f * d23;</div><div class="line"><a name="l00820"></a><span class="lineno">  820</span>&#160;    <span class="keywordtype">float</span> part4  = 16.0f * d12 - 4.0f * d14 - 4.0f * d32 + d34;</div><div class="line"><a name="l00821"></a><span class="lineno">  821</span>&#160;    <span class="keywordtype">float</span> part5  = 16.0f * d11 - 4.0f * d13 - 4.0f * d31 + d33;</div><div class="line"><a name="l00822"></a><span class="lineno">  822</span>&#160;    <span class="keywordtype">float</span> part6  = 4.0f * d22 - 4.0f * d24;</div><div class="line"><a name="l00823"></a><span class="lineno">  823</span>&#160;    <span class="keywordtype">float</span> part7  = 8.0f * d11 - 8.0f * d13 - 2.0f * d31 + 2.0f * d33;</div><div class="line"><a name="l00824"></a><span class="lineno">  824</span>&#160;    <span class="keywordtype">float</span> part8  = 4.0f * d12 - 4.0f * d14 - d32 + d34;</div><div class="line"><a name="l00825"></a><span class="lineno">  825</span>&#160;    <span class="keywordtype">float</span> part9  = 8.0f * d21 - 8.0f * d23;</div><div class="line"><a name="l00826"></a><span class="lineno">  826</span>&#160;    <span class="keywordtype">float</span> part10 = -16.0f * d21 + 20.0f * d23 - 4.0f * d25;</div><div class="line"><a name="l00827"></a><span class="lineno">  827</span>&#160;    <span class="keywordtype">float</span> part11 = -16.0f * d11 + 20.0f * d13 - 4.0f * d15 + 4.0f * d31 - 5.0f * d33 + d35;</div><div class="line"><a name="l00828"></a><span class="lineno">  828</span>&#160;</div><div class="line"><a name="l00829"></a><span class="lineno">  829</span>&#160;    <span class="comment">// Channels [18, 23]: [out30, out31, out32, out33, out34, out35]</span></div><div class="line"><a name="l00830"></a><span class="lineno">  830</span>&#160;    <span class="comment">// Channels [24, 29]: [out40, out41, out42, out43, out44, out45]</span></div><div class="line"><a name="l00831"></a><span class="lineno">  831</span>&#160;    <span class="keywordtype">float</span> part12 = 8.0f * d10 - 10.0f * d12 + 2.0f * d14 - 8.0f * d30 + 10.0f * d32 - 2.0f * d34;</div><div class="line"><a name="l00832"></a><span class="lineno">  832</span>&#160;    <span class="keywordtype">float</span> part13 = part0 * 0.25f; <span class="comment">// -4.0f * d20 + 5.0f * d22 - d24</span></div><div class="line"><a name="l00833"></a><span class="lineno">  833</span>&#160;    <span class="keywordtype">float</span> part14 = part2 * 0.25f; <span class="comment">// 4.0f * d22 - d24</span></div><div class="line"><a name="l00834"></a><span class="lineno">  834</span>&#160;    <span class="keywordtype">float</span> part15 = 8.0f * d11 - 2.0f * d13 - 8.0f * d31 + 2.0f * d33;</div><div class="line"><a name="l00835"></a><span class="lineno">  835</span>&#160;    <span class="keywordtype">float</span> part16 = 8.0f * d12 - 2.0f * d14 - 8.0f * d32 + 2.0f * d34;</div><div class="line"><a name="l00836"></a><span class="lineno">  836</span>&#160;    <span class="keywordtype">float</span> part17 = part3 * 0.25f; <span class="comment">// 4.0f * d21 - d23</span></div><div class="line"><a name="l00837"></a><span class="lineno">  837</span>&#160;    <span class="keywordtype">float</span> part18 = part6 * 0.25f; <span class="comment">// d22 - d24</span></div><div class="line"><a name="l00838"></a><span class="lineno">  838</span>&#160;    <span class="keywordtype">float</span> part19 = 4.0f * d11 - 4.0f * d13 - 4.0f * d31 + 4.0f * d33;</div><div class="line"><a name="l00839"></a><span class="lineno">  839</span>&#160;    <span class="keywordtype">float</span> part20 = 2.0f * d12 - 2.0f * d14 - 2.0f * d32 + 2.0f * d34;</div><div class="line"><a name="l00840"></a><span class="lineno">  840</span>&#160;    <span class="keywordtype">float</span> part21 = part9 * 0.25f;                                        <span class="comment">// 2.0f * (d21 - d23)</span></div><div class="line"><a name="l00841"></a><span class="lineno">  841</span>&#160;    <span class="keywordtype">float</span> part22 = part10 * 0.25f;                                       <span class="comment">// - 4.0f * d21 + 5.0f * d23 - d25</span></div><div class="line"><a name="l00842"></a><span class="lineno">  842</span>&#160;    <span class="keywordtype">float</span> part23 = part11 * 0.5f + 6.0f * d31 - 7.5f * d33 + 1.5f * d35; <span class="comment">// - 8.0f * d11 + 10.0f * d13 - 2.0f * d15 + 8.0f * d31 - 10.0f * d33 + 2.0f * d35;</span></div><div class="line"><a name="l00843"></a><span class="lineno">  843</span>&#160;</div><div class="line"><a name="l00844"></a><span class="lineno">  844</span>&#160;    out6 += part0 - part1;</div><div class="line"><a name="l00845"></a><span class="lineno">  845</span>&#160;    out12 += part0 + part1;</div><div class="line"><a name="l00846"></a><span class="lineno">  846</span>&#160;    out7 += part2 + part3 + part4 + part5;</div><div class="line"><a name="l00847"></a><span class="lineno">  847</span>&#160;    out8 += part2 - part3 + part4 - part5;</div><div class="line"><a name="l00848"></a><span class="lineno">  848</span>&#160;    out13 += part2 + part3 - part4 - part5;</div><div class="line"><a name="l00849"></a><span class="lineno">  849</span>&#160;    out14 += part2 - part3 - part4 + part5;</div><div class="line"><a name="l00850"></a><span class="lineno">  850</span>&#160;    out9 += part6 + part7 + part8 + part9;</div><div class="line"><a name="l00851"></a><span class="lineno">  851</span>&#160;    out10 += part6 - part7 + part8 - part9;</div><div class="line"><a name="l00852"></a><span class="lineno">  852</span>&#160;    out15 += part6 - part7 - part8 + part9;</div><div class="line"><a name="l00853"></a><span class="lineno">  853</span>&#160;    out16 += part6 + part7 - part8 - part9;</div><div class="line"><a name="l00854"></a><span class="lineno">  854</span>&#160;    out11 += part10 + part11;</div><div class="line"><a name="l00855"></a><span class="lineno">  855</span>&#160;    out17 += part10 - part11;</div><div class="line"><a name="l00856"></a><span class="lineno">  856</span>&#160;</div><div class="line"><a name="l00857"></a><span class="lineno">  857</span>&#160;    out18 += part13 - part12;</div><div class="line"><a name="l00858"></a><span class="lineno">  858</span>&#160;    out24 += part13 + part12;</div><div class="line"><a name="l00859"></a><span class="lineno">  859</span>&#160;    out19 += part14 + part15 + part16 + part17;</div><div class="line"><a name="l00860"></a><span class="lineno">  860</span>&#160;    out20 += part14 - part15 + part16 - part17;</div><div class="line"><a name="l00861"></a><span class="lineno">  861</span>&#160;    out25 += part14 - part15 - part16 + part17;</div><div class="line"><a name="l00862"></a><span class="lineno">  862</span>&#160;    out26 += part14 + part15 - part16 - part17;</div><div class="line"><a name="l00863"></a><span class="lineno">  863</span>&#160;    out21 += part18 + part19 + part20 + part21;</div><div class="line"><a name="l00864"></a><span class="lineno">  864</span>&#160;    out22 += part18 - part19 + part20 - part21;</div><div class="line"><a name="l00865"></a><span class="lineno">  865</span>&#160;    out27 += part18 - part19 - part20 + part21;</div><div class="line"><a name="l00866"></a><span class="lineno">  866</span>&#160;    out28 += part18 + part19 - part20 - part21;</div><div class="line"><a name="l00867"></a><span class="lineno">  867</span>&#160;    out23 += part22 + part23;</div><div class="line"><a name="l00868"></a><span class="lineno">  868</span>&#160;    out29 += part22 - part23;</div><div class="line"><a name="l00869"></a><span class="lineno">  869</span>&#160;</div><div class="line"><a name="l00870"></a><span class="lineno">  870</span>&#160;    *((__global <span class="keywordtype">float</span> *)dst_addr) = out6;</div><div class="line"><a name="l00871"></a><span class="lineno">  871</span>&#160;    dst_addr += dst_plane_stride;</div><div class="line"><a name="l00872"></a><span class="lineno">  872</span>&#160;    *((__global <span class="keywordtype">float</span> *)dst_addr) = out7;</div><div class="line"><a name="l00873"></a><span class="lineno">  873</span>&#160;    dst_addr += dst_plane_stride;</div><div class="line"><a name="l00874"></a><span class="lineno">  874</span>&#160;    *((__global <span class="keywordtype">float</span> *)dst_addr) = out8;</div><div class="line"><a name="l00875"></a><span class="lineno">  875</span>&#160;    dst_addr += dst_plane_stride;</div><div class="line"><a name="l00876"></a><span class="lineno">  876</span>&#160;    *((__global <span class="keywordtype">float</span> *)dst_addr) = out9;</div><div class="line"><a name="l00877"></a><span class="lineno">  877</span>&#160;    dst_addr += dst_plane_stride;</div><div class="line"><a name="l00878"></a><span class="lineno">  878</span>&#160;    *((__global <span class="keywordtype">float</span> *)dst_addr) = out10;</div><div class="line"><a name="l00879"></a><span class="lineno">  879</span>&#160;    dst_addr += dst_plane_stride;</div><div class="line"><a name="l00880"></a><span class="lineno">  880</span>&#160;    *((__global <span class="keywordtype">float</span> *)dst_addr) = out11;</div><div class="line"><a name="l00881"></a><span class="lineno">  881</span>&#160;    dst_addr += dst_plane_stride;</div><div class="line"><a name="l00882"></a><span class="lineno">  882</span>&#160;    *((__global <span class="keywordtype">float</span> *)dst_addr) = out12;</div><div class="line"><a name="l00883"></a><span class="lineno">  883</span>&#160;    dst_addr += dst_plane_stride;</div><div class="line"><a name="l00884"></a><span class="lineno">  884</span>&#160;    *((__global <span class="keywordtype">float</span> *)dst_addr) = out13;</div><div class="line"><a name="l00885"></a><span class="lineno">  885</span>&#160;    dst_addr += dst_plane_stride;</div><div class="line"><a name="l00886"></a><span class="lineno">  886</span>&#160;    *((__global <span class="keywordtype">float</span> *)dst_addr) = out14;</div><div class="line"><a name="l00887"></a><span class="lineno">  887</span>&#160;    dst_addr += dst_plane_stride;</div><div class="line"><a name="l00888"></a><span class="lineno">  888</span>&#160;    *((__global <span class="keywordtype">float</span> *)dst_addr) = out15;</div><div class="line"><a name="l00889"></a><span class="lineno">  889</span>&#160;    dst_addr += dst_plane_stride;</div><div class="line"><a name="l00890"></a><span class="lineno">  890</span>&#160;    *((__global <span class="keywordtype">float</span> *)dst_addr) = out16;</div><div class="line"><a name="l00891"></a><span class="lineno">  891</span>&#160;    dst_addr += dst_plane_stride;</div><div class="line"><a name="l00892"></a><span class="lineno">  892</span>&#160;    *((__global <span class="keywordtype">float</span> *)dst_addr) = out17;</div><div class="line"><a name="l00893"></a><span class="lineno">  893</span>&#160;    dst_addr += dst_plane_stride;</div><div class="line"><a name="l00894"></a><span class="lineno">  894</span>&#160;</div><div class="line"><a name="l00895"></a><span class="lineno">  895</span>&#160;    *((__global <span class="keywordtype">float</span> *)dst_addr) = out18;</div><div class="line"><a name="l00896"></a><span class="lineno">  896</span>&#160;    dst_addr += dst_plane_stride;</div><div class="line"><a name="l00897"></a><span class="lineno">  897</span>&#160;    *((__global <span class="keywordtype">float</span> *)dst_addr) = out19;</div><div class="line"><a name="l00898"></a><span class="lineno">  898</span>&#160;    dst_addr += dst_plane_stride;</div><div class="line"><a name="l00899"></a><span class="lineno">  899</span>&#160;    *((__global <span class="keywordtype">float</span> *)dst_addr) = out20;</div><div class="line"><a name="l00900"></a><span class="lineno">  900</span>&#160;    dst_addr += dst_plane_stride;</div><div class="line"><a name="l00901"></a><span class="lineno">  901</span>&#160;    *((__global <span class="keywordtype">float</span> *)dst_addr) = out21;</div><div class="line"><a name="l00902"></a><span class="lineno">  902</span>&#160;    dst_addr += dst_plane_stride;</div><div class="line"><a name="l00903"></a><span class="lineno">  903</span>&#160;    *((__global <span class="keywordtype">float</span> *)dst_addr) = out22;</div><div class="line"><a name="l00904"></a><span class="lineno">  904</span>&#160;    dst_addr += dst_plane_stride;</div><div class="line"><a name="l00905"></a><span class="lineno">  905</span>&#160;    *((__global <span class="keywordtype">float</span> *)dst_addr) = out23;</div><div class="line"><a name="l00906"></a><span class="lineno">  906</span>&#160;    dst_addr += dst_plane_stride;</div><div class="line"><a name="l00907"></a><span class="lineno">  907</span>&#160;    *((__global <span class="keywordtype">float</span> *)dst_addr) = out24;</div><div class="line"><a name="l00908"></a><span class="lineno">  908</span>&#160;    dst_addr += dst_plane_stride;</div><div class="line"><a name="l00909"></a><span class="lineno">  909</span>&#160;    *((__global <span class="keywordtype">float</span> *)dst_addr) = out25;</div><div class="line"><a name="l00910"></a><span class="lineno">  910</span>&#160;    dst_addr += dst_plane_stride;</div><div class="line"><a name="l00911"></a><span class="lineno">  911</span>&#160;    *((__global <span class="keywordtype">float</span> *)dst_addr) = out26;</div><div class="line"><a name="l00912"></a><span class="lineno">  912</span>&#160;    dst_addr += dst_plane_stride;</div><div class="line"><a name="l00913"></a><span class="lineno">  913</span>&#160;    *((__global <span class="keywordtype">float</span> *)dst_addr) = out27;</div><div class="line"><a name="l00914"></a><span class="lineno">  914</span>&#160;    dst_addr += dst_plane_stride;</div><div class="line"><a name="l00915"></a><span class="lineno">  915</span>&#160;    *((__global <span class="keywordtype">float</span> *)dst_addr) = out28;</div><div class="line"><a name="l00916"></a><span class="lineno">  916</span>&#160;    dst_addr += dst_plane_stride;</div><div class="line"><a name="l00917"></a><span class="lineno">  917</span>&#160;    *((__global <span class="keywordtype">float</span> *)dst_addr) = out29;</div><div class="line"><a name="l00918"></a><span class="lineno">  918</span>&#160;    dst_addr += dst_plane_stride;</div><div class="line"><a name="l00919"></a><span class="lineno">  919</span>&#160;</div><div class="line"><a name="l00920"></a><span class="lineno">  920</span>&#160;    <span class="comment">// Row5</span></div><div class="line"><a name="l00921"></a><span class="lineno">  921</span>&#160;    z_coord  = (z * (int)OUTPUT_TILE_H) - (int)PAD_TOP + 5;</div><div class="line"><a name="l00922"></a><span class="lineno">  922</span>&#160;    valid_y0 = select(y_coord0, (int4) - 1, (int4)z_coord &lt; 0);</div><div class="line"><a name="l00923"></a><span class="lineno">  923</span>&#160;    valid_y1 = select(y_coord1, (int2) - 1, (int2)z_coord &lt; 0);</div><div class="line"><a name="l00924"></a><span class="lineno">  924</span>&#160;    valid_y0 = select(valid_y0, (int4)SRC_DIM_1, (int4)z_coord &gt;= (<span class="keywordtype">int</span>)SRC_DIM_2);</div><div class="line"><a name="l00925"></a><span class="lineno">  925</span>&#160;    valid_y1 = select(valid_y1, (int2)SRC_DIM_1, (int2)z_coord &gt;= (<span class="keywordtype">int</span>)SRC_DIM_2);</div><div class="line"><a name="l00926"></a><span class="lineno">  926</span>&#160;    z_coord  = <a class="code" href="namespacearm__compute_1_1utility.xhtml#a12c3c62f510452805c289e180ec78bb7">clamp</a>(z_coord, 0, (<span class="keywordtype">int</span>)SRC_DIM_2 - 1);</div><div class="line"><a name="l00927"></a><span class="lineno">  927</span>&#160;    z_coord  = <a class="code" href="namespacearm__compute_1_1utility.xhtml#a12c3c62f510452805c289e180ec78bb7">clamp</a>(z_coord, 0, (<span class="keywordtype">int</span>)SRC_DIM_2 - 1);</div><div class="line"><a name="l00928"></a><span class="lineno">  928</span>&#160;</div><div class="line"><a name="l00929"></a><span class="lineno">  929</span>&#160;    <span class="keywordtype">float</span> d50 = *(__global <span class="keywordtype">float</span> *)(src_addr + valid_y0.s0 * (<span class="keywordtype">int</span>)src_stride_y + z_coord * src_stride_z);</div><div class="line"><a name="l00930"></a><span class="lineno">  930</span>&#160;    <span class="keywordtype">float</span> d51 = *(__global <span class="keywordtype">float</span> *)(src_addr + valid_y0.s1 * (<span class="keywordtype">int</span>)src_stride_y + z_coord * src_stride_z);</div><div class="line"><a name="l00931"></a><span class="lineno">  931</span>&#160;    <span class="keywordtype">float</span> d52 = *(__global <span class="keywordtype">float</span> *)(src_addr + valid_y0.s2 * (<span class="keywordtype">int</span>)src_stride_y + z_coord * src_stride_z);</div><div class="line"><a name="l00932"></a><span class="lineno">  932</span>&#160;    <span class="keywordtype">float</span> d53 = *(__global <span class="keywordtype">float</span> *)(src_addr + valid_y0.s3 * (<span class="keywordtype">int</span>)src_stride_y + z_coord * src_stride_z);</div><div class="line"><a name="l00933"></a><span class="lineno">  933</span>&#160;    <span class="keywordtype">float</span> d54 = *(__global <span class="keywordtype">float</span> *)(src_addr + valid_y1.s0 * (<span class="keywordtype">int</span>)src_stride_y + z_coord * src_stride_z);</div><div class="line"><a name="l00934"></a><span class="lineno">  934</span>&#160;    <span class="keywordtype">float</span> d55 = *(__global <span class="keywordtype">float</span> *)(src_addr + valid_y1.s1 * (<span class="keywordtype">int</span>)src_stride_y + z_coord * src_stride_z);</div><div class="line"><a name="l00935"></a><span class="lineno">  935</span>&#160;</div><div class="line"><a name="l00936"></a><span class="lineno">  936</span>&#160;    <span class="comment">// Channels [30, 35]</span></div><div class="line"><a name="l00937"></a><span class="lineno">  937</span>&#160;    out0 = 16.0f * d10 - 20.0f * d12 - 20.0f * d30 + 25.0f * d32 + 4.0f * d50 - 5.0f * d52 + d54 + 4.0f * d14 - 5.0f * d34;</div><div class="line"><a name="l00938"></a><span class="lineno">  938</span>&#160;    out1 = -16.0f * d11 - 16.0f * d12 + 4.0f * d13 + 20.0f * d31 + 20.0f * d32 - 5.0f * d33 - 4.0f * d51 - 4.0f * d52 + d53 + d54 + 4.0f * d14 - 5.0f * d34;</div><div class="line"><a name="l00939"></a><span class="lineno">  939</span>&#160;    out2 = 16.0f * d11 - 16.0f * d12 - 4.0f * d13 - 20.0f * d31 + 20.0f * d32 + 5.0f * d33 + 4.0f * d51 - 4.0f * d52 - d53 + d54 + 4.0f * d14 - 5.0f * d34;</div><div class="line"><a name="l00940"></a><span class="lineno">  940</span>&#160;    out3 = -8.0f * d11 - 4.0f * d12 + 8.0f * d13 + 10.0f * d31 - 10.0f * d33 + 5.0f * d32 - 2.0f * d51 + 2.0f * d53 - d52 + d54 + 4.0f * d14 - 5.0f * d34;</div><div class="line"><a name="l00941"></a><span class="lineno">  941</span>&#160;    out4 = 8.0f * d11 - 4.0f * d12 - 8.0f * d13 - 10.0f * d31 + 5.0f * d32 + 10.0f * d33 + 2.0f * d51 - 2.0f * d53 - d52 + d54 + 4.0f * d14 - 5.0f * d34;</div><div class="line"><a name="l00942"></a><span class="lineno">  942</span>&#160;    out5 = 16.0f * d11 - 20.0f * d13 + 4.0f * d15 - 20.0f * d31 + 25.0f * d33 - 5.0f * d35 + 4.0f * d51 - 5.0f * d53 + d55;</div><div class="line"><a name="l00943"></a><span class="lineno">  943</span>&#160;</div><div class="line"><a name="l00944"></a><span class="lineno">  944</span>&#160;    *((__global <span class="keywordtype">float</span> *)dst_addr) = out0;</div><div class="line"><a name="l00945"></a><span class="lineno">  945</span>&#160;    dst_addr += dst_plane_stride;</div><div class="line"><a name="l00946"></a><span class="lineno">  946</span>&#160;    *((__global <span class="keywordtype">float</span> *)dst_addr) = out1;</div><div class="line"><a name="l00947"></a><span class="lineno">  947</span>&#160;    dst_addr += dst_plane_stride;</div><div class="line"><a name="l00948"></a><span class="lineno">  948</span>&#160;    *((__global <span class="keywordtype">float</span> *)dst_addr) = out2;</div><div class="line"><a name="l00949"></a><span class="lineno">  949</span>&#160;    dst_addr += dst_plane_stride;</div><div class="line"><a name="l00950"></a><span class="lineno">  950</span>&#160;    *((__global <span class="keywordtype">float</span> *)dst_addr) = out3;</div><div class="line"><a name="l00951"></a><span class="lineno">  951</span>&#160;    dst_addr += dst_plane_stride;</div><div class="line"><a name="l00952"></a><span class="lineno">  952</span>&#160;    *((__global <span class="keywordtype">float</span> *)dst_addr) = out4;</div><div class="line"><a name="l00953"></a><span class="lineno">  953</span>&#160;    dst_addr += dst_plane_stride;</div><div class="line"><a name="l00954"></a><span class="lineno">  954</span>&#160;    *((__global <span class="keywordtype">float</span> *)dst_addr) = out5;</div><div class="line"><a name="l00955"></a><span class="lineno">  955</span>&#160;    dst_addr += dst_plane_stride;</div><div class="line"><a name="l00956"></a><span class="lineno">  956</span>&#160;<span class="preprocessor">#endif // !defined(WINOGRAD_INPUT_TRANSFORM_HORIZONTAL) &amp;&amp; !defined(WINOGRAD_INPUT_TRANSFORM_VERTICAL)</span></div><div class="line"><a name="l00957"></a><span class="lineno">  957</span>&#160;}</div><div class="line"><a name="l00958"></a><span class="lineno">  958</span>&#160;</div><div class="line"><a name="l00987"></a><span class="lineno">  987</span>&#160;__kernel <span class="keywordtype">void</span> winograd_input_transform_4x4_5x5_stepz1_nhwc(</div><div class="line"><a name="l00988"></a><span class="lineno">  988</span>&#160;    <a class="code" href="helpers_8h.xhtml#a6b83038822d1ae7ab619b684ed3b7fc0">TENSOR3D_DECLARATION</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a6743f0a130e8311e6f5b1a23df102472">src</a>),</div><div class="line"><a name="l00989"></a><span class="lineno">  989</span>&#160;    <a class="code" href="helpers_8h.xhtml#a6b83038822d1ae7ab619b684ed3b7fc0">TENSOR3D_DECLARATION</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>))</div><div class="line"><a name="l00990"></a><span class="lineno">  990</span>&#160;{</div><div class="line"><a name="l00991"></a><span class="lineno">  991</span>&#160;    <span class="keywordtype">int</span> x = get_global_id(0);</div><div class="line"><a name="l00992"></a><span class="lineno">  992</span>&#160;    <span class="keywordtype">int</span> y = get_global_id(1);</div><div class="line"><a name="l00993"></a><span class="lineno">  993</span>&#160;    <span class="keywordtype">int</span> z = get_global_id(2);</div><div class="line"><a name="l00994"></a><span class="lineno">  994</span>&#160;</div><div class="line"><a name="l00995"></a><span class="lineno">  995</span>&#160;    <span class="comment">// Compute input address</span></div><div class="line"><a name="l00996"></a><span class="lineno">  996</span>&#160;    __global uchar *src_addr = src_ptr + src_offset_first_element_in_bytes + x * <span class="keyword">sizeof</span>(float);</div><div class="line"><a name="l00997"></a><span class="lineno">  997</span>&#160;</div><div class="line"><a name="l00998"></a><span class="lineno">  998</span>&#160;<span class="preprocessor">#if defined(WINOGRAD_INPUT_TRANSFORM_HORIZONTAL)</span></div><div class="line"><a name="l00999"></a><span class="lineno">  999</span>&#160;    <span class="comment">// Clamp coordinates. This clamp is valid for all rows</span></div><div class="line"><a name="l01000"></a><span class="lineno"> 1000</span>&#160;    int8 y_coord = (int8)(y * OUTPUT_TILE_W) + (int8)(0, 1, 2, 3, 4, 5, 6, 7) - (int8)PAD_LEFT;</div><div class="line"><a name="l01001"></a><span class="lineno"> 1001</span>&#160;    y_coord      = <a class="code" href="namespacearm__compute_1_1utility.xhtml#a12c3c62f510452805c289e180ec78bb7">clamp</a>(y_coord, (int8) - 1, (int8)SRC_DIM_1);</div><div class="line"><a name="l01002"></a><span class="lineno"> 1002</span>&#160;</div><div class="line"><a name="l01003"></a><span class="lineno"> 1003</span>&#160;    <span class="comment">// Row0</span></div><div class="line"><a name="l01004"></a><span class="lineno"> 1004</span>&#160;    <span class="comment">// We can skip the border clamping along the z dimension as we cannot read out-of-bound in case of 5x1 kernels</span></div><div class="line"><a name="l01005"></a><span class="lineno"> 1005</span>&#160;    <span class="keywordtype">int</span> z_coord = z * OUTPUT_TILE_H;</div><div class="line"><a name="l01006"></a><span class="lineno"> 1006</span>&#160;</div><div class="line"><a name="l01007"></a><span class="lineno"> 1007</span>&#160;    <span class="comment">// Load the input tile</span></div><div class="line"><a name="l01008"></a><span class="lineno"> 1008</span>&#160;    float8 in_row0;</div><div class="line"><a name="l01009"></a><span class="lineno"> 1009</span>&#160;    in_row0.s0 = *(__global <span class="keywordtype">float</span> *)(src_addr + y_coord.s0 * (<span class="keywordtype">int</span>)src_stride_y + z_coord * src_stride_z);</div><div class="line"><a name="l01010"></a><span class="lineno"> 1010</span>&#160;    in_row0.s1 = *(__global <span class="keywordtype">float</span> *)(src_addr + y_coord.s1 * (<span class="keywordtype">int</span>)src_stride_y + z_coord * src_stride_z);</div><div class="line"><a name="l01011"></a><span class="lineno"> 1011</span>&#160;    in_row0.s2 = *(__global <span class="keywordtype">float</span> *)(src_addr + y_coord.s2 * (<span class="keywordtype">int</span>)src_stride_y + z_coord * src_stride_z);</div><div class="line"><a name="l01012"></a><span class="lineno"> 1012</span>&#160;    in_row0.s3 = *(__global <span class="keywordtype">float</span> *)(src_addr + y_coord.s3 * (<span class="keywordtype">int</span>)src_stride_y + z_coord * src_stride_z);</div><div class="line"><a name="l01013"></a><span class="lineno"> 1013</span>&#160;    in_row0.s4 = *(__global <span class="keywordtype">float</span> *)(src_addr + y_coord.s4 * (<span class="keywordtype">int</span>)src_stride_y + z_coord * src_stride_z);</div><div class="line"><a name="l01014"></a><span class="lineno"> 1014</span>&#160;    in_row0.s5 = *(__global <span class="keywordtype">float</span> *)(src_addr + y_coord.s5 * (<span class="keywordtype">int</span>)src_stride_y + z_coord * src_stride_z);</div><div class="line"><a name="l01015"></a><span class="lineno"> 1015</span>&#160;    in_row0.s6 = *(__global <span class="keywordtype">float</span> *)(src_addr + y_coord.s6 * (<span class="keywordtype">int</span>)src_stride_y + z_coord * src_stride_z);</div><div class="line"><a name="l01016"></a><span class="lineno"> 1016</span>&#160;    in_row0.s7 = *(__global <span class="keywordtype">float</span> *)(src_addr + y_coord.s7 * (<span class="keywordtype">int</span>)src_stride_y + z_coord * src_stride_z);</div><div class="line"><a name="l01017"></a><span class="lineno"> 1017</span>&#160;</div><div class="line"><a name="l01018"></a><span class="lineno"> 1018</span>&#160;    <span class="comment">// Calculate common factors for intermediate tensor</span></div><div class="line"><a name="l01019"></a><span class="lineno"> 1019</span>&#160;    float8 comm_fact0 = 0.0f;</div><div class="line"><a name="l01020"></a><span class="lineno"> 1020</span>&#160;    float8 tmp0       = in_row0;</div><div class="line"><a name="l01021"></a><span class="lineno"> 1021</span>&#160;</div><div class="line"><a name="l01022"></a><span class="lineno"> 1022</span>&#160;    float8 out0 = (float8)0.0f;</div><div class="line"><a name="l01023"></a><span class="lineno"> 1023</span>&#160;</div><div class="line"><a name="l01024"></a><span class="lineno"> 1024</span>&#160;    <a class="code" href="winograd__input__transform_8cl.xhtml#a993dcfcc7bd076d4d0f33be70e42e2b9">OUTPUT_ROW_4x4_5x5</a>(out0, tmp0, comm_fact0);</div><div class="line"><a name="l01025"></a><span class="lineno"> 1025</span>&#160;</div><div class="line"><a name="l01026"></a><span class="lineno"> 1026</span>&#160;<span class="preprocessor">#elif defined(WINOGRAD_INPUT_TRANSFORM_VERTICAL) // defined(WINOGRAD_INPUT_TRANSFORM_HORIZONTAL)</span></div><div class="line"><a name="l01027"></a><span class="lineno"> 1027</span>&#160;    <span class="comment">// We can skip the border clamping along the y dimension as we cannot read out-of-bound in case of 1x5 kernels</span></div><div class="line"><a name="l01028"></a><span class="lineno"> 1028</span>&#160;    <span class="keywordtype">int</span> y_coord = y * (int)OUTPUT_TILE_W;</div><div class="line"><a name="l01029"></a><span class="lineno"> 1029</span>&#160;</div><div class="line"><a name="l01030"></a><span class="lineno"> 1030</span>&#160;    <span class="comment">// Row0</span></div><div class="line"><a name="l01031"></a><span class="lineno"> 1031</span>&#160;    <span class="comment">// We can skip the border clamping along the z dimension as we cannot read out-of-bound in case of 5x1 kernels</span></div><div class="line"><a name="l01032"></a><span class="lineno"> 1032</span>&#160;    int8 z_coord = (int8)(z * OUTPUT_TILE_H) + (int8)(0, 1, 2, 3, 4, 5, 6, 7) - (int8)PAD_TOP;</div><div class="line"><a name="l01033"></a><span class="lineno"> 1033</span>&#160;    int8 valid_y = select((int8)y_coord, (int8) - 1, z_coord &lt; (int8)0);         <span class="comment">// If z &lt; 0, set y to -1</span></div><div class="line"><a name="l01034"></a><span class="lineno"> 1034</span>&#160;    valid_y      = select(valid_y, (int8)SRC_DIM_1, z_coord &gt;= (int8)SRC_DIM_2); <span class="comment">// If z &gt;= SRC_DIM_2, set y to SRC_DIM_2</span></div><div class="line"><a name="l01035"></a><span class="lineno"> 1035</span>&#160;    z_coord      = <a class="code" href="namespacearm__compute_1_1utility.xhtml#a12c3c62f510452805c289e180ec78bb7">clamp</a>(z_coord, (int8)0, (int8)SRC_DIM_2 - 1);                 <span class="comment">// Clamp z coordinate</span></div><div class="line"><a name="l01036"></a><span class="lineno"> 1036</span>&#160;</div><div class="line"><a name="l01037"></a><span class="lineno"> 1037</span>&#160;    <span class="comment">// Load the input tile</span></div><div class="line"><a name="l01038"></a><span class="lineno"> 1038</span>&#160;    float8 in_row0;</div><div class="line"><a name="l01039"></a><span class="lineno"> 1039</span>&#160;    in_row0.s0 = *(__global <span class="keywordtype">float</span> *)(src_addr + valid_y.s0 * (<span class="keywordtype">int</span>)src_stride_y + z_coord.s0 * src_stride_z);</div><div class="line"><a name="l01040"></a><span class="lineno"> 1040</span>&#160;    in_row0.s1 = *(__global <span class="keywordtype">float</span> *)(src_addr + valid_y.s1 * (<span class="keywordtype">int</span>)src_stride_y + z_coord.s1 * src_stride_z);</div><div class="line"><a name="l01041"></a><span class="lineno"> 1041</span>&#160;    in_row0.s2 = *(__global <span class="keywordtype">float</span> *)(src_addr + valid_y.s2 * (<span class="keywordtype">int</span>)src_stride_y + z_coord.s2 * src_stride_z);</div><div class="line"><a name="l01042"></a><span class="lineno"> 1042</span>&#160;    in_row0.s3 = *(__global <span class="keywordtype">float</span> *)(src_addr + valid_y.s3 * (<span class="keywordtype">int</span>)src_stride_y + z_coord.s3 * src_stride_z);</div><div class="line"><a name="l01043"></a><span class="lineno"> 1043</span>&#160;    in_row0.s4 = *(__global <span class="keywordtype">float</span> *)(src_addr + valid_y.s4 * (<span class="keywordtype">int</span>)src_stride_y + z_coord.s4 * src_stride_z);</div><div class="line"><a name="l01044"></a><span class="lineno"> 1044</span>&#160;    in_row0.s5 = *(__global <span class="keywordtype">float</span> *)(src_addr + valid_y.s5 * (<span class="keywordtype">int</span>)src_stride_y + z_coord.s5 * src_stride_z);</div><div class="line"><a name="l01045"></a><span class="lineno"> 1045</span>&#160;    in_row0.s6 = *(__global <span class="keywordtype">float</span> *)(src_addr + valid_y.s6 * (<span class="keywordtype">int</span>)src_stride_y + z_coord.s6 * src_stride_z);</div><div class="line"><a name="l01046"></a><span class="lineno"> 1046</span>&#160;    in_row0.s7 = *(__global <span class="keywordtype">float</span> *)(src_addr + valid_y.s7 * (<span class="keywordtype">int</span>)src_stride_y + z_coord.s7 * src_stride_z);</div><div class="line"><a name="l01047"></a><span class="lineno"> 1047</span>&#160;</div><div class="line"><a name="l01048"></a><span class="lineno"> 1048</span>&#160;    <span class="comment">// Calculate common factors for intermediate tensor</span></div><div class="line"><a name="l01049"></a><span class="lineno"> 1049</span>&#160;    float8 comm_fact0 = 0.0f;</div><div class="line"><a name="l01050"></a><span class="lineno"> 1050</span>&#160;    float8 tmp0       = in_row0;</div><div class="line"><a name="l01051"></a><span class="lineno"> 1051</span>&#160;</div><div class="line"><a name="l01052"></a><span class="lineno"> 1052</span>&#160;    float8 out0 = (float8)0.0f;</div><div class="line"><a name="l01053"></a><span class="lineno"> 1053</span>&#160;</div><div class="line"><a name="l01054"></a><span class="lineno"> 1054</span>&#160;    <a class="code" href="winograd__input__transform_8cl.xhtml#a993dcfcc7bd076d4d0f33be70e42e2b9">OUTPUT_ROW_4x4_5x5</a>(out0, tmp0, comm_fact0);</div><div class="line"><a name="l01055"></a><span class="lineno"> 1055</span>&#160;<span class="preprocessor">#else                                            // defined(WINOGRAD_INPUT_TRANSFORM_HORIZONTAL)</span></div><div class="line"><a name="l01056"></a><span class="lineno"> 1056</span>&#160;    float8 in_row0, in_row1, in_row2, in_row3, in_row4, in_row5, in_row6, in_row7;</div><div class="line"><a name="l01057"></a><span class="lineno"> 1057</span>&#160;</div><div class="line"><a name="l01058"></a><span class="lineno"> 1058</span>&#160;    <span class="comment">// Clamp coordinates. This clamp is valid for all rows</span></div><div class="line"><a name="l01059"></a><span class="lineno"> 1059</span>&#160;    int8 y_coord = (int8)(y * OUTPUT_TILE_W) + (int8)(0, 1, 2, 3, 4, 5, 6, 7) - (int8)PAD_LEFT;</div><div class="line"><a name="l01060"></a><span class="lineno"> 1060</span>&#160;    y_coord      = <a class="code" href="namespacearm__compute_1_1utility.xhtml#a12c3c62f510452805c289e180ec78bb7">clamp</a>(y_coord, (int8) - 1, (int8)SRC_DIM_1);</div><div class="line"><a name="l01061"></a><span class="lineno"> 1061</span>&#160;</div><div class="line"><a name="l01062"></a><span class="lineno"> 1062</span>&#160;    <span class="comment">// Row0</span></div><div class="line"><a name="l01063"></a><span class="lineno"> 1063</span>&#160;    <span class="keywordtype">int</span>  z_coord = (z * (int)OUTPUT_TILE_H) - (int)PAD_TOP + 0;</div><div class="line"><a name="l01064"></a><span class="lineno"> 1064</span>&#160;    int8 valid_y = select(y_coord, (int8) - 1, (int8)z_coord &lt; 0);                    <span class="comment">// If z &lt; 0, set y to -1</span></div><div class="line"><a name="l01065"></a><span class="lineno"> 1065</span>&#160;    valid_y      = select(valid_y, (int8)SRC_DIM_1, (int8)z_coord &gt;= (<span class="keywordtype">int</span>)SRC_DIM_2); <span class="comment">// If z &gt;= SRC_DIM_2, set y to SRC_DIM_2</span></div><div class="line"><a name="l01066"></a><span class="lineno"> 1066</span>&#160;    z_coord      = <a class="code" href="namespacearm__compute_1_1utility.xhtml#a12c3c62f510452805c289e180ec78bb7">clamp</a>(z_coord, 0, (<span class="keywordtype">int</span>)SRC_DIM_2 - 1);                             <span class="comment">// Clamp z coordinate</span></div><div class="line"><a name="l01067"></a><span class="lineno"> 1067</span>&#160;</div><div class="line"><a name="l01068"></a><span class="lineno"> 1068</span>&#160;    <span class="comment">// Load the input tile</span></div><div class="line"><a name="l01069"></a><span class="lineno"> 1069</span>&#160;    in_row0.s0 = *(__global <span class="keywordtype">float</span> *)(src_addr + valid_y.s0 * (<span class="keywordtype">int</span>)src_stride_y + z_coord * src_stride_z);</div><div class="line"><a name="l01070"></a><span class="lineno"> 1070</span>&#160;    in_row0.s1 = *(__global <span class="keywordtype">float</span> *)(src_addr + valid_y.s1 * (<span class="keywordtype">int</span>)src_stride_y + z_coord * src_stride_z);</div><div class="line"><a name="l01071"></a><span class="lineno"> 1071</span>&#160;    in_row0.s2 = *(__global <span class="keywordtype">float</span> *)(src_addr + valid_y.s2 * (<span class="keywordtype">int</span>)src_stride_y + z_coord * src_stride_z);</div><div class="line"><a name="l01072"></a><span class="lineno"> 1072</span>&#160;    in_row0.s3 = *(__global <span class="keywordtype">float</span> *)(src_addr + valid_y.s3 * (<span class="keywordtype">int</span>)src_stride_y + z_coord * src_stride_z);</div><div class="line"><a name="l01073"></a><span class="lineno"> 1073</span>&#160;    in_row0.s4 = *(__global <span class="keywordtype">float</span> *)(src_addr + valid_y.s4 * (<span class="keywordtype">int</span>)src_stride_y + z_coord * src_stride_z);</div><div class="line"><a name="l01074"></a><span class="lineno"> 1074</span>&#160;    in_row0.s5 = *(__global <span class="keywordtype">float</span> *)(src_addr + valid_y.s5 * (<span class="keywordtype">int</span>)src_stride_y + z_coord * src_stride_z);</div><div class="line"><a name="l01075"></a><span class="lineno"> 1075</span>&#160;    in_row0.s6 = *(__global <span class="keywordtype">float</span> *)(src_addr + valid_y.s6 * (<span class="keywordtype">int</span>)src_stride_y + z_coord * src_stride_z);</div><div class="line"><a name="l01076"></a><span class="lineno"> 1076</span>&#160;    in_row0.s7 = *(__global <span class="keywordtype">float</span> *)(src_addr + valid_y.s7 * (<span class="keywordtype">int</span>)src_stride_y + z_coord * src_stride_z);</div><div class="line"><a name="l01077"></a><span class="lineno"> 1077</span>&#160;</div><div class="line"><a name="l01078"></a><span class="lineno"> 1078</span>&#160;    <span class="comment">// Row1</span></div><div class="line"><a name="l01079"></a><span class="lineno"> 1079</span>&#160;    z_coord = (z * (int)OUTPUT_TILE_H) - (int)PAD_TOP + 1;</div><div class="line"><a name="l01080"></a><span class="lineno"> 1080</span>&#160;    valid_y = select(y_coord, (int8) - 1, (int8)z_coord &lt; 0);</div><div class="line"><a name="l01081"></a><span class="lineno"> 1081</span>&#160;    valid_y = select(valid_y, (int8)SRC_DIM_1, (int8)z_coord &gt;= (<span class="keywordtype">int</span>)SRC_DIM_2);</div><div class="line"><a name="l01082"></a><span class="lineno"> 1082</span>&#160;    z_coord = <a class="code" href="namespacearm__compute_1_1utility.xhtml#a12c3c62f510452805c289e180ec78bb7">clamp</a>(z_coord, 0, (<span class="keywordtype">int</span>)SRC_DIM_2 - 1);</div><div class="line"><a name="l01083"></a><span class="lineno"> 1083</span>&#160;</div><div class="line"><a name="l01084"></a><span class="lineno"> 1084</span>&#160;    in_row1.s0 = *(__global <span class="keywordtype">float</span> *)(src_addr + valid_y.s0 * (<span class="keywordtype">int</span>)src_stride_y + z_coord * src_stride_z);</div><div class="line"><a name="l01085"></a><span class="lineno"> 1085</span>&#160;    in_row1.s1 = *(__global <span class="keywordtype">float</span> *)(src_addr + valid_y.s1 * (<span class="keywordtype">int</span>)src_stride_y + z_coord * src_stride_z);</div><div class="line"><a name="l01086"></a><span class="lineno"> 1086</span>&#160;    in_row1.s2 = *(__global <span class="keywordtype">float</span> *)(src_addr + valid_y.s2 * (<span class="keywordtype">int</span>)src_stride_y + z_coord * src_stride_z);</div><div class="line"><a name="l01087"></a><span class="lineno"> 1087</span>&#160;    in_row1.s3 = *(__global <span class="keywordtype">float</span> *)(src_addr + valid_y.s3 * (<span class="keywordtype">int</span>)src_stride_y + z_coord * src_stride_z);</div><div class="line"><a name="l01088"></a><span class="lineno"> 1088</span>&#160;    in_row1.s4 = *(__global <span class="keywordtype">float</span> *)(src_addr + valid_y.s4 * (<span class="keywordtype">int</span>)src_stride_y + z_coord * src_stride_z);</div><div class="line"><a name="l01089"></a><span class="lineno"> 1089</span>&#160;    in_row1.s5 = *(__global <span class="keywordtype">float</span> *)(src_addr + valid_y.s5 * (<span class="keywordtype">int</span>)src_stride_y + z_coord * src_stride_z);</div><div class="line"><a name="l01090"></a><span class="lineno"> 1090</span>&#160;    in_row1.s6 = *(__global <span class="keywordtype">float</span> *)(src_addr + valid_y.s6 * (<span class="keywordtype">int</span>)src_stride_y + z_coord * src_stride_z);</div><div class="line"><a name="l01091"></a><span class="lineno"> 1091</span>&#160;    in_row1.s7 = *(__global <span class="keywordtype">float</span> *)(src_addr + valid_y.s7 * (<span class="keywordtype">int</span>)src_stride_y + z_coord * src_stride_z);</div><div class="line"><a name="l01092"></a><span class="lineno"> 1092</span>&#160;</div><div class="line"><a name="l01093"></a><span class="lineno"> 1093</span>&#160;    <span class="comment">// Row2</span></div><div class="line"><a name="l01094"></a><span class="lineno"> 1094</span>&#160;    z_coord = (z * (int)OUTPUT_TILE_H) - (int)PAD_TOP + 2;</div><div class="line"><a name="l01095"></a><span class="lineno"> 1095</span>&#160;    valid_y = select(y_coord, (int8) - 1, (int8)z_coord &lt; 0);</div><div class="line"><a name="l01096"></a><span class="lineno"> 1096</span>&#160;    valid_y = select(valid_y, (int8)SRC_DIM_1, (int8)z_coord &gt;= (<span class="keywordtype">int</span>)SRC_DIM_2);</div><div class="line"><a name="l01097"></a><span class="lineno"> 1097</span>&#160;    z_coord = <a class="code" href="namespacearm__compute_1_1utility.xhtml#a12c3c62f510452805c289e180ec78bb7">clamp</a>(z_coord, 0, (<span class="keywordtype">int</span>)SRC_DIM_2 - 1);</div><div class="line"><a name="l01098"></a><span class="lineno"> 1098</span>&#160;</div><div class="line"><a name="l01099"></a><span class="lineno"> 1099</span>&#160;    in_row2.s0 = *(__global <span class="keywordtype">float</span> *)(src_addr + valid_y.s0 * (<span class="keywordtype">int</span>)src_stride_y + z_coord * src_stride_z);</div><div class="line"><a name="l01100"></a><span class="lineno"> 1100</span>&#160;    in_row2.s1 = *(__global <span class="keywordtype">float</span> *)(src_addr + valid_y.s1 * (<span class="keywordtype">int</span>)src_stride_y + z_coord * src_stride_z);</div><div class="line"><a name="l01101"></a><span class="lineno"> 1101</span>&#160;    in_row2.s2 = *(__global <span class="keywordtype">float</span> *)(src_addr + valid_y.s2 * (<span class="keywordtype">int</span>)src_stride_y + z_coord * src_stride_z);</div><div class="line"><a name="l01102"></a><span class="lineno"> 1102</span>&#160;    in_row2.s3 = *(__global <span class="keywordtype">float</span> *)(src_addr + valid_y.s3 * (<span class="keywordtype">int</span>)src_stride_y + z_coord * src_stride_z);</div><div class="line"><a name="l01103"></a><span class="lineno"> 1103</span>&#160;    in_row2.s4 = *(__global <span class="keywordtype">float</span> *)(src_addr + valid_y.s4 * (<span class="keywordtype">int</span>)src_stride_y + z_coord * src_stride_z);</div><div class="line"><a name="l01104"></a><span class="lineno"> 1104</span>&#160;    in_row2.s5 = *(__global <span class="keywordtype">float</span> *)(src_addr + valid_y.s5 * (<span class="keywordtype">int</span>)src_stride_y + z_coord * src_stride_z);</div><div class="line"><a name="l01105"></a><span class="lineno"> 1105</span>&#160;    in_row2.s6 = *(__global <span class="keywordtype">float</span> *)(src_addr + valid_y.s6 * (<span class="keywordtype">int</span>)src_stride_y + z_coord * src_stride_z);</div><div class="line"><a name="l01106"></a><span class="lineno"> 1106</span>&#160;    in_row2.s7 = *(__global <span class="keywordtype">float</span> *)(src_addr + valid_y.s7 * (<span class="keywordtype">int</span>)src_stride_y + z_coord * src_stride_z);</div><div class="line"><a name="l01107"></a><span class="lineno"> 1107</span>&#160;</div><div class="line"><a name="l01108"></a><span class="lineno"> 1108</span>&#160;    <span class="comment">// Row3</span></div><div class="line"><a name="l01109"></a><span class="lineno"> 1109</span>&#160;    z_coord = (z * (int)OUTPUT_TILE_H) - (int)PAD_TOP + 3;</div><div class="line"><a name="l01110"></a><span class="lineno"> 1110</span>&#160;    valid_y = select(y_coord, (int8) - 1, (int8)z_coord &lt; 0);</div><div class="line"><a name="l01111"></a><span class="lineno"> 1111</span>&#160;    valid_y = select(valid_y, (int8)SRC_DIM_1, (int8)z_coord &gt;= (<span class="keywordtype">int</span>)SRC_DIM_2);</div><div class="line"><a name="l01112"></a><span class="lineno"> 1112</span>&#160;    z_coord = <a class="code" href="namespacearm__compute_1_1utility.xhtml#a12c3c62f510452805c289e180ec78bb7">clamp</a>(z_coord, 0, (<span class="keywordtype">int</span>)SRC_DIM_2 - 1);</div><div class="line"><a name="l01113"></a><span class="lineno"> 1113</span>&#160;</div><div class="line"><a name="l01114"></a><span class="lineno"> 1114</span>&#160;    in_row3.s0 = *(__global <span class="keywordtype">float</span> *)(src_addr + valid_y.s0 * (<span class="keywordtype">int</span>)src_stride_y + z_coord * src_stride_z);</div><div class="line"><a name="l01115"></a><span class="lineno"> 1115</span>&#160;    in_row3.s1 = *(__global <span class="keywordtype">float</span> *)(src_addr + valid_y.s1 * (<span class="keywordtype">int</span>)src_stride_y + z_coord * src_stride_z);</div><div class="line"><a name="l01116"></a><span class="lineno"> 1116</span>&#160;    in_row3.s2 = *(__global <span class="keywordtype">float</span> *)(src_addr + valid_y.s2 * (<span class="keywordtype">int</span>)src_stride_y + z_coord * src_stride_z);</div><div class="line"><a name="l01117"></a><span class="lineno"> 1117</span>&#160;    in_row3.s3 = *(__global <span class="keywordtype">float</span> *)(src_addr + valid_y.s3 * (<span class="keywordtype">int</span>)src_stride_y + z_coord * src_stride_z);</div><div class="line"><a name="l01118"></a><span class="lineno"> 1118</span>&#160;    in_row3.s4 = *(__global <span class="keywordtype">float</span> *)(src_addr + valid_y.s4 * (<span class="keywordtype">int</span>)src_stride_y + z_coord * src_stride_z);</div><div class="line"><a name="l01119"></a><span class="lineno"> 1119</span>&#160;    in_row3.s5 = *(__global <span class="keywordtype">float</span> *)(src_addr + valid_y.s5 * (<span class="keywordtype">int</span>)src_stride_y + z_coord * src_stride_z);</div><div class="line"><a name="l01120"></a><span class="lineno"> 1120</span>&#160;    in_row3.s6 = *(__global <span class="keywordtype">float</span> *)(src_addr + valid_y.s6 * (<span class="keywordtype">int</span>)src_stride_y + z_coord * src_stride_z);</div><div class="line"><a name="l01121"></a><span class="lineno"> 1121</span>&#160;    in_row3.s7 = *(__global <span class="keywordtype">float</span> *)(src_addr + valid_y.s7 * (<span class="keywordtype">int</span>)src_stride_y + z_coord * src_stride_z);</div><div class="line"><a name="l01122"></a><span class="lineno"> 1122</span>&#160;</div><div class="line"><a name="l01123"></a><span class="lineno"> 1123</span>&#160;    <span class="comment">// Row4</span></div><div class="line"><a name="l01124"></a><span class="lineno"> 1124</span>&#160;    z_coord = (z * (int)OUTPUT_TILE_H) - (int)PAD_TOP + 4;</div><div class="line"><a name="l01125"></a><span class="lineno"> 1125</span>&#160;    valid_y = select(y_coord, (int8) - 1, (int8)z_coord &lt; 0);</div><div class="line"><a name="l01126"></a><span class="lineno"> 1126</span>&#160;    valid_y = select(valid_y, (int8)SRC_DIM_1, (int8)z_coord &gt;= (<span class="keywordtype">int</span>)SRC_DIM_2);</div><div class="line"><a name="l01127"></a><span class="lineno"> 1127</span>&#160;    z_coord = <a class="code" href="namespacearm__compute_1_1utility.xhtml#a12c3c62f510452805c289e180ec78bb7">clamp</a>(z_coord, 0, (<span class="keywordtype">int</span>)SRC_DIM_2 - 1);</div><div class="line"><a name="l01128"></a><span class="lineno"> 1128</span>&#160;</div><div class="line"><a name="l01129"></a><span class="lineno"> 1129</span>&#160;    in_row4.s0 = *(__global <span class="keywordtype">float</span> *)(src_addr + valid_y.s0 * (<span class="keywordtype">int</span>)src_stride_y + z_coord * src_stride_z);</div><div class="line"><a name="l01130"></a><span class="lineno"> 1130</span>&#160;    in_row4.s1 = *(__global <span class="keywordtype">float</span> *)(src_addr + valid_y.s1 * (<span class="keywordtype">int</span>)src_stride_y + z_coord * src_stride_z);</div><div class="line"><a name="l01131"></a><span class="lineno"> 1131</span>&#160;    in_row4.s2 = *(__global <span class="keywordtype">float</span> *)(src_addr + valid_y.s2 * (<span class="keywordtype">int</span>)src_stride_y + z_coord * src_stride_z);</div><div class="line"><a name="l01132"></a><span class="lineno"> 1132</span>&#160;    in_row4.s3 = *(__global <span class="keywordtype">float</span> *)(src_addr + valid_y.s3 * (<span class="keywordtype">int</span>)src_stride_y + z_coord * src_stride_z);</div><div class="line"><a name="l01133"></a><span class="lineno"> 1133</span>&#160;    in_row4.s4 = *(__global <span class="keywordtype">float</span> *)(src_addr + valid_y.s4 * (<span class="keywordtype">int</span>)src_stride_y + z_coord * src_stride_z);</div><div class="line"><a name="l01134"></a><span class="lineno"> 1134</span>&#160;    in_row4.s5 = *(__global <span class="keywordtype">float</span> *)(src_addr + valid_y.s5 * (<span class="keywordtype">int</span>)src_stride_y + z_coord * src_stride_z);</div><div class="line"><a name="l01135"></a><span class="lineno"> 1135</span>&#160;    in_row4.s6 = *(__global <span class="keywordtype">float</span> *)(src_addr + valid_y.s6 * (<span class="keywordtype">int</span>)src_stride_y + z_coord * src_stride_z);</div><div class="line"><a name="l01136"></a><span class="lineno"> 1136</span>&#160;    in_row4.s7 = *(__global <span class="keywordtype">float</span> *)(src_addr + valid_y.s7 * (<span class="keywordtype">int</span>)src_stride_y + z_coord * src_stride_z);</div><div class="line"><a name="l01137"></a><span class="lineno"> 1137</span>&#160;</div><div class="line"><a name="l01138"></a><span class="lineno"> 1138</span>&#160;    <span class="comment">// Row5</span></div><div class="line"><a name="l01139"></a><span class="lineno"> 1139</span>&#160;    z_coord = (z * (int)OUTPUT_TILE_H) - (int)PAD_TOP + 5;</div><div class="line"><a name="l01140"></a><span class="lineno"> 1140</span>&#160;    valid_y = select(y_coord, (int8) - 1, (int8)z_coord &lt; 0);</div><div class="line"><a name="l01141"></a><span class="lineno"> 1141</span>&#160;    valid_y = select(valid_y, (int8)SRC_DIM_1, (int8)z_coord &gt;= (<span class="keywordtype">int</span>)SRC_DIM_2);</div><div class="line"><a name="l01142"></a><span class="lineno"> 1142</span>&#160;    z_coord = <a class="code" href="namespacearm__compute_1_1utility.xhtml#a12c3c62f510452805c289e180ec78bb7">clamp</a>(z_coord, 0, (<span class="keywordtype">int</span>)SRC_DIM_2 - 1);</div><div class="line"><a name="l01143"></a><span class="lineno"> 1143</span>&#160;</div><div class="line"><a name="l01144"></a><span class="lineno"> 1144</span>&#160;    in_row5.s0 = *(__global <span class="keywordtype">float</span> *)(src_addr + valid_y.s0 * (<span class="keywordtype">int</span>)src_stride_y + z_coord * src_stride_z);</div><div class="line"><a name="l01145"></a><span class="lineno"> 1145</span>&#160;    in_row5.s1 = *(__global <span class="keywordtype">float</span> *)(src_addr + valid_y.s1 * (<span class="keywordtype">int</span>)src_stride_y + z_coord * src_stride_z);</div><div class="line"><a name="l01146"></a><span class="lineno"> 1146</span>&#160;    in_row5.s2 = *(__global <span class="keywordtype">float</span> *)(src_addr + valid_y.s2 * (<span class="keywordtype">int</span>)src_stride_y + z_coord * src_stride_z);</div><div class="line"><a name="l01147"></a><span class="lineno"> 1147</span>&#160;    in_row5.s3 = *(__global <span class="keywordtype">float</span> *)(src_addr + valid_y.s3 * (<span class="keywordtype">int</span>)src_stride_y + z_coord * src_stride_z);</div><div class="line"><a name="l01148"></a><span class="lineno"> 1148</span>&#160;    in_row5.s4 = *(__global <span class="keywordtype">float</span> *)(src_addr + valid_y.s4 * (<span class="keywordtype">int</span>)src_stride_y + z_coord * src_stride_z);</div><div class="line"><a name="l01149"></a><span class="lineno"> 1149</span>&#160;    in_row5.s5 = *(__global <span class="keywordtype">float</span> *)(src_addr + valid_y.s5 * (<span class="keywordtype">int</span>)src_stride_y + z_coord * src_stride_z);</div><div class="line"><a name="l01150"></a><span class="lineno"> 1150</span>&#160;    in_row5.s6 = *(__global <span class="keywordtype">float</span> *)(src_addr + valid_y.s6 * (<span class="keywordtype">int</span>)src_stride_y + z_coord * src_stride_z);</div><div class="line"><a name="l01151"></a><span class="lineno"> 1151</span>&#160;    in_row5.s7 = *(__global <span class="keywordtype">float</span> *)(src_addr + valid_y.s7 * (<span class="keywordtype">int</span>)src_stride_y + z_coord * src_stride_z);</div><div class="line"><a name="l01152"></a><span class="lineno"> 1152</span>&#160;</div><div class="line"><a name="l01153"></a><span class="lineno"> 1153</span>&#160;    <span class="comment">// Row6</span></div><div class="line"><a name="l01154"></a><span class="lineno"> 1154</span>&#160;    z_coord = (z * (int)OUTPUT_TILE_H) - (int)PAD_TOP + 6;</div><div class="line"><a name="l01155"></a><span class="lineno"> 1155</span>&#160;    valid_y = select(y_coord, (int8) - 1, (int8)z_coord &lt; 0);</div><div class="line"><a name="l01156"></a><span class="lineno"> 1156</span>&#160;    valid_y = select(valid_y, (int8)SRC_DIM_1, (int8)z_coord &gt;= (<span class="keywordtype">int</span>)SRC_DIM_2);</div><div class="line"><a name="l01157"></a><span class="lineno"> 1157</span>&#160;    z_coord = <a class="code" href="namespacearm__compute_1_1utility.xhtml#a12c3c62f510452805c289e180ec78bb7">clamp</a>(z_coord, 0, (<span class="keywordtype">int</span>)SRC_DIM_2 - 1);</div><div class="line"><a name="l01158"></a><span class="lineno"> 1158</span>&#160;</div><div class="line"><a name="l01159"></a><span class="lineno"> 1159</span>&#160;    in_row6.s0 = *(__global <span class="keywordtype">float</span> *)(src_addr + valid_y.s0 * (<span class="keywordtype">int</span>)src_stride_y + z_coord * src_stride_z);</div><div class="line"><a name="l01160"></a><span class="lineno"> 1160</span>&#160;    in_row6.s1 = *(__global <span class="keywordtype">float</span> *)(src_addr + valid_y.s1 * (<span class="keywordtype">int</span>)src_stride_y + z_coord * src_stride_z);</div><div class="line"><a name="l01161"></a><span class="lineno"> 1161</span>&#160;    in_row6.s2 = *(__global <span class="keywordtype">float</span> *)(src_addr + valid_y.s2 * (<span class="keywordtype">int</span>)src_stride_y + z_coord * src_stride_z);</div><div class="line"><a name="l01162"></a><span class="lineno"> 1162</span>&#160;    in_row6.s3 = *(__global <span class="keywordtype">float</span> *)(src_addr + valid_y.s3 * (<span class="keywordtype">int</span>)src_stride_y + z_coord * src_stride_z);</div><div class="line"><a name="l01163"></a><span class="lineno"> 1163</span>&#160;    in_row6.s4 = *(__global <span class="keywordtype">float</span> *)(src_addr + valid_y.s4 * (<span class="keywordtype">int</span>)src_stride_y + z_coord * src_stride_z);</div><div class="line"><a name="l01164"></a><span class="lineno"> 1164</span>&#160;    in_row6.s5 = *(__global <span class="keywordtype">float</span> *)(src_addr + valid_y.s5 * (<span class="keywordtype">int</span>)src_stride_y + z_coord * src_stride_z);</div><div class="line"><a name="l01165"></a><span class="lineno"> 1165</span>&#160;    in_row6.s6 = *(__global <span class="keywordtype">float</span> *)(src_addr + valid_y.s6 * (<span class="keywordtype">int</span>)src_stride_y + z_coord * src_stride_z);</div><div class="line"><a name="l01166"></a><span class="lineno"> 1166</span>&#160;    in_row6.s7 = *(__global <span class="keywordtype">float</span> *)(src_addr + valid_y.s7 * (<span class="keywordtype">int</span>)src_stride_y + z_coord * src_stride_z);</div><div class="line"><a name="l01167"></a><span class="lineno"> 1167</span>&#160;</div><div class="line"><a name="l01168"></a><span class="lineno"> 1168</span>&#160;    <span class="comment">// Row7</span></div><div class="line"><a name="l01169"></a><span class="lineno"> 1169</span>&#160;    z_coord = (z * (int)OUTPUT_TILE_H) - (int)PAD_TOP + 7;</div><div class="line"><a name="l01170"></a><span class="lineno"> 1170</span>&#160;    valid_y = select(y_coord, (int8) - 1, (int8)z_coord &lt; 0);</div><div class="line"><a name="l01171"></a><span class="lineno"> 1171</span>&#160;    valid_y = select(valid_y, (int8)SRC_DIM_1, (int8)z_coord &gt;= (<span class="keywordtype">int</span>)SRC_DIM_2);</div><div class="line"><a name="l01172"></a><span class="lineno"> 1172</span>&#160;    z_coord = <a class="code" href="namespacearm__compute_1_1utility.xhtml#a12c3c62f510452805c289e180ec78bb7">clamp</a>(z_coord, 0, (<span class="keywordtype">int</span>)SRC_DIM_2 - 1);</div><div class="line"><a name="l01173"></a><span class="lineno"> 1173</span>&#160;</div><div class="line"><a name="l01174"></a><span class="lineno"> 1174</span>&#160;    in_row7.s0 = *(__global <span class="keywordtype">float</span> *)(src_addr + valid_y.s0 * (<span class="keywordtype">int</span>)src_stride_y + z_coord * src_stride_z);</div><div class="line"><a name="l01175"></a><span class="lineno"> 1175</span>&#160;    in_row7.s1 = *(__global <span class="keywordtype">float</span> *)(src_addr + valid_y.s1 * (<span class="keywordtype">int</span>)src_stride_y + z_coord * src_stride_z);</div><div class="line"><a name="l01176"></a><span class="lineno"> 1176</span>&#160;    in_row7.s2 = *(__global <span class="keywordtype">float</span> *)(src_addr + valid_y.s2 * (<span class="keywordtype">int</span>)src_stride_y + z_coord * src_stride_z);</div><div class="line"><a name="l01177"></a><span class="lineno"> 1177</span>&#160;    in_row7.s3 = *(__global <span class="keywordtype">float</span> *)(src_addr + valid_y.s3 * (<span class="keywordtype">int</span>)src_stride_y + z_coord * src_stride_z);</div><div class="line"><a name="l01178"></a><span class="lineno"> 1178</span>&#160;    in_row7.s4 = *(__global <span class="keywordtype">float</span> *)(src_addr + valid_y.s4 * (<span class="keywordtype">int</span>)src_stride_y + z_coord * src_stride_z);</div><div class="line"><a name="l01179"></a><span class="lineno"> 1179</span>&#160;    in_row7.s5 = *(__global <span class="keywordtype">float</span> *)(src_addr + valid_y.s5 * (<span class="keywordtype">int</span>)src_stride_y + z_coord * src_stride_z);</div><div class="line"><a name="l01180"></a><span class="lineno"> 1180</span>&#160;    in_row7.s6 = *(__global <span class="keywordtype">float</span> *)(src_addr + valid_y.s6 * (<span class="keywordtype">int</span>)src_stride_y + z_coord * src_stride_z);</div><div class="line"><a name="l01181"></a><span class="lineno"> 1181</span>&#160;    in_row7.s7 = *(__global <span class="keywordtype">float</span> *)(src_addr + valid_y.s7 * (<span class="keywordtype">int</span>)src_stride_y + z_coord * src_stride_z);</div><div class="line"><a name="l01182"></a><span class="lineno"> 1182</span>&#160;</div><div class="line"><a name="l01183"></a><span class="lineno"> 1183</span>&#160;    float8 comm_fact0 = in_row2 + in_row6 - 4.25f * in_row4;</div><div class="line"><a name="l01184"></a><span class="lineno"> 1184</span>&#160;    float8 comm_fact1 = in_row1 + in_row5 - 4.25f * in_row3;</div><div class="line"><a name="l01185"></a><span class="lineno"> 1185</span>&#160;    float8 comm_fact2 = 0.25f * in_row2 - 1.25f * in_row4 + in_row6;</div><div class="line"><a name="l01186"></a><span class="lineno"> 1186</span>&#160;</div><div class="line"><a name="l01187"></a><span class="lineno"> 1187</span>&#160;    <span class="comment">// Calculate intermediate tensor and reuse common factor vectors</span></div><div class="line"><a name="l01188"></a><span class="lineno"> 1188</span>&#160;    <span class="keyword">const</span> float8 tmp0 = in_row0 - in_row6 + 5.25f * in_row4 - 5.25f * in_row2;</div><div class="line"><a name="l01189"></a><span class="lineno"> 1189</span>&#160;    <span class="keyword">const</span> float8 tmp1 = comm_fact0 + comm_fact1;</div><div class="line"><a name="l01190"></a><span class="lineno"> 1190</span>&#160;    <span class="keyword">const</span> float8 tmp2 = comm_fact0 - comm_fact1;</div><div class="line"><a name="l01191"></a><span class="lineno"> 1191</span>&#160;</div><div class="line"><a name="l01192"></a><span class="lineno"> 1192</span>&#160;    comm_fact0 = 2.5f * in_row3;</div><div class="line"><a name="l01193"></a><span class="lineno"> 1193</span>&#160;    comm_fact1 = 0.5f * in_row1 - comm_fact0 + 2.f * in_row5;</div><div class="line"><a name="l01194"></a><span class="lineno"> 1194</span>&#160;</div><div class="line"><a name="l01195"></a><span class="lineno"> 1195</span>&#160;    <span class="keyword">const</span> float8 tmp3 = comm_fact1 + comm_fact2;</div><div class="line"><a name="l01196"></a><span class="lineno"> 1196</span>&#160;    <span class="keyword">const</span> float8 tmp4 = comm_fact2 - comm_fact1;</div><div class="line"><a name="l01197"></a><span class="lineno"> 1197</span>&#160;</div><div class="line"><a name="l01198"></a><span class="lineno"> 1198</span>&#160;    comm_fact1 = 2.f * in_row1 - comm_fact0 + 0.5f * in_row5;</div><div class="line"><a name="l01199"></a><span class="lineno"> 1199</span>&#160;    comm_fact2 = 4.f * in_row2 - 5.f * in_row4 + in_row6;</div><div class="line"><a name="l01200"></a><span class="lineno"> 1200</span>&#160;</div><div class="line"><a name="l01201"></a><span class="lineno"> 1201</span>&#160;    <span class="keyword">const</span> float8 tmp5 = comm_fact1 + comm_fact2;</div><div class="line"><a name="l01202"></a><span class="lineno"> 1202</span>&#160;    <span class="keyword">const</span> float8 tmp6 = comm_fact2 - comm_fact1;</div><div class="line"><a name="l01203"></a><span class="lineno"> 1203</span>&#160;    <span class="keyword">const</span> float8 tmp7 = in_row7 - in_row1 + 5.25f * in_row3 - 5.25f * in_row5;</div><div class="line"><a name="l01204"></a><span class="lineno"> 1204</span>&#160;</div><div class="line"><a name="l01205"></a><span class="lineno"> 1205</span>&#160;    <span class="comment">// Calculate output rows (reuse comm_fact0 vector)</span></div><div class="line"><a name="l01206"></a><span class="lineno"> 1206</span>&#160;    float8 out0, out1, out2, out3, out4, out5, out6, out7;</div><div class="line"><a name="l01207"></a><span class="lineno"> 1207</span>&#160;    <a class="code" href="winograd__input__transform_8cl.xhtml#a993dcfcc7bd076d4d0f33be70e42e2b9">OUTPUT_ROW_4x4_5x5</a>(out0, tmp0, comm_fact0);</div><div class="line"><a name="l01208"></a><span class="lineno"> 1208</span>&#160;    <a class="code" href="winograd__input__transform_8cl.xhtml#a993dcfcc7bd076d4d0f33be70e42e2b9">OUTPUT_ROW_4x4_5x5</a>(out1, tmp1, comm_fact0);</div><div class="line"><a name="l01209"></a><span class="lineno"> 1209</span>&#160;    <a class="code" href="winograd__input__transform_8cl.xhtml#a993dcfcc7bd076d4d0f33be70e42e2b9">OUTPUT_ROW_4x4_5x5</a>(out2, tmp2, comm_fact0);</div><div class="line"><a name="l01210"></a><span class="lineno"> 1210</span>&#160;    <a class="code" href="winograd__input__transform_8cl.xhtml#a993dcfcc7bd076d4d0f33be70e42e2b9">OUTPUT_ROW_4x4_5x5</a>(out3, tmp3, comm_fact0);</div><div class="line"><a name="l01211"></a><span class="lineno"> 1211</span>&#160;    <a class="code" href="winograd__input__transform_8cl.xhtml#a993dcfcc7bd076d4d0f33be70e42e2b9">OUTPUT_ROW_4x4_5x5</a>(out4, tmp4, comm_fact0);</div><div class="line"><a name="l01212"></a><span class="lineno"> 1212</span>&#160;    <a class="code" href="winograd__input__transform_8cl.xhtml#a993dcfcc7bd076d4d0f33be70e42e2b9">OUTPUT_ROW_4x4_5x5</a>(out5, tmp5, comm_fact0);</div><div class="line"><a name="l01213"></a><span class="lineno"> 1213</span>&#160;    <a class="code" href="winograd__input__transform_8cl.xhtml#a993dcfcc7bd076d4d0f33be70e42e2b9">OUTPUT_ROW_4x4_5x5</a>(out6, tmp6, comm_fact0);</div><div class="line"><a name="l01214"></a><span class="lineno"> 1214</span>&#160;    <a class="code" href="winograd__input__transform_8cl.xhtml#a993dcfcc7bd076d4d0f33be70e42e2b9">OUTPUT_ROW_4x4_5x5</a>(out7, tmp7, comm_fact0);</div><div class="line"><a name="l01215"></a><span class="lineno"> 1215</span>&#160;<span class="preprocessor">#endif                                           // !defined(WINOGRAD_INPUT_TRANSFORM_HORIZONTAL) &amp;&amp; !defined(WINOGRAD_INPUT_TRANSFORM_VERTICAL)</span></div><div class="line"><a name="l01216"></a><span class="lineno"> 1216</span>&#160;</div><div class="line"><a name="l01217"></a><span class="lineno"> 1217</span>&#160;    <span class="comment">// Store values across the channels</span></div><div class="line"><a name="l01218"></a><span class="lineno"> 1218</span>&#160;    __global uchar *dst_addr = dst_ptr + dst_offset_first_element_in_bytes + x * <span class="keyword">sizeof</span>(float) + (y + z * (<span class="keywordtype">int</span>)NUM_TILES_X) * dst_stride_y;</div><div class="line"><a name="l01219"></a><span class="lineno"> 1219</span>&#160;</div><div class="line"><a name="l01220"></a><span class="lineno"> 1220</span>&#160;    *((__global <span class="keywordtype">float</span> *)(dst_addr + 0 * dst_stride_z)) = out0.s0;</div><div class="line"><a name="l01221"></a><span class="lineno"> 1221</span>&#160;    *((__global <span class="keywordtype">float</span> *)(dst_addr + 1 * dst_stride_z)) = out0.s1;</div><div class="line"><a name="l01222"></a><span class="lineno"> 1222</span>&#160;    *((__global <span class="keywordtype">float</span> *)(dst_addr + 2 * dst_stride_z)) = out0.s2;</div><div class="line"><a name="l01223"></a><span class="lineno"> 1223</span>&#160;    *((__global <span class="keywordtype">float</span> *)(dst_addr + 3 * dst_stride_z)) = out0.s3;</div><div class="line"><a name="l01224"></a><span class="lineno"> 1224</span>&#160;    *((__global <span class="keywordtype">float</span> *)(dst_addr + 4 * dst_stride_z)) = out0.s4;</div><div class="line"><a name="l01225"></a><span class="lineno"> 1225</span>&#160;    *((__global <span class="keywordtype">float</span> *)(dst_addr + 5 * dst_stride_z)) = out0.s5;</div><div class="line"><a name="l01226"></a><span class="lineno"> 1226</span>&#160;    *((__global <span class="keywordtype">float</span> *)(dst_addr + 6 * dst_stride_z)) = out0.s6;</div><div class="line"><a name="l01227"></a><span class="lineno"> 1227</span>&#160;    *((__global <span class="keywordtype">float</span> *)(dst_addr + 7 * dst_stride_z)) = out0.s7;</div><div class="line"><a name="l01228"></a><span class="lineno"> 1228</span>&#160;</div><div class="line"><a name="l01229"></a><span class="lineno"> 1229</span>&#160;<span class="preprocessor">#if !defined(WINOGRAD_INPUT_TRANSFORM_HORIZONTAL) &amp;&amp; !defined(WINOGRAD_INPUT_TRANSFORM_VERTICAL)</span></div><div class="line"><a name="l01230"></a><span class="lineno"> 1230</span>&#160;    *((__global <span class="keywordtype">float</span> *)(dst_addr + 8 * dst_stride_z))  = out1.s0;</div><div class="line"><a name="l01231"></a><span class="lineno"> 1231</span>&#160;    *((__global <span class="keywordtype">float</span> *)(dst_addr + 9 * dst_stride_z))  = out1.s1;</div><div class="line"><a name="l01232"></a><span class="lineno"> 1232</span>&#160;    *((__global <span class="keywordtype">float</span> *)(dst_addr + 10 * dst_stride_z)) = out1.s2;</div><div class="line"><a name="l01233"></a><span class="lineno"> 1233</span>&#160;    *((__global <span class="keywordtype">float</span> *)(dst_addr + 11 * dst_stride_z)) = out1.s3;</div><div class="line"><a name="l01234"></a><span class="lineno"> 1234</span>&#160;    *((__global <span class="keywordtype">float</span> *)(dst_addr + 12 * dst_stride_z)) = out1.s4;</div><div class="line"><a name="l01235"></a><span class="lineno"> 1235</span>&#160;    *((__global <span class="keywordtype">float</span> *)(dst_addr + 13 * dst_stride_z)) = out1.s5;</div><div class="line"><a name="l01236"></a><span class="lineno"> 1236</span>&#160;    *((__global <span class="keywordtype">float</span> *)(dst_addr + 14 * dst_stride_z)) = out1.s6;</div><div class="line"><a name="l01237"></a><span class="lineno"> 1237</span>&#160;    *((__global <span class="keywordtype">float</span> *)(dst_addr + 15 * dst_stride_z)) = out1.s7;</div><div class="line"><a name="l01238"></a><span class="lineno"> 1238</span>&#160;    *((__global <span class="keywordtype">float</span> *)(dst_addr + 16 * dst_stride_z)) = out2.s0;</div><div class="line"><a name="l01239"></a><span class="lineno"> 1239</span>&#160;    *((__global <span class="keywordtype">float</span> *)(dst_addr + 17 * dst_stride_z)) = out2.s1;</div><div class="line"><a name="l01240"></a><span class="lineno"> 1240</span>&#160;    *((__global <span class="keywordtype">float</span> *)(dst_addr + 18 * dst_stride_z)) = out2.s2;</div><div class="line"><a name="l01241"></a><span class="lineno"> 1241</span>&#160;    *((__global <span class="keywordtype">float</span> *)(dst_addr + 19 * dst_stride_z)) = out2.s3;</div><div class="line"><a name="l01242"></a><span class="lineno"> 1242</span>&#160;    *((__global <span class="keywordtype">float</span> *)(dst_addr + 20 * dst_stride_z)) = out2.s4;</div><div class="line"><a name="l01243"></a><span class="lineno"> 1243</span>&#160;    *((__global <span class="keywordtype">float</span> *)(dst_addr + 21 * dst_stride_z)) = out2.s5;</div><div class="line"><a name="l01244"></a><span class="lineno"> 1244</span>&#160;    *((__global <span class="keywordtype">float</span> *)(dst_addr + 22 * dst_stride_z)) = out2.s6;</div><div class="line"><a name="l01245"></a><span class="lineno"> 1245</span>&#160;    *((__global <span class="keywordtype">float</span> *)(dst_addr + 23 * dst_stride_z)) = out2.s7;</div><div class="line"><a name="l01246"></a><span class="lineno"> 1246</span>&#160;    *((__global <span class="keywordtype">float</span> *)(dst_addr + 24 * dst_stride_z)) = out3.s0;</div><div class="line"><a name="l01247"></a><span class="lineno"> 1247</span>&#160;    *((__global <span class="keywordtype">float</span> *)(dst_addr + 25 * dst_stride_z)) = out3.s1;</div><div class="line"><a name="l01248"></a><span class="lineno"> 1248</span>&#160;    *((__global <span class="keywordtype">float</span> *)(dst_addr + 26 * dst_stride_z)) = out3.s2;</div><div class="line"><a name="l01249"></a><span class="lineno"> 1249</span>&#160;    *((__global <span class="keywordtype">float</span> *)(dst_addr + 27 * dst_stride_z)) = out3.s3;</div><div class="line"><a name="l01250"></a><span class="lineno"> 1250</span>&#160;    *((__global <span class="keywordtype">float</span> *)(dst_addr + 28 * dst_stride_z)) = out3.s4;</div><div class="line"><a name="l01251"></a><span class="lineno"> 1251</span>&#160;    *((__global <span class="keywordtype">float</span> *)(dst_addr + 29 * dst_stride_z)) = out3.s5;</div><div class="line"><a name="l01252"></a><span class="lineno"> 1252</span>&#160;    *((__global <span class="keywordtype">float</span> *)(dst_addr + 30 * dst_stride_z)) = out3.s6;</div><div class="line"><a name="l01253"></a><span class="lineno"> 1253</span>&#160;    *((__global <span class="keywordtype">float</span> *)(dst_addr + 31 * dst_stride_z)) = out3.s7;</div><div class="line"><a name="l01254"></a><span class="lineno"> 1254</span>&#160;    *((__global <span class="keywordtype">float</span> *)(dst_addr + 32 * dst_stride_z)) = out4.s0;</div><div class="line"><a name="l01255"></a><span class="lineno"> 1255</span>&#160;    *((__global <span class="keywordtype">float</span> *)(dst_addr + 33 * dst_stride_z)) = out4.s1;</div><div class="line"><a name="l01256"></a><span class="lineno"> 1256</span>&#160;    *((__global <span class="keywordtype">float</span> *)(dst_addr + 34 * dst_stride_z)) = out4.s2;</div><div class="line"><a name="l01257"></a><span class="lineno"> 1257</span>&#160;    *((__global <span class="keywordtype">float</span> *)(dst_addr + 35 * dst_stride_z)) = out4.s3;</div><div class="line"><a name="l01258"></a><span class="lineno"> 1258</span>&#160;    *((__global <span class="keywordtype">float</span> *)(dst_addr + 36 * dst_stride_z)) = out4.s4;</div><div class="line"><a name="l01259"></a><span class="lineno"> 1259</span>&#160;    *((__global <span class="keywordtype">float</span> *)(dst_addr + 37 * dst_stride_z)) = out4.s5;</div><div class="line"><a name="l01260"></a><span class="lineno"> 1260</span>&#160;    *((__global <span class="keywordtype">float</span> *)(dst_addr + 38 * dst_stride_z)) = out4.s6;</div><div class="line"><a name="l01261"></a><span class="lineno"> 1261</span>&#160;    *((__global <span class="keywordtype">float</span> *)(dst_addr + 39 * dst_stride_z)) = out4.s7;</div><div class="line"><a name="l01262"></a><span class="lineno"> 1262</span>&#160;    *((__global <span class="keywordtype">float</span> *)(dst_addr + 40 * dst_stride_z)) = out5.s0;</div><div class="line"><a name="l01263"></a><span class="lineno"> 1263</span>&#160;    *((__global <span class="keywordtype">float</span> *)(dst_addr + 41 * dst_stride_z)) = out5.s1;</div><div class="line"><a name="l01264"></a><span class="lineno"> 1264</span>&#160;    *((__global <span class="keywordtype">float</span> *)(dst_addr + 42 * dst_stride_z)) = out5.s2;</div><div class="line"><a name="l01265"></a><span class="lineno"> 1265</span>&#160;    *((__global <span class="keywordtype">float</span> *)(dst_addr + 43 * dst_stride_z)) = out5.s3;</div><div class="line"><a name="l01266"></a><span class="lineno"> 1266</span>&#160;    *((__global <span class="keywordtype">float</span> *)(dst_addr + 44 * dst_stride_z)) = out5.s4;</div><div class="line"><a name="l01267"></a><span class="lineno"> 1267</span>&#160;    *((__global <span class="keywordtype">float</span> *)(dst_addr + 45 * dst_stride_z)) = out5.s5;</div><div class="line"><a name="l01268"></a><span class="lineno"> 1268</span>&#160;    *((__global <span class="keywordtype">float</span> *)(dst_addr + 46 * dst_stride_z)) = out5.s6;</div><div class="line"><a name="l01269"></a><span class="lineno"> 1269</span>&#160;    *((__global <span class="keywordtype">float</span> *)(dst_addr + 47 * dst_stride_z)) = out5.s7;</div><div class="line"><a name="l01270"></a><span class="lineno"> 1270</span>&#160;    *((__global <span class="keywordtype">float</span> *)(dst_addr + 48 * dst_stride_z)) = out6.s0;</div><div class="line"><a name="l01271"></a><span class="lineno"> 1271</span>&#160;    *((__global <span class="keywordtype">float</span> *)(dst_addr + 49 * dst_stride_z)) = out6.s1;</div><div class="line"><a name="l01272"></a><span class="lineno"> 1272</span>&#160;    *((__global <span class="keywordtype">float</span> *)(dst_addr + 50 * dst_stride_z)) = out6.s2;</div><div class="line"><a name="l01273"></a><span class="lineno"> 1273</span>&#160;    *((__global <span class="keywordtype">float</span> *)(dst_addr + 51 * dst_stride_z)) = out6.s3;</div><div class="line"><a name="l01274"></a><span class="lineno"> 1274</span>&#160;    *((__global <span class="keywordtype">float</span> *)(dst_addr + 52 * dst_stride_z)) = out6.s4;</div><div class="line"><a name="l01275"></a><span class="lineno"> 1275</span>&#160;    *((__global <span class="keywordtype">float</span> *)(dst_addr + 53 * dst_stride_z)) = out6.s5;</div><div class="line"><a name="l01276"></a><span class="lineno"> 1276</span>&#160;    *((__global <span class="keywordtype">float</span> *)(dst_addr + 54 * dst_stride_z)) = out6.s6;</div><div class="line"><a name="l01277"></a><span class="lineno"> 1277</span>&#160;    *((__global <span class="keywordtype">float</span> *)(dst_addr + 55 * dst_stride_z)) = out6.s7;</div><div class="line"><a name="l01278"></a><span class="lineno"> 1278</span>&#160;    *((__global <span class="keywordtype">float</span> *)(dst_addr + 56 * dst_stride_z)) = out7.s0;</div><div class="line"><a name="l01279"></a><span class="lineno"> 1279</span>&#160;    *((__global <span class="keywordtype">float</span> *)(dst_addr + 57 * dst_stride_z)) = out7.s1;</div><div class="line"><a name="l01280"></a><span class="lineno"> 1280</span>&#160;    *((__global <span class="keywordtype">float</span> *)(dst_addr + 58 * dst_stride_z)) = out7.s2;</div><div class="line"><a name="l01281"></a><span class="lineno"> 1281</span>&#160;    *((__global <span class="keywordtype">float</span> *)(dst_addr + 59 * dst_stride_z)) = out7.s3;</div><div class="line"><a name="l01282"></a><span class="lineno"> 1282</span>&#160;    *((__global <span class="keywordtype">float</span> *)(dst_addr + 60 * dst_stride_z)) = out7.s4;</div><div class="line"><a name="l01283"></a><span class="lineno"> 1283</span>&#160;    *((__global <span class="keywordtype">float</span> *)(dst_addr + 61 * dst_stride_z)) = out7.s5;</div><div class="line"><a name="l01284"></a><span class="lineno"> 1284</span>&#160;    *((__global <span class="keywordtype">float</span> *)(dst_addr + 62 * dst_stride_z)) = out7.s6;</div><div class="line"><a name="l01285"></a><span class="lineno"> 1285</span>&#160;    *((__global <span class="keywordtype">float</span> *)(dst_addr + 63 * dst_stride_z)) = out7.s7;</div><div class="line"><a name="l01286"></a><span class="lineno"> 1286</span>&#160;<span class="preprocessor">#endif // !defined(WINOGRAD_INPUT_TRANSFORM_HORIZONTAL) &amp;&amp; !defined(WINOGRAD_INPUT_TRANSFORM_VERTICAL)</span></div><div class="line"><a name="l01287"></a><span class="lineno"> 1287</span>&#160;}</div><div class="line"><a name="l01288"></a><span class="lineno"> 1288</span>&#160;<span class="preprocessor">#endif // defined(SRC_DIM_1) &amp;&amp; defined(SRC_DIM_2)</span></div><div class="line"><a name="l01289"></a><span class="lineno"> 1289</span>&#160;</div><div class="line"><a name="l01316"></a><span class="lineno"> 1316</span>&#160;__kernel <span class="keywordtype">void</span> winograd_input_transform_4x4_5x5_stepz1_nchw(</div><div class="line"><a name="l01317"></a><span class="lineno"> 1317</span>&#160;    <a class="code" href="helpers_8h.xhtml#a6b83038822d1ae7ab619b684ed3b7fc0">TENSOR3D_DECLARATION</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a6743f0a130e8311e6f5b1a23df102472">src</a>),</div><div class="line"><a name="l01318"></a><span class="lineno"> 1318</span>&#160;    <a class="code" href="helpers_8h.xhtml#a6b83038822d1ae7ab619b684ed3b7fc0">TENSOR3D_DECLARATION</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>))</div><div class="line"><a name="l01319"></a><span class="lineno"> 1319</span>&#160;{</div><div class="line"><a name="l01320"></a><span class="lineno"> 1320</span>&#160;    <span class="keywordtype">int</span> x = get_global_id(0);</div><div class="line"><a name="l01321"></a><span class="lineno"> 1321</span>&#160;    <span class="keywordtype">int</span> y = get_global_id(1);</div><div class="line"><a name="l01322"></a><span class="lineno"> 1322</span>&#160;    <span class="keywordtype">int</span> z = get_global_id(2);</div><div class="line"><a name="l01323"></a><span class="lineno"> 1323</span>&#160;</div><div class="line"><a name="l01324"></a><span class="lineno"> 1324</span>&#160;    <span class="comment">// Compute input address</span></div><div class="line"><a name="l01325"></a><span class="lineno"> 1325</span>&#160;    __global uchar *src_addr = src_ptr + src_offset_first_element_in_bytes + x * OUTPUT_TILE_W * <span class="keyword">sizeof</span>(float) + y * OUTPUT_TILE_H * src_stride_y + z * src_stride_z;</div><div class="line"><a name="l01326"></a><span class="lineno"> 1326</span>&#160;</div><div class="line"><a name="l01327"></a><span class="lineno"> 1327</span>&#160;    src_addr = src_addr - ((int)PAD_LEFT * <span class="keyword">sizeof</span>(<span class="keywordtype">float</span>)) - ((<span class="keywordtype">int</span>)PAD_TOP * src_stride_y);</div><div class="line"><a name="l01328"></a><span class="lineno"> 1328</span>&#160;</div><div class="line"><a name="l01329"></a><span class="lineno"> 1329</span>&#160;    <span class="comment">// Load input tile</span></div><div class="line"><a name="l01330"></a><span class="lineno"> 1330</span>&#160;<span class="preprocessor">#if defined(WINOGRAD_INPUT_TRANSFORM_HORIZONTAL)</span></div><div class="line"><a name="l01331"></a><span class="lineno"> 1331</span>&#160;    <span class="keyword">const</span> float8 in_row0 = vload8(0, (__global <span class="keywordtype">float</span> *)(src_addr));</div><div class="line"><a name="l01332"></a><span class="lineno"> 1332</span>&#160;<span class="preprocessor">#elif defined(WINOGRAD_INPUT_TRANSFORM_VERTICAL) // !defined(WINOGRAD_FILTER_TRANSFORM_HORIZONTAL)</span></div><div class="line"><a name="l01333"></a><span class="lineno"> 1333</span>&#160;    <span class="keyword">const</span> float8 in_row0 = (float8)(*((__global <span class="keywordtype">float</span> *)(src_addr + 0 * src_stride_y)),</div><div class="line"><a name="l01334"></a><span class="lineno"> 1334</span>&#160;                                    *((__global <span class="keywordtype">float</span> *)(src_addr + 1 * src_stride_y)),</div><div class="line"><a name="l01335"></a><span class="lineno"> 1335</span>&#160;                                    *((__global <span class="keywordtype">float</span> *)(src_addr + 2 * src_stride_y)),</div><div class="line"><a name="l01336"></a><span class="lineno"> 1336</span>&#160;                                    *((__global <span class="keywordtype">float</span> *)(src_addr + 3 * src_stride_y)),</div><div class="line"><a name="l01337"></a><span class="lineno"> 1337</span>&#160;                                    *((__global <span class="keywordtype">float</span> *)(src_addr + 4 * src_stride_y)),</div><div class="line"><a name="l01338"></a><span class="lineno"> 1338</span>&#160;                                    *((__global <span class="keywordtype">float</span> *)(src_addr + 5 * src_stride_y)),</div><div class="line"><a name="l01339"></a><span class="lineno"> 1339</span>&#160;                                    *((__global <span class="keywordtype">float</span> *)(src_addr + 6 * src_stride_y)),</div><div class="line"><a name="l01340"></a><span class="lineno"> 1340</span>&#160;                                    *((__global <span class="keywordtype">float</span> *)(src_addr + 7 * src_stride_y)));</div><div class="line"><a name="l01341"></a><span class="lineno"> 1341</span>&#160;<span class="preprocessor">#else                                            // !defined(WINOGRAD_INPUT_TRANSFORM_HORIZONTAL) &amp;&amp; !defined(WINOGRAD_INPUT_TRANSFORM_VERTICAL)</span></div><div class="line"><a name="l01342"></a><span class="lineno"> 1342</span>&#160;    <span class="keyword">const</span> float8 in_row0 = vload8(0, (__global <span class="keywordtype">float</span> *)(src_addr + 0 * src_stride_y));</div><div class="line"><a name="l01343"></a><span class="lineno"> 1343</span>&#160;    <span class="keyword">const</span> float8 in_row1 = vload8(0, (__global <span class="keywordtype">float</span> *)(src_addr + 1 * src_stride_y));</div><div class="line"><a name="l01344"></a><span class="lineno"> 1344</span>&#160;    <span class="keyword">const</span> float8 in_row2 = vload8(0, (__global <span class="keywordtype">float</span> *)(src_addr + 2 * src_stride_y));</div><div class="line"><a name="l01345"></a><span class="lineno"> 1345</span>&#160;    <span class="keyword">const</span> float8 in_row3 = vload8(0, (__global <span class="keywordtype">float</span> *)(src_addr + 3 * src_stride_y));</div><div class="line"><a name="l01346"></a><span class="lineno"> 1346</span>&#160;    <span class="keyword">const</span> float8 in_row4 = vload8(0, (__global <span class="keywordtype">float</span> *)(src_addr + 4 * src_stride_y));</div><div class="line"><a name="l01347"></a><span class="lineno"> 1347</span>&#160;    <span class="keyword">const</span> float8 in_row5 = vload8(0, (__global <span class="keywordtype">float</span> *)(src_addr + 5 * src_stride_y));</div><div class="line"><a name="l01348"></a><span class="lineno"> 1348</span>&#160;    <span class="keyword">const</span> float8 in_row6 = vload8(0, (__global <span class="keywordtype">float</span> *)(src_addr + 6 * src_stride_y));</div><div class="line"><a name="l01349"></a><span class="lineno"> 1349</span>&#160;    <span class="keyword">const</span> float8 in_row7 = vload8(0, (__global <span class="keywordtype">float</span> *)(src_addr + 7 * src_stride_y));</div><div class="line"><a name="l01350"></a><span class="lineno"> 1350</span>&#160;<span class="preprocessor">#endif                                           // !defined(WINOGRAD_INPUT_TRANSFORM_HORIZONTAL) &amp;&amp; !defined(WINOGRAD_INPUT_TRANSFORM_VERTICAL)</span></div><div class="line"><a name="l01351"></a><span class="lineno"> 1351</span>&#160;</div><div class="line"><a name="l01352"></a><span class="lineno"> 1352</span>&#160;    <span class="comment">// Calculate common factors for intermediate tensor</span></div><div class="line"><a name="l01353"></a><span class="lineno"> 1353</span>&#160;    float8 tmp0       = in_row0;</div><div class="line"><a name="l01354"></a><span class="lineno"> 1354</span>&#160;    float8 comm_fact0 = 0.0f;</div><div class="line"><a name="l01355"></a><span class="lineno"> 1355</span>&#160;</div><div class="line"><a name="l01356"></a><span class="lineno"> 1356</span>&#160;<span class="preprocessor">#if !defined(WINOGRAD_INPUT_TRANSFORM_HORIZONTAL) &amp;&amp; !defined(WINOGRAD_INPUT_TRANSFORM_VERTICAL)</span></div><div class="line"><a name="l01357"></a><span class="lineno"> 1357</span>&#160;    comm_fact0 += in_row2 + in_row6 - 4.25f * in_row4;</div><div class="line"><a name="l01358"></a><span class="lineno"> 1358</span>&#160;    tmp0 += -in_row6 + 5.25f * in_row4 - 5.25f * in_row2;</div><div class="line"><a name="l01359"></a><span class="lineno"> 1359</span>&#160;</div><div class="line"><a name="l01360"></a><span class="lineno"> 1360</span>&#160;    float8 comm_fact1 = in_row1 + in_row5 - 4.25f * in_row3;</div><div class="line"><a name="l01361"></a><span class="lineno"> 1361</span>&#160;    float8 comm_fact2 = 0.25f * in_row2 - 1.25f * in_row4 + in_row6;</div><div class="line"><a name="l01362"></a><span class="lineno"> 1362</span>&#160;</div><div class="line"><a name="l01363"></a><span class="lineno"> 1363</span>&#160;    <span class="keyword">const</span> float8 tmp1 = comm_fact0 + comm_fact1;</div><div class="line"><a name="l01364"></a><span class="lineno"> 1364</span>&#160;    <span class="keyword">const</span> float8 tmp2 = comm_fact0 - comm_fact1;</div><div class="line"><a name="l01365"></a><span class="lineno"> 1365</span>&#160;</div><div class="line"><a name="l01366"></a><span class="lineno"> 1366</span>&#160;    comm_fact0 = 2.5f * in_row3;</div><div class="line"><a name="l01367"></a><span class="lineno"> 1367</span>&#160;    comm_fact1 = 0.5f * in_row1 - comm_fact0 + 2.f * in_row5;</div><div class="line"><a name="l01368"></a><span class="lineno"> 1368</span>&#160;</div><div class="line"><a name="l01369"></a><span class="lineno"> 1369</span>&#160;    <span class="keyword">const</span> float8 tmp3 = comm_fact1 + comm_fact2;</div><div class="line"><a name="l01370"></a><span class="lineno"> 1370</span>&#160;    <span class="keyword">const</span> float8 tmp4 = comm_fact2 - comm_fact1;</div><div class="line"><a name="l01371"></a><span class="lineno"> 1371</span>&#160;</div><div class="line"><a name="l01372"></a><span class="lineno"> 1372</span>&#160;    comm_fact1 = 2.f * in_row1 - comm_fact0 + 0.5f * in_row5;</div><div class="line"><a name="l01373"></a><span class="lineno"> 1373</span>&#160;    comm_fact2 = 4.f * in_row2 - 5.f * in_row4 + in_row6;</div><div class="line"><a name="l01374"></a><span class="lineno"> 1374</span>&#160;</div><div class="line"><a name="l01375"></a><span class="lineno"> 1375</span>&#160;    <span class="keyword">const</span> float8 tmp5 = comm_fact1 + comm_fact2;</div><div class="line"><a name="l01376"></a><span class="lineno"> 1376</span>&#160;    <span class="keyword">const</span> float8 tmp6 = comm_fact2 - comm_fact1;</div><div class="line"><a name="l01377"></a><span class="lineno"> 1377</span>&#160;    <span class="keyword">const</span> float8 tmp7 = in_row7 - in_row1 + 5.25f * in_row3 - 5.25f * in_row5;</div><div class="line"><a name="l01378"></a><span class="lineno"> 1378</span>&#160;<span class="preprocessor">#endif // !defined(WINOGRAD_INPUT_TRANSFORM_HORIZONTAL) &amp;&amp; !defined(WINOGRAD_INPUT_TRANSFORM_VERTICAL)</span></div><div class="line"><a name="l01379"></a><span class="lineno"> 1379</span>&#160;</div><div class="line"><a name="l01380"></a><span class="lineno"> 1380</span>&#160;    <span class="comment">// Calculate output rows (reuse comm_fact0 vector)</span></div><div class="line"><a name="l01381"></a><span class="lineno"> 1381</span>&#160;    float8 out0;</div><div class="line"><a name="l01382"></a><span class="lineno"> 1382</span>&#160;</div><div class="line"><a name="l01383"></a><span class="lineno"> 1383</span>&#160;    <a class="code" href="winograd__input__transform_8cl.xhtml#a993dcfcc7bd076d4d0f33be70e42e2b9">OUTPUT_ROW_4x4_5x5</a>(out0, tmp0, comm_fact0);</div><div class="line"><a name="l01384"></a><span class="lineno"> 1384</span>&#160;</div><div class="line"><a name="l01385"></a><span class="lineno"> 1385</span>&#160;<span class="preprocessor">#if !defined(WINOGRAD_INPUT_TRANSFORM_HORIZONTAL) &amp;&amp; !defined(WINOGRAD_INPUT_TRANSFORM_VERTICAL)</span></div><div class="line"><a name="l01386"></a><span class="lineno"> 1386</span>&#160;    float8 out1, out2, out3, out4, out5, out6, out7;</div><div class="line"><a name="l01387"></a><span class="lineno"> 1387</span>&#160;</div><div class="line"><a name="l01388"></a><span class="lineno"> 1388</span>&#160;    <a class="code" href="winograd__input__transform_8cl.xhtml#a993dcfcc7bd076d4d0f33be70e42e2b9">OUTPUT_ROW_4x4_5x5</a>(out1, tmp1, comm_fact0);</div><div class="line"><a name="l01389"></a><span class="lineno"> 1389</span>&#160;    <a class="code" href="winograd__input__transform_8cl.xhtml#a993dcfcc7bd076d4d0f33be70e42e2b9">OUTPUT_ROW_4x4_5x5</a>(out2, tmp2, comm_fact0);</div><div class="line"><a name="l01390"></a><span class="lineno"> 1390</span>&#160;    <a class="code" href="winograd__input__transform_8cl.xhtml#a993dcfcc7bd076d4d0f33be70e42e2b9">OUTPUT_ROW_4x4_5x5</a>(out3, tmp3, comm_fact0);</div><div class="line"><a name="l01391"></a><span class="lineno"> 1391</span>&#160;    <a class="code" href="winograd__input__transform_8cl.xhtml#a993dcfcc7bd076d4d0f33be70e42e2b9">OUTPUT_ROW_4x4_5x5</a>(out4, tmp4, comm_fact0);</div><div class="line"><a name="l01392"></a><span class="lineno"> 1392</span>&#160;    <a class="code" href="winograd__input__transform_8cl.xhtml#a993dcfcc7bd076d4d0f33be70e42e2b9">OUTPUT_ROW_4x4_5x5</a>(out5, tmp5, comm_fact0);</div><div class="line"><a name="l01393"></a><span class="lineno"> 1393</span>&#160;    <a class="code" href="winograd__input__transform_8cl.xhtml#a993dcfcc7bd076d4d0f33be70e42e2b9">OUTPUT_ROW_4x4_5x5</a>(out6, tmp6, comm_fact0);</div><div class="line"><a name="l01394"></a><span class="lineno"> 1394</span>&#160;    <a class="code" href="winograd__input__transform_8cl.xhtml#a993dcfcc7bd076d4d0f33be70e42e2b9">OUTPUT_ROW_4x4_5x5</a>(out7, tmp7, comm_fact0);</div><div class="line"><a name="l01395"></a><span class="lineno"> 1395</span>&#160;<span class="preprocessor">#endif // !defined(WINOGRAD_INPUT_TRANSFORM_HORIZONTAL) &amp;&amp; !defined(WINOGRAD_INPUT_TRANSFORM_VERTICAL)</span></div><div class="line"><a name="l01396"></a><span class="lineno"> 1396</span>&#160;</div><div class="line"><a name="l01397"></a><span class="lineno"> 1397</span>&#160;    <span class="comment">// Store values across the channels</span></div><div class="line"><a name="l01398"></a><span class="lineno"> 1398</span>&#160;    __global uchar *dst_addr = dst_ptr + dst_offset_first_element_in_bytes + z * <span class="keyword">sizeof</span>(float) + (x + y * (<span class="keywordtype">int</span>)NUM_TILES_X) * dst_stride_y;</div><div class="line"><a name="l01399"></a><span class="lineno"> 1399</span>&#160;</div><div class="line"><a name="l01400"></a><span class="lineno"> 1400</span>&#160;    *((__global <span class="keywordtype">float</span> *)(dst_addr + 0 * dst_stride_z)) = out0.s0;</div><div class="line"><a name="l01401"></a><span class="lineno"> 1401</span>&#160;    *((__global <span class="keywordtype">float</span> *)(dst_addr + 1 * dst_stride_z)) = out0.s1;</div><div class="line"><a name="l01402"></a><span class="lineno"> 1402</span>&#160;    *((__global <span class="keywordtype">float</span> *)(dst_addr + 2 * dst_stride_z)) = out0.s2;</div><div class="line"><a name="l01403"></a><span class="lineno"> 1403</span>&#160;    *((__global <span class="keywordtype">float</span> *)(dst_addr + 3 * dst_stride_z)) = out0.s3;</div><div class="line"><a name="l01404"></a><span class="lineno"> 1404</span>&#160;    *((__global <span class="keywordtype">float</span> *)(dst_addr + 4 * dst_stride_z)) = out0.s4;</div><div class="line"><a name="l01405"></a><span class="lineno"> 1405</span>&#160;    *((__global <span class="keywordtype">float</span> *)(dst_addr + 5 * dst_stride_z)) = out0.s5;</div><div class="line"><a name="l01406"></a><span class="lineno"> 1406</span>&#160;    *((__global <span class="keywordtype">float</span> *)(dst_addr + 6 * dst_stride_z)) = out0.s6;</div><div class="line"><a name="l01407"></a><span class="lineno"> 1407</span>&#160;    *((__global <span class="keywordtype">float</span> *)(dst_addr + 7 * dst_stride_z)) = out0.s7;</div><div class="line"><a name="l01408"></a><span class="lineno"> 1408</span>&#160;</div><div class="line"><a name="l01409"></a><span class="lineno"> 1409</span>&#160;<span class="preprocessor">#if !defined(WINOGRAD_INPUT_TRANSFORM_HORIZONTAL) &amp;&amp; !defined(WINOGRAD_INPUT_TRANSFORM_VERTICAL)</span></div><div class="line"><a name="l01410"></a><span class="lineno"> 1410</span>&#160;    *((__global <span class="keywordtype">float</span> *)(dst_addr + 8 * dst_stride_z))  = out1.s0;</div><div class="line"><a name="l01411"></a><span class="lineno"> 1411</span>&#160;    *((__global <span class="keywordtype">float</span> *)(dst_addr + 9 * dst_stride_z))  = out1.s1;</div><div class="line"><a name="l01412"></a><span class="lineno"> 1412</span>&#160;    *((__global <span class="keywordtype">float</span> *)(dst_addr + 10 * dst_stride_z)) = out1.s2;</div><div class="line"><a name="l01413"></a><span class="lineno"> 1413</span>&#160;    *((__global <span class="keywordtype">float</span> *)(dst_addr + 11 * dst_stride_z)) = out1.s3;</div><div class="line"><a name="l01414"></a><span class="lineno"> 1414</span>&#160;    *((__global <span class="keywordtype">float</span> *)(dst_addr + 12 * dst_stride_z)) = out1.s4;</div><div class="line"><a name="l01415"></a><span class="lineno"> 1415</span>&#160;    *((__global <span class="keywordtype">float</span> *)(dst_addr + 13 * dst_stride_z)) = out1.s5;</div><div class="line"><a name="l01416"></a><span class="lineno"> 1416</span>&#160;    *((__global <span class="keywordtype">float</span> *)(dst_addr + 14 * dst_stride_z)) = out1.s6;</div><div class="line"><a name="l01417"></a><span class="lineno"> 1417</span>&#160;    *((__global <span class="keywordtype">float</span> *)(dst_addr + 15 * dst_stride_z)) = out1.s7;</div><div class="line"><a name="l01418"></a><span class="lineno"> 1418</span>&#160;    *((__global <span class="keywordtype">float</span> *)(dst_addr + 16 * dst_stride_z)) = out2.s0;</div><div class="line"><a name="l01419"></a><span class="lineno"> 1419</span>&#160;    *((__global <span class="keywordtype">float</span> *)(dst_addr + 17 * dst_stride_z)) = out2.s1;</div><div class="line"><a name="l01420"></a><span class="lineno"> 1420</span>&#160;    *((__global <span class="keywordtype">float</span> *)(dst_addr + 18 * dst_stride_z)) = out2.s2;</div><div class="line"><a name="l01421"></a><span class="lineno"> 1421</span>&#160;    *((__global <span class="keywordtype">float</span> *)(dst_addr + 19 * dst_stride_z)) = out2.s3;</div><div class="line"><a name="l01422"></a><span class="lineno"> 1422</span>&#160;    *((__global <span class="keywordtype">float</span> *)(dst_addr + 20 * dst_stride_z)) = out2.s4;</div><div class="line"><a name="l01423"></a><span class="lineno"> 1423</span>&#160;    *((__global <span class="keywordtype">float</span> *)(dst_addr + 21 * dst_stride_z)) = out2.s5;</div><div class="line"><a name="l01424"></a><span class="lineno"> 1424</span>&#160;    *((__global <span class="keywordtype">float</span> *)(dst_addr + 22 * dst_stride_z)) = out2.s6;</div><div class="line"><a name="l01425"></a><span class="lineno"> 1425</span>&#160;    *((__global <span class="keywordtype">float</span> *)(dst_addr + 23 * dst_stride_z)) = out2.s7;</div><div class="line"><a name="l01426"></a><span class="lineno"> 1426</span>&#160;    *((__global <span class="keywordtype">float</span> *)(dst_addr + 24 * dst_stride_z)) = out3.s0;</div><div class="line"><a name="l01427"></a><span class="lineno"> 1427</span>&#160;    *((__global <span class="keywordtype">float</span> *)(dst_addr + 25 * dst_stride_z)) = out3.s1;</div><div class="line"><a name="l01428"></a><span class="lineno"> 1428</span>&#160;    *((__global <span class="keywordtype">float</span> *)(dst_addr + 26 * dst_stride_z)) = out3.s2;</div><div class="line"><a name="l01429"></a><span class="lineno"> 1429</span>&#160;    *((__global <span class="keywordtype">float</span> *)(dst_addr + 27 * dst_stride_z)) = out3.s3;</div><div class="line"><a name="l01430"></a><span class="lineno"> 1430</span>&#160;    *((__global <span class="keywordtype">float</span> *)(dst_addr + 28 * dst_stride_z)) = out3.s4;</div><div class="line"><a name="l01431"></a><span class="lineno"> 1431</span>&#160;    *((__global <span class="keywordtype">float</span> *)(dst_addr + 29 * dst_stride_z)) = out3.s5;</div><div class="line"><a name="l01432"></a><span class="lineno"> 1432</span>&#160;    *((__global <span class="keywordtype">float</span> *)(dst_addr + 30 * dst_stride_z)) = out3.s6;</div><div class="line"><a name="l01433"></a><span class="lineno"> 1433</span>&#160;    *((__global <span class="keywordtype">float</span> *)(dst_addr + 31 * dst_stride_z)) = out3.s7;</div><div class="line"><a name="l01434"></a><span class="lineno"> 1434</span>&#160;    *((__global <span class="keywordtype">float</span> *)(dst_addr + 32 * dst_stride_z)) = out4.s0;</div><div class="line"><a name="l01435"></a><span class="lineno"> 1435</span>&#160;    *((__global <span class="keywordtype">float</span> *)(dst_addr + 33 * dst_stride_z)) = out4.s1;</div><div class="line"><a name="l01436"></a><span class="lineno"> 1436</span>&#160;    *((__global <span class="keywordtype">float</span> *)(dst_addr + 34 * dst_stride_z)) = out4.s2;</div><div class="line"><a name="l01437"></a><span class="lineno"> 1437</span>&#160;    *((__global <span class="keywordtype">float</span> *)(dst_addr + 35 * dst_stride_z)) = out4.s3;</div><div class="line"><a name="l01438"></a><span class="lineno"> 1438</span>&#160;    *((__global <span class="keywordtype">float</span> *)(dst_addr + 36 * dst_stride_z)) = out4.s4;</div><div class="line"><a name="l01439"></a><span class="lineno"> 1439</span>&#160;    *((__global <span class="keywordtype">float</span> *)(dst_addr + 37 * dst_stride_z)) = out4.s5;</div><div class="line"><a name="l01440"></a><span class="lineno"> 1440</span>&#160;    *((__global <span class="keywordtype">float</span> *)(dst_addr + 38 * dst_stride_z)) = out4.s6;</div><div class="line"><a name="l01441"></a><span class="lineno"> 1441</span>&#160;    *((__global <span class="keywordtype">float</span> *)(dst_addr + 39 * dst_stride_z)) = out4.s7;</div><div class="line"><a name="l01442"></a><span class="lineno"> 1442</span>&#160;    *((__global <span class="keywordtype">float</span> *)(dst_addr + 40 * dst_stride_z)) = out5.s0;</div><div class="line"><a name="l01443"></a><span class="lineno"> 1443</span>&#160;    *((__global <span class="keywordtype">float</span> *)(dst_addr + 41 * dst_stride_z)) = out5.s1;</div><div class="line"><a name="l01444"></a><span class="lineno"> 1444</span>&#160;    *((__global <span class="keywordtype">float</span> *)(dst_addr + 42 * dst_stride_z)) = out5.s2;</div><div class="line"><a name="l01445"></a><span class="lineno"> 1445</span>&#160;    *((__global <span class="keywordtype">float</span> *)(dst_addr + 43 * dst_stride_z)) = out5.s3;</div><div class="line"><a name="l01446"></a><span class="lineno"> 1446</span>&#160;    *((__global <span class="keywordtype">float</span> *)(dst_addr + 44 * dst_stride_z)) = out5.s4;</div><div class="line"><a name="l01447"></a><span class="lineno"> 1447</span>&#160;    *((__global <span class="keywordtype">float</span> *)(dst_addr + 45 * dst_stride_z)) = out5.s5;</div><div class="line"><a name="l01448"></a><span class="lineno"> 1448</span>&#160;    *((__global <span class="keywordtype">float</span> *)(dst_addr + 46 * dst_stride_z)) = out5.s6;</div><div class="line"><a name="l01449"></a><span class="lineno"> 1449</span>&#160;    *((__global <span class="keywordtype">float</span> *)(dst_addr + 47 * dst_stride_z)) = out5.s7;</div><div class="line"><a name="l01450"></a><span class="lineno"> 1450</span>&#160;    *((__global <span class="keywordtype">float</span> *)(dst_addr + 48 * dst_stride_z)) = out6.s0;</div><div class="line"><a name="l01451"></a><span class="lineno"> 1451</span>&#160;    *((__global <span class="keywordtype">float</span> *)(dst_addr + 49 * dst_stride_z)) = out6.s1;</div><div class="line"><a name="l01452"></a><span class="lineno"> 1452</span>&#160;    *((__global <span class="keywordtype">float</span> *)(dst_addr + 50 * dst_stride_z)) = out6.s2;</div><div class="line"><a name="l01453"></a><span class="lineno"> 1453</span>&#160;    *((__global <span class="keywordtype">float</span> *)(dst_addr + 51 * dst_stride_z)) = out6.s3;</div><div class="line"><a name="l01454"></a><span class="lineno"> 1454</span>&#160;    *((__global <span class="keywordtype">float</span> *)(dst_addr + 52 * dst_stride_z)) = out6.s4;</div><div class="line"><a name="l01455"></a><span class="lineno"> 1455</span>&#160;    *((__global <span class="keywordtype">float</span> *)(dst_addr + 53 * dst_stride_z)) = out6.s5;</div><div class="line"><a name="l01456"></a><span class="lineno"> 1456</span>&#160;    *((__global <span class="keywordtype">float</span> *)(dst_addr + 54 * dst_stride_z)) = out6.s6;</div><div class="line"><a name="l01457"></a><span class="lineno"> 1457</span>&#160;    *((__global <span class="keywordtype">float</span> *)(dst_addr + 55 * dst_stride_z)) = out6.s7;</div><div class="line"><a name="l01458"></a><span class="lineno"> 1458</span>&#160;    *((__global <span class="keywordtype">float</span> *)(dst_addr + 56 * dst_stride_z)) = out7.s0;</div><div class="line"><a name="l01459"></a><span class="lineno"> 1459</span>&#160;    *((__global <span class="keywordtype">float</span> *)(dst_addr + 57 * dst_stride_z)) = out7.s1;</div><div class="line"><a name="l01460"></a><span class="lineno"> 1460</span>&#160;    *((__global <span class="keywordtype">float</span> *)(dst_addr + 58 * dst_stride_z)) = out7.s2;</div><div class="line"><a name="l01461"></a><span class="lineno"> 1461</span>&#160;    *((__global <span class="keywordtype">float</span> *)(dst_addr + 59 * dst_stride_z)) = out7.s3;</div><div class="line"><a name="l01462"></a><span class="lineno"> 1462</span>&#160;    *((__global <span class="keywordtype">float</span> *)(dst_addr + 60 * dst_stride_z)) = out7.s4;</div><div class="line"><a name="l01463"></a><span class="lineno"> 1463</span>&#160;    *((__global <span class="keywordtype">float</span> *)(dst_addr + 61 * dst_stride_z)) = out7.s5;</div><div class="line"><a name="l01464"></a><span class="lineno"> 1464</span>&#160;    *((__global <span class="keywordtype">float</span> *)(dst_addr + 62 * dst_stride_z)) = out7.s6;</div><div class="line"><a name="l01465"></a><span class="lineno"> 1465</span>&#160;    *((__global <span class="keywordtype">float</span> *)(dst_addr + 63 * dst_stride_z)) = out7.s7;</div><div class="line"><a name="l01466"></a><span class="lineno"> 1466</span>&#160;<span class="preprocessor">#endif // !defined(WINOGRAD_INPUT_TRANSFORM_HORIZONTAL) &amp;&amp; !defined(WINOGRAD_INPUT_TRANSFORM_VERTICAL)</span></div><div class="line"><a name="l01467"></a><span class="lineno"> 1467</span>&#160;}</div><div class="line"><a name="l01468"></a><span class="lineno"> 1468</span>&#160;</div><div class="line"><a name="l01469"></a><span class="lineno"> 1469</span>&#160;<span class="preprocessor">#if defined(WINOGRAD_INPUT_TRANSFORM_HORIZONTAL)</span></div><div class="line"><a name="l01470"></a><span class="lineno"> 1470</span>&#160;</div><div class="line"><a name="l01495"></a><span class="lineno"> 1495</span>&#160;__kernel <span class="keywordtype">void</span> winograd_input_transform_2x1_3x1_stepz1_nchw(</div><div class="line"><a name="l01496"></a><span class="lineno"> 1496</span>&#160;    <a class="code" href="helpers_8h.xhtml#a6b83038822d1ae7ab619b684ed3b7fc0">TENSOR3D_DECLARATION</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a6743f0a130e8311e6f5b1a23df102472">src</a>),</div><div class="line"><a name="l01497"></a><span class="lineno"> 1497</span>&#160;    <a class="code" href="helpers_8h.xhtml#a6b83038822d1ae7ab619b684ed3b7fc0">TENSOR3D_DECLARATION</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>))</div><div class="line"><a name="l01498"></a><span class="lineno"> 1498</span>&#160;{</div><div class="line"><a name="l01499"></a><span class="lineno"> 1499</span>&#160;    winograd_input_transform_2x2_3x3_stepz1_nchw(src_ptr,</div><div class="line"><a name="l01500"></a><span class="lineno"> 1500</span>&#160;                                                 src_stride_x,</div><div class="line"><a name="l01501"></a><span class="lineno"> 1501</span>&#160;                                                 src_step_x,</div><div class="line"><a name="l01502"></a><span class="lineno"> 1502</span>&#160;                                                 src_stride_y,</div><div class="line"><a name="l01503"></a><span class="lineno"> 1503</span>&#160;                                                 src_step_y,</div><div class="line"><a name="l01504"></a><span class="lineno"> 1504</span>&#160;                                                 src_stride_z,</div><div class="line"><a name="l01505"></a><span class="lineno"> 1505</span>&#160;                                                 src_step_z,</div><div class="line"><a name="l01506"></a><span class="lineno"> 1506</span>&#160;                                                 src_offset_first_element_in_bytes,</div><div class="line"><a name="l01507"></a><span class="lineno"> 1507</span>&#160;                                                 dst_ptr,</div><div class="line"><a name="l01508"></a><span class="lineno"> 1508</span>&#160;                                                 dst_stride_x,</div><div class="line"><a name="l01509"></a><span class="lineno"> 1509</span>&#160;                                                 dst_step_x,</div><div class="line"><a name="l01510"></a><span class="lineno"> 1510</span>&#160;                                                 dst_stride_y,</div><div class="line"><a name="l01511"></a><span class="lineno"> 1511</span>&#160;                                                 dst_step_y,</div><div class="line"><a name="l01512"></a><span class="lineno"> 1512</span>&#160;                                                 dst_stride_z,</div><div class="line"><a name="l01513"></a><span class="lineno"> 1513</span>&#160;                                                 dst_step_z,</div><div class="line"><a name="l01514"></a><span class="lineno"> 1514</span>&#160;                                                 dst_offset_first_element_in_bytes);</div><div class="line"><a name="l01515"></a><span class="lineno"> 1515</span>&#160;}</div><div class="line"><a name="l01516"></a><span class="lineno"> 1516</span>&#160;</div><div class="line"><a name="l01542"></a><span class="lineno"> 1542</span>&#160;__kernel <span class="keywordtype">void</span> winograd_input_transform_2x1_3x1_stepz2_nchw(</div><div class="line"><a name="l01543"></a><span class="lineno"> 1543</span>&#160;    <a class="code" href="helpers_8h.xhtml#a6b83038822d1ae7ab619b684ed3b7fc0">TENSOR3D_DECLARATION</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a6743f0a130e8311e6f5b1a23df102472">src</a>),</div><div class="line"><a name="l01544"></a><span class="lineno"> 1544</span>&#160;    <a class="code" href="helpers_8h.xhtml#a6b83038822d1ae7ab619b684ed3b7fc0">TENSOR3D_DECLARATION</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>))</div><div class="line"><a name="l01545"></a><span class="lineno"> 1545</span>&#160;{</div><div class="line"><a name="l01546"></a><span class="lineno"> 1546</span>&#160;    winograd_input_transform_2x2_3x3_stepz2_nchw(src_ptr,</div><div class="line"><a name="l01547"></a><span class="lineno"> 1547</span>&#160;                                                 src_stride_x,</div><div class="line"><a name="l01548"></a><span class="lineno"> 1548</span>&#160;                                                 src_step_x,</div><div class="line"><a name="l01549"></a><span class="lineno"> 1549</span>&#160;                                                 src_stride_y,</div><div class="line"><a name="l01550"></a><span class="lineno"> 1550</span>&#160;                                                 src_step_y,</div><div class="line"><a name="l01551"></a><span class="lineno"> 1551</span>&#160;                                                 src_stride_z,</div><div class="line"><a name="l01552"></a><span class="lineno"> 1552</span>&#160;                                                 src_step_z,</div><div class="line"><a name="l01553"></a><span class="lineno"> 1553</span>&#160;                                                 src_offset_first_element_in_bytes,</div><div class="line"><a name="l01554"></a><span class="lineno"> 1554</span>&#160;                                                 dst_ptr,</div><div class="line"><a name="l01555"></a><span class="lineno"> 1555</span>&#160;                                                 dst_stride_x,</div><div class="line"><a name="l01556"></a><span class="lineno"> 1556</span>&#160;                                                 dst_step_x,</div><div class="line"><a name="l01557"></a><span class="lineno"> 1557</span>&#160;                                                 dst_stride_y,</div><div class="line"><a name="l01558"></a><span class="lineno"> 1558</span>&#160;                                                 dst_step_y,</div><div class="line"><a name="l01559"></a><span class="lineno"> 1559</span>&#160;                                                 dst_stride_z,</div><div class="line"><a name="l01560"></a><span class="lineno"> 1560</span>&#160;                                                 dst_step_z,</div><div class="line"><a name="l01561"></a><span class="lineno"> 1561</span>&#160;                                                 dst_offset_first_element_in_bytes);</div><div class="line"><a name="l01562"></a><span class="lineno"> 1562</span>&#160;}</div><div class="line"><a name="l01563"></a><span class="lineno"> 1563</span>&#160;</div><div class="line"><a name="l01589"></a><span class="lineno"> 1589</span>&#160;__kernel <span class="keywordtype">void</span> winograd_input_transform_4x1_3x1_stepz1_nchw(</div><div class="line"><a name="l01590"></a><span class="lineno"> 1590</span>&#160;    <a class="code" href="helpers_8h.xhtml#a6b83038822d1ae7ab619b684ed3b7fc0">TENSOR3D_DECLARATION</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a6743f0a130e8311e6f5b1a23df102472">src</a>),</div><div class="line"><a name="l01591"></a><span class="lineno"> 1591</span>&#160;    <a class="code" href="helpers_8h.xhtml#a6b83038822d1ae7ab619b684ed3b7fc0">TENSOR3D_DECLARATION</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>))</div><div class="line"><a name="l01592"></a><span class="lineno"> 1592</span>&#160;{</div><div class="line"><a name="l01593"></a><span class="lineno"> 1593</span>&#160;    winograd_input_transform_4x4_3x3_stepz1_nchw(src_ptr,</div><div class="line"><a name="l01594"></a><span class="lineno"> 1594</span>&#160;                                                 src_stride_x,</div><div class="line"><a name="l01595"></a><span class="lineno"> 1595</span>&#160;                                                 src_step_x,</div><div class="line"><a name="l01596"></a><span class="lineno"> 1596</span>&#160;                                                 src_stride_y,</div><div class="line"><a name="l01597"></a><span class="lineno"> 1597</span>&#160;                                                 src_step_y,</div><div class="line"><a name="l01598"></a><span class="lineno"> 1598</span>&#160;                                                 src_stride_z,</div><div class="line"><a name="l01599"></a><span class="lineno"> 1599</span>&#160;                                                 src_step_z,</div><div class="line"><a name="l01600"></a><span class="lineno"> 1600</span>&#160;                                                 src_offset_first_element_in_bytes,</div><div class="line"><a name="l01601"></a><span class="lineno"> 1601</span>&#160;                                                 dst_ptr,</div><div class="line"><a name="l01602"></a><span class="lineno"> 1602</span>&#160;                                                 dst_stride_x,</div><div class="line"><a name="l01603"></a><span class="lineno"> 1603</span>&#160;                                                 dst_step_x,</div><div class="line"><a name="l01604"></a><span class="lineno"> 1604</span>&#160;                                                 dst_stride_y,</div><div class="line"><a name="l01605"></a><span class="lineno"> 1605</span>&#160;                                                 dst_step_y,</div><div class="line"><a name="l01606"></a><span class="lineno"> 1606</span>&#160;                                                 dst_stride_z,</div><div class="line"><a name="l01607"></a><span class="lineno"> 1607</span>&#160;                                                 dst_step_z,</div><div class="line"><a name="l01608"></a><span class="lineno"> 1608</span>&#160;                                                 dst_offset_first_element_in_bytes);</div><div class="line"><a name="l01609"></a><span class="lineno"> 1609</span>&#160;}</div><div class="line"><a name="l01610"></a><span class="lineno"> 1610</span>&#160;</div><div class="line"><a name="l01636"></a><span class="lineno"> 1636</span>&#160;__kernel <span class="keywordtype">void</span> winograd_input_transform_4x1_5x1_stepz1_nchw(</div><div class="line"><a name="l01637"></a><span class="lineno"> 1637</span>&#160;    <a class="code" href="helpers_8h.xhtml#a6b83038822d1ae7ab619b684ed3b7fc0">TENSOR3D_DECLARATION</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a6743f0a130e8311e6f5b1a23df102472">src</a>),</div><div class="line"><a name="l01638"></a><span class="lineno"> 1638</span>&#160;    <a class="code" href="helpers_8h.xhtml#a6b83038822d1ae7ab619b684ed3b7fc0">TENSOR3D_DECLARATION</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>))</div><div class="line"><a name="l01639"></a><span class="lineno"> 1639</span>&#160;{</div><div class="line"><a name="l01640"></a><span class="lineno"> 1640</span>&#160;    winograd_input_transform_4x4_5x5_stepz1_nchw(src_ptr,</div><div class="line"><a name="l01641"></a><span class="lineno"> 1641</span>&#160;                                                 src_stride_x,</div><div class="line"><a name="l01642"></a><span class="lineno"> 1642</span>&#160;                                                 src_step_x,</div><div class="line"><a name="l01643"></a><span class="lineno"> 1643</span>&#160;                                                 src_stride_y,</div><div class="line"><a name="l01644"></a><span class="lineno"> 1644</span>&#160;                                                 src_step_y,</div><div class="line"><a name="l01645"></a><span class="lineno"> 1645</span>&#160;                                                 src_stride_z,</div><div class="line"><a name="l01646"></a><span class="lineno"> 1646</span>&#160;                                                 src_step_z,</div><div class="line"><a name="l01647"></a><span class="lineno"> 1647</span>&#160;                                                 src_offset_first_element_in_bytes,</div><div class="line"><a name="l01648"></a><span class="lineno"> 1648</span>&#160;                                                 dst_ptr,</div><div class="line"><a name="l01649"></a><span class="lineno"> 1649</span>&#160;                                                 dst_stride_x,</div><div class="line"><a name="l01650"></a><span class="lineno"> 1650</span>&#160;                                                 dst_step_x,</div><div class="line"><a name="l01651"></a><span class="lineno"> 1651</span>&#160;                                                 dst_stride_y,</div><div class="line"><a name="l01652"></a><span class="lineno"> 1652</span>&#160;                                                 dst_step_y,</div><div class="line"><a name="l01653"></a><span class="lineno"> 1653</span>&#160;                                                 dst_stride_z,</div><div class="line"><a name="l01654"></a><span class="lineno"> 1654</span>&#160;                                                 dst_step_z,</div><div class="line"><a name="l01655"></a><span class="lineno"> 1655</span>&#160;                                                 dst_offset_first_element_in_bytes);</div><div class="line"><a name="l01656"></a><span class="lineno"> 1656</span>&#160;}</div><div class="line"><a name="l01657"></a><span class="lineno"> 1657</span>&#160;</div><div class="line"><a name="l01658"></a><span class="lineno"> 1658</span>&#160;<span class="preprocessor">#if defined(SRC_DIM_1) &amp;&amp; defined(SRC_DIM_2)</span></div><div class="line"><a name="l01659"></a><span class="lineno"> 1659</span>&#160;</div><div class="line"><a name="l01686"></a><span class="lineno"> 1686</span>&#160;__kernel <span class="keywordtype">void</span> winograd_input_transform_4x1_3x1_stepz1_nhwc(</div><div class="line"><a name="l01687"></a><span class="lineno"> 1687</span>&#160;    <a class="code" href="helpers_8h.xhtml#a6b83038822d1ae7ab619b684ed3b7fc0">TENSOR3D_DECLARATION</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a6743f0a130e8311e6f5b1a23df102472">src</a>),</div><div class="line"><a name="l01688"></a><span class="lineno"> 1688</span>&#160;    <a class="code" href="helpers_8h.xhtml#a6b83038822d1ae7ab619b684ed3b7fc0">TENSOR3D_DECLARATION</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>))</div><div class="line"><a name="l01689"></a><span class="lineno"> 1689</span>&#160;{</div><div class="line"><a name="l01690"></a><span class="lineno"> 1690</span>&#160;    winograd_input_transform_4x4_3x3_stepz1_nhwc(src_ptr,</div><div class="line"><a name="l01691"></a><span class="lineno"> 1691</span>&#160;                                                 src_stride_x,</div><div class="line"><a name="l01692"></a><span class="lineno"> 1692</span>&#160;                                                 src_step_x,</div><div class="line"><a name="l01693"></a><span class="lineno"> 1693</span>&#160;                                                 src_stride_y,</div><div class="line"><a name="l01694"></a><span class="lineno"> 1694</span>&#160;                                                 src_step_y,</div><div class="line"><a name="l01695"></a><span class="lineno"> 1695</span>&#160;                                                 src_stride_z,</div><div class="line"><a name="l01696"></a><span class="lineno"> 1696</span>&#160;                                                 src_step_z,</div><div class="line"><a name="l01697"></a><span class="lineno"> 1697</span>&#160;                                                 src_offset_first_element_in_bytes,</div><div class="line"><a name="l01698"></a><span class="lineno"> 1698</span>&#160;                                                 dst_ptr,</div><div class="line"><a name="l01699"></a><span class="lineno"> 1699</span>&#160;                                                 dst_stride_x,</div><div class="line"><a name="l01700"></a><span class="lineno"> 1700</span>&#160;                                                 dst_step_x,</div><div class="line"><a name="l01701"></a><span class="lineno"> 1701</span>&#160;                                                 dst_stride_y,</div><div class="line"><a name="l01702"></a><span class="lineno"> 1702</span>&#160;                                                 dst_step_y,</div><div class="line"><a name="l01703"></a><span class="lineno"> 1703</span>&#160;                                                 dst_stride_z,</div><div class="line"><a name="l01704"></a><span class="lineno"> 1704</span>&#160;                                                 dst_step_z,</div><div class="line"><a name="l01705"></a><span class="lineno"> 1705</span>&#160;                                                 dst_offset_first_element_in_bytes);</div><div class="line"><a name="l01706"></a><span class="lineno"> 1706</span>&#160;}</div><div class="line"><a name="l01707"></a><span class="lineno"> 1707</span>&#160;</div><div class="line"><a name="l01735"></a><span class="lineno"> 1735</span>&#160;__kernel <span class="keywordtype">void</span> winograd_input_transform_4x1_5x1_stepz1_nhwc(</div><div class="line"><a name="l01736"></a><span class="lineno"> 1736</span>&#160;    <a class="code" href="helpers_8h.xhtml#a6b83038822d1ae7ab619b684ed3b7fc0">TENSOR3D_DECLARATION</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a6743f0a130e8311e6f5b1a23df102472">src</a>),</div><div class="line"><a name="l01737"></a><span class="lineno"> 1737</span>&#160;    <a class="code" href="helpers_8h.xhtml#a6b83038822d1ae7ab619b684ed3b7fc0">TENSOR3D_DECLARATION</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>))</div><div class="line"><a name="l01738"></a><span class="lineno"> 1738</span>&#160;{</div><div class="line"><a name="l01739"></a><span class="lineno"> 1739</span>&#160;    winograd_input_transform_4x4_5x5_stepz1_nhwc(src_ptr,</div><div class="line"><a name="l01740"></a><span class="lineno"> 1740</span>&#160;                                                 src_stride_x,</div><div class="line"><a name="l01741"></a><span class="lineno"> 1741</span>&#160;                                                 src_step_x,</div><div class="line"><a name="l01742"></a><span class="lineno"> 1742</span>&#160;                                                 src_stride_y,</div><div class="line"><a name="l01743"></a><span class="lineno"> 1743</span>&#160;                                                 src_step_y,</div><div class="line"><a name="l01744"></a><span class="lineno"> 1744</span>&#160;                                                 src_stride_z,</div><div class="line"><a name="l01745"></a><span class="lineno"> 1745</span>&#160;                                                 src_step_z,</div><div class="line"><a name="l01746"></a><span class="lineno"> 1746</span>&#160;                                                 src_offset_first_element_in_bytes,</div><div class="line"><a name="l01747"></a><span class="lineno"> 1747</span>&#160;                                                 dst_ptr,</div><div class="line"><a name="l01748"></a><span class="lineno"> 1748</span>&#160;                                                 dst_stride_x,</div><div class="line"><a name="l01749"></a><span class="lineno"> 1749</span>&#160;                                                 dst_step_x,</div><div class="line"><a name="l01750"></a><span class="lineno"> 1750</span>&#160;                                                 dst_stride_y,</div><div class="line"><a name="l01751"></a><span class="lineno"> 1751</span>&#160;                                                 dst_step_y,</div><div class="line"><a name="l01752"></a><span class="lineno"> 1752</span>&#160;                                                 dst_stride_z,</div><div class="line"><a name="l01753"></a><span class="lineno"> 1753</span>&#160;                                                 dst_step_z,</div><div class="line"><a name="l01754"></a><span class="lineno"> 1754</span>&#160;                                                 dst_offset_first_element_in_bytes);</div><div class="line"><a name="l01755"></a><span class="lineno"> 1755</span>&#160;}</div><div class="line"><a name="l01756"></a><span class="lineno"> 1756</span>&#160;<span class="preprocessor">#endif // defined(SRC_DIM_1) &amp;&amp; defined(SRC_DIM_2)</span></div><div class="line"><a name="l01757"></a><span class="lineno"> 1757</span>&#160;<span class="preprocessor">#endif // defined(WINOGRAD_INPUT_TRANSFORM_HORIZONTAL)</span></div><div class="line"><a name="l01758"></a><span class="lineno"> 1758</span>&#160;</div><div class="line"><a name="l01759"></a><span class="lineno"> 1759</span>&#160;<span class="preprocessor">#if defined(WINOGRAD_INPUT_TRANSFORM_VERTICAL)</span></div><div class="line"><a name="l01760"></a><span class="lineno"> 1760</span>&#160;</div><div class="line"><a name="l01785"></a><span class="lineno"> 1785</span>&#160;__kernel <span class="keywordtype">void</span> winograd_input_transform_1x2_1x3_stepz1_nchw(</div><div class="line"><a name="l01786"></a><span class="lineno"> 1786</span>&#160;    <a class="code" href="helpers_8h.xhtml#a6b83038822d1ae7ab619b684ed3b7fc0">TENSOR3D_DECLARATION</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a6743f0a130e8311e6f5b1a23df102472">src</a>),</div><div class="line"><a name="l01787"></a><span class="lineno"> 1787</span>&#160;    <a class="code" href="helpers_8h.xhtml#a6b83038822d1ae7ab619b684ed3b7fc0">TENSOR3D_DECLARATION</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>))</div><div class="line"><a name="l01788"></a><span class="lineno"> 1788</span>&#160;{</div><div class="line"><a name="l01789"></a><span class="lineno"> 1789</span>&#160;    winograd_input_transform_2x2_3x3_stepz1_nchw(src_ptr,</div><div class="line"><a name="l01790"></a><span class="lineno"> 1790</span>&#160;                                                 src_stride_x,</div><div class="line"><a name="l01791"></a><span class="lineno"> 1791</span>&#160;                                                 src_step_x,</div><div class="line"><a name="l01792"></a><span class="lineno"> 1792</span>&#160;                                                 src_stride_y,</div><div class="line"><a name="l01793"></a><span class="lineno"> 1793</span>&#160;                                                 src_step_y,</div><div class="line"><a name="l01794"></a><span class="lineno"> 1794</span>&#160;                                                 src_stride_z,</div><div class="line"><a name="l01795"></a><span class="lineno"> 1795</span>&#160;                                                 src_step_z,</div><div class="line"><a name="l01796"></a><span class="lineno"> 1796</span>&#160;                                                 src_offset_first_element_in_bytes,</div><div class="line"><a name="l01797"></a><span class="lineno"> 1797</span>&#160;                                                 dst_ptr,</div><div class="line"><a name="l01798"></a><span class="lineno"> 1798</span>&#160;                                                 dst_stride_x,</div><div class="line"><a name="l01799"></a><span class="lineno"> 1799</span>&#160;                                                 dst_step_x,</div><div class="line"><a name="l01800"></a><span class="lineno"> 1800</span>&#160;                                                 dst_stride_y,</div><div class="line"><a name="l01801"></a><span class="lineno"> 1801</span>&#160;                                                 dst_step_y,</div><div class="line"><a name="l01802"></a><span class="lineno"> 1802</span>&#160;                                                 dst_stride_z,</div><div class="line"><a name="l01803"></a><span class="lineno"> 1803</span>&#160;                                                 dst_step_z,</div><div class="line"><a name="l01804"></a><span class="lineno"> 1804</span>&#160;                                                 dst_offset_first_element_in_bytes);</div><div class="line"><a name="l01805"></a><span class="lineno"> 1805</span>&#160;}</div><div class="line"><a name="l01806"></a><span class="lineno"> 1806</span>&#160;</div><div class="line"><a name="l01832"></a><span class="lineno"> 1832</span>&#160;__kernel <span class="keywordtype">void</span> winograd_input_transform_1x2_1x3_stepz2_nchw(</div><div class="line"><a name="l01833"></a><span class="lineno"> 1833</span>&#160;    <a class="code" href="helpers_8h.xhtml#a6b83038822d1ae7ab619b684ed3b7fc0">TENSOR3D_DECLARATION</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a6743f0a130e8311e6f5b1a23df102472">src</a>),</div><div class="line"><a name="l01834"></a><span class="lineno"> 1834</span>&#160;    <a class="code" href="helpers_8h.xhtml#a6b83038822d1ae7ab619b684ed3b7fc0">TENSOR3D_DECLARATION</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>))</div><div class="line"><a name="l01835"></a><span class="lineno"> 1835</span>&#160;{</div><div class="line"><a name="l01836"></a><span class="lineno"> 1836</span>&#160;    winograd_input_transform_2x2_3x3_stepz2_nchw(src_ptr,</div><div class="line"><a name="l01837"></a><span class="lineno"> 1837</span>&#160;                                                 src_stride_x,</div><div class="line"><a name="l01838"></a><span class="lineno"> 1838</span>&#160;                                                 src_step_x,</div><div class="line"><a name="l01839"></a><span class="lineno"> 1839</span>&#160;                                                 src_stride_y,</div><div class="line"><a name="l01840"></a><span class="lineno"> 1840</span>&#160;                                                 src_step_y,</div><div class="line"><a name="l01841"></a><span class="lineno"> 1841</span>&#160;                                                 src_stride_z,</div><div class="line"><a name="l01842"></a><span class="lineno"> 1842</span>&#160;                                                 src_step_z,</div><div class="line"><a name="l01843"></a><span class="lineno"> 1843</span>&#160;                                                 src_offset_first_element_in_bytes,</div><div class="line"><a name="l01844"></a><span class="lineno"> 1844</span>&#160;                                                 dst_ptr,</div><div class="line"><a name="l01845"></a><span class="lineno"> 1845</span>&#160;                                                 dst_stride_x,</div><div class="line"><a name="l01846"></a><span class="lineno"> 1846</span>&#160;                                                 dst_step_x,</div><div class="line"><a name="l01847"></a><span class="lineno"> 1847</span>&#160;                                                 dst_stride_y,</div><div class="line"><a name="l01848"></a><span class="lineno"> 1848</span>&#160;                                                 dst_step_y,</div><div class="line"><a name="l01849"></a><span class="lineno"> 1849</span>&#160;                                                 dst_stride_z,</div><div class="line"><a name="l01850"></a><span class="lineno"> 1850</span>&#160;                                                 dst_step_z,</div><div class="line"><a name="l01851"></a><span class="lineno"> 1851</span>&#160;                                                 dst_offset_first_element_in_bytes);</div><div class="line"><a name="l01852"></a><span class="lineno"> 1852</span>&#160;}</div><div class="line"><a name="l01853"></a><span class="lineno"> 1853</span>&#160;</div><div class="line"><a name="l01879"></a><span class="lineno"> 1879</span>&#160;__kernel <span class="keywordtype">void</span> winograd_input_transform_1x4_1x3_stepz1_nchw(</div><div class="line"><a name="l01880"></a><span class="lineno"> 1880</span>&#160;    <a class="code" href="helpers_8h.xhtml#a6b83038822d1ae7ab619b684ed3b7fc0">TENSOR3D_DECLARATION</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a6743f0a130e8311e6f5b1a23df102472">src</a>),</div><div class="line"><a name="l01881"></a><span class="lineno"> 1881</span>&#160;    <a class="code" href="helpers_8h.xhtml#a6b83038822d1ae7ab619b684ed3b7fc0">TENSOR3D_DECLARATION</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>))</div><div class="line"><a name="l01882"></a><span class="lineno"> 1882</span>&#160;{</div><div class="line"><a name="l01883"></a><span class="lineno"> 1883</span>&#160;    winograd_input_transform_4x4_3x3_stepz1_nchw(src_ptr,</div><div class="line"><a name="l01884"></a><span class="lineno"> 1884</span>&#160;                                                 src_stride_x,</div><div class="line"><a name="l01885"></a><span class="lineno"> 1885</span>&#160;                                                 src_step_x,</div><div class="line"><a name="l01886"></a><span class="lineno"> 1886</span>&#160;                                                 src_stride_y,</div><div class="line"><a name="l01887"></a><span class="lineno"> 1887</span>&#160;                                                 src_step_y,</div><div class="line"><a name="l01888"></a><span class="lineno"> 1888</span>&#160;                                                 src_stride_z,</div><div class="line"><a name="l01889"></a><span class="lineno"> 1889</span>&#160;                                                 src_step_z,</div><div class="line"><a name="l01890"></a><span class="lineno"> 1890</span>&#160;                                                 src_offset_first_element_in_bytes,</div><div class="line"><a name="l01891"></a><span class="lineno"> 1891</span>&#160;                                                 dst_ptr,</div><div class="line"><a name="l01892"></a><span class="lineno"> 1892</span>&#160;                                                 dst_stride_x,</div><div class="line"><a name="l01893"></a><span class="lineno"> 1893</span>&#160;                                                 dst_step_x,</div><div class="line"><a name="l01894"></a><span class="lineno"> 1894</span>&#160;                                                 dst_stride_y,</div><div class="line"><a name="l01895"></a><span class="lineno"> 1895</span>&#160;                                                 dst_step_y,</div><div class="line"><a name="l01896"></a><span class="lineno"> 1896</span>&#160;                                                 dst_stride_z,</div><div class="line"><a name="l01897"></a><span class="lineno"> 1897</span>&#160;                                                 dst_step_z,</div><div class="line"><a name="l01898"></a><span class="lineno"> 1898</span>&#160;                                                 dst_offset_first_element_in_bytes);</div><div class="line"><a name="l01899"></a><span class="lineno"> 1899</span>&#160;}</div><div class="line"><a name="l01900"></a><span class="lineno"> 1900</span>&#160;</div><div class="line"><a name="l01926"></a><span class="lineno"> 1926</span>&#160;__kernel <span class="keywordtype">void</span> winograd_input_transform_1x4_1x5_stepz1_nchw(</div><div class="line"><a name="l01927"></a><span class="lineno"> 1927</span>&#160;    <a class="code" href="helpers_8h.xhtml#a6b83038822d1ae7ab619b684ed3b7fc0">TENSOR3D_DECLARATION</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a6743f0a130e8311e6f5b1a23df102472">src</a>),</div><div class="line"><a name="l01928"></a><span class="lineno"> 1928</span>&#160;    <a class="code" href="helpers_8h.xhtml#a6b83038822d1ae7ab619b684ed3b7fc0">TENSOR3D_DECLARATION</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>))</div><div class="line"><a name="l01929"></a><span class="lineno"> 1929</span>&#160;{</div><div class="line"><a name="l01930"></a><span class="lineno"> 1930</span>&#160;    winograd_input_transform_4x4_5x5_stepz1_nchw(src_ptr,</div><div class="line"><a name="l01931"></a><span class="lineno"> 1931</span>&#160;                                                 src_stride_x,</div><div class="line"><a name="l01932"></a><span class="lineno"> 1932</span>&#160;                                                 src_step_x,</div><div class="line"><a name="l01933"></a><span class="lineno"> 1933</span>&#160;                                                 src_stride_y,</div><div class="line"><a name="l01934"></a><span class="lineno"> 1934</span>&#160;                                                 src_step_y,</div><div class="line"><a name="l01935"></a><span class="lineno"> 1935</span>&#160;                                                 src_stride_z,</div><div class="line"><a name="l01936"></a><span class="lineno"> 1936</span>&#160;                                                 src_step_z,</div><div class="line"><a name="l01937"></a><span class="lineno"> 1937</span>&#160;                                                 src_offset_first_element_in_bytes,</div><div class="line"><a name="l01938"></a><span class="lineno"> 1938</span>&#160;                                                 dst_ptr,</div><div class="line"><a name="l01939"></a><span class="lineno"> 1939</span>&#160;                                                 dst_stride_x,</div><div class="line"><a name="l01940"></a><span class="lineno"> 1940</span>&#160;                                                 dst_step_x,</div><div class="line"><a name="l01941"></a><span class="lineno"> 1941</span>&#160;                                                 dst_stride_y,</div><div class="line"><a name="l01942"></a><span class="lineno"> 1942</span>&#160;                                                 dst_step_y,</div><div class="line"><a name="l01943"></a><span class="lineno"> 1943</span>&#160;                                                 dst_stride_z,</div><div class="line"><a name="l01944"></a><span class="lineno"> 1944</span>&#160;                                                 dst_step_z,</div><div class="line"><a name="l01945"></a><span class="lineno"> 1945</span>&#160;                                                 dst_offset_first_element_in_bytes);</div><div class="line"><a name="l01946"></a><span class="lineno"> 1946</span>&#160;}</div><div class="line"><a name="l01947"></a><span class="lineno"> 1947</span>&#160;</div><div class="line"><a name="l01948"></a><span class="lineno"> 1948</span>&#160;<span class="preprocessor">#if defined(SRC_DIM_1) &amp;&amp; defined(SRC_DIM_2)</span></div><div class="line"><a name="l01949"></a><span class="lineno"> 1949</span>&#160;</div><div class="line"><a name="l01976"></a><span class="lineno"> 1976</span>&#160;__kernel <span class="keywordtype">void</span> winograd_input_transform_1x4_1x3_stepz1_nhwc(</div><div class="line"><a name="l01977"></a><span class="lineno"> 1977</span>&#160;    <a class="code" href="helpers_8h.xhtml#a6b83038822d1ae7ab619b684ed3b7fc0">TENSOR3D_DECLARATION</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a6743f0a130e8311e6f5b1a23df102472">src</a>),</div><div class="line"><a name="l01978"></a><span class="lineno"> 1978</span>&#160;    <a class="code" href="helpers_8h.xhtml#a6b83038822d1ae7ab619b684ed3b7fc0">TENSOR3D_DECLARATION</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>))</div><div class="line"><a name="l01979"></a><span class="lineno"> 1979</span>&#160;{</div><div class="line"><a name="l01980"></a><span class="lineno"> 1980</span>&#160;    winograd_input_transform_4x4_3x3_stepz1_nhwc(src_ptr,</div><div class="line"><a name="l01981"></a><span class="lineno"> 1981</span>&#160;                                                 src_stride_x,</div><div class="line"><a name="l01982"></a><span class="lineno"> 1982</span>&#160;                                                 src_step_x,</div><div class="line"><a name="l01983"></a><span class="lineno"> 1983</span>&#160;                                                 src_stride_y,</div><div class="line"><a name="l01984"></a><span class="lineno"> 1984</span>&#160;                                                 src_step_y,</div><div class="line"><a name="l01985"></a><span class="lineno"> 1985</span>&#160;                                                 src_stride_z,</div><div class="line"><a name="l01986"></a><span class="lineno"> 1986</span>&#160;                                                 src_step_z,</div><div class="line"><a name="l01987"></a><span class="lineno"> 1987</span>&#160;                                                 src_offset_first_element_in_bytes,</div><div class="line"><a name="l01988"></a><span class="lineno"> 1988</span>&#160;                                                 dst_ptr,</div><div class="line"><a name="l01989"></a><span class="lineno"> 1989</span>&#160;                                                 dst_stride_x,</div><div class="line"><a name="l01990"></a><span class="lineno"> 1990</span>&#160;                                                 dst_step_x,</div><div class="line"><a name="l01991"></a><span class="lineno"> 1991</span>&#160;                                                 dst_stride_y,</div><div class="line"><a name="l01992"></a><span class="lineno"> 1992</span>&#160;                                                 dst_step_y,</div><div class="line"><a name="l01993"></a><span class="lineno"> 1993</span>&#160;                                                 dst_stride_z,</div><div class="line"><a name="l01994"></a><span class="lineno"> 1994</span>&#160;                                                 dst_step_z,</div><div class="line"><a name="l01995"></a><span class="lineno"> 1995</span>&#160;                                                 dst_offset_first_element_in_bytes);</div><div class="line"><a name="l01996"></a><span class="lineno"> 1996</span>&#160;}</div><div class="line"><a name="l01997"></a><span class="lineno"> 1997</span>&#160;</div><div class="line"><a name="l02025"></a><span class="lineno"> 2025</span>&#160;__kernel <span class="keywordtype">void</span> winograd_input_transform_1x4_1x5_stepz1_nhwc(</div><div class="line"><a name="l02026"></a><span class="lineno"> 2026</span>&#160;    <a class="code" href="helpers_8h.xhtml#a6b83038822d1ae7ab619b684ed3b7fc0">TENSOR3D_DECLARATION</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#a6743f0a130e8311e6f5b1a23df102472">src</a>),</div><div class="line"><a name="l02027"></a><span class="lineno"> 2027</span>&#160;    <a class="code" href="helpers_8h.xhtml#a6b83038822d1ae7ab619b684ed3b7fc0">TENSOR3D_DECLARATION</a>(<a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">dst</a>))</div><div class="line"><a name="l02028"></a><span class="lineno"> 2028</span>&#160;{</div><div class="line"><a name="l02029"></a><span class="lineno"> 2029</span>&#160;    winograd_input_transform_4x4_5x5_stepz1_nhwc(src_ptr,</div><div class="line"><a name="l02030"></a><span class="lineno"> 2030</span>&#160;                                                 src_stride_x,</div><div class="line"><a name="l02031"></a><span class="lineno"> 2031</span>&#160;                                                 src_step_x,</div><div class="line"><a name="l02032"></a><span class="lineno"> 2032</span>&#160;                                                 src_stride_y,</div><div class="line"><a name="l02033"></a><span class="lineno"> 2033</span>&#160;                                                 src_step_y,</div><div class="line"><a name="l02034"></a><span class="lineno"> 2034</span>&#160;                                                 src_stride_z,</div><div class="line"><a name="l02035"></a><span class="lineno"> 2035</span>&#160;                                                 src_step_z,</div><div class="line"><a name="l02036"></a><span class="lineno"> 2036</span>&#160;                                                 src_offset_first_element_in_bytes,</div><div class="line"><a name="l02037"></a><span class="lineno"> 2037</span>&#160;                                                 dst_ptr,</div><div class="line"><a name="l02038"></a><span class="lineno"> 2038</span>&#160;                                                 dst_stride_x,</div><div class="line"><a name="l02039"></a><span class="lineno"> 2039</span>&#160;                                                 dst_step_x,</div><div class="line"><a name="l02040"></a><span class="lineno"> 2040</span>&#160;                                                 dst_stride_y,</div><div class="line"><a name="l02041"></a><span class="lineno"> 2041</span>&#160;                                                 dst_step_y,</div><div class="line"><a name="l02042"></a><span class="lineno"> 2042</span>&#160;                                                 dst_stride_z,</div><div class="line"><a name="l02043"></a><span class="lineno"> 2043</span>&#160;                                                 dst_step_z,</div><div class="line"><a name="l02044"></a><span class="lineno"> 2044</span>&#160;                                                 dst_offset_first_element_in_bytes);</div><div class="line"><a name="l02045"></a><span class="lineno"> 2045</span>&#160;}</div><div class="line"><a name="l02046"></a><span class="lineno"> 2046</span>&#160;<span class="preprocessor">#endif // defined(SRC_DIM_1) &amp;&amp; defined(SRC_DIM_2)</span></div><div class="line"><a name="l02047"></a><span class="lineno"> 2047</span>&#160;<span class="preprocessor">#endif // defined(WINOGRAD_INPUT_TRANSFORM_VERTICAL)</span></div><div class="line"><a name="l02048"></a><span class="lineno"> 2048</span>&#160;<span class="preprocessor">#endif // defined(NUM_TILES_X) &amp;&amp; defined(PAD_LEFT) &amp;&amp; defined(PAD_TOP) &amp;&amp; defined(OUTPUT_TILE_W) &amp;&amp; defined(OUTPUT_TILE_H)</span></div><div class="ttc" id="namespacearm__compute_1_1utility_xhtml_a12c3c62f510452805c289e180ec78bb7"><div class="ttname"><a href="namespacearm__compute_1_1utility.xhtml#a12c3c62f510452805c289e180ec78bb7">arm_compute::utility::clamp</a></div><div class="ttdeci">T clamp(const T &amp;n, const T &amp;lower, const T &amp;upper)</div><div class="ttdoc">Performs clamping among a lower and upper value. </div><div class="ttdef"><b>Definition:</b> <a href="_utility_8h_source.xhtml#l00084">Utility.h:84</a></div></div>
<div class="ttc" id="helpers_8h_xhtml"><div class="ttname"><a href="helpers_8h.xhtml">helpers.h</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_adbf67dcee294e673cf796f1ed8aeb6a4"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#adbf67dcee294e673cf796f1ed8aeb6a4">arm_compute::test::validation::dst</a></div><div class="ttdeci">CLTensor dst</div><div class="ttdef"><b>Definition:</b> <a href="_c_l_2_arithmetic_division_8cpp_source.xhtml#l00100">ArithmeticDivision.cpp:100</a></div></div>
<div class="ttc" id="helpers_8h_xhtml_a6b83038822d1ae7ab619b684ed3b7fc0"><div class="ttname"><a href="helpers_8h.xhtml#a6b83038822d1ae7ab619b684ed3b7fc0">TENSOR3D_DECLARATION</a></div><div class="ttdeci">#define TENSOR3D_DECLARATION(name)</div><div class="ttdef"><b>Definition:</b> <a href="helpers_8h_source.xhtml#l00084">helpers.h:84</a></div></div>
<div class="ttc" id="winograd__input__transform_8cl_xhtml_a993dcfcc7bd076d4d0f33be70e42e2b9"><div class="ttname"><a href="winograd__input__transform_8cl.xhtml#a993dcfcc7bd076d4d0f33be70e42e2b9">OUTPUT_ROW_4x4_5x5</a></div><div class="ttdeci">#define OUTPUT_ROW_4x4_5x5(out, tmp, comm_fact)</div><div class="ttdef"><b>Definition:</b> <a href="winograd__input__transform_8cl_source.xhtml#l00026">winograd_input_transform.cl:26</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_a6743f0a130e8311e6f5b1a23df102472"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#a6743f0a130e8311e6f5b1a23df102472">arm_compute::test::validation::src</a></div><div class="ttdeci">convolution configure &amp; src</div><div class="ttdef"><b>Definition:</b> <a href="validation_2_c_l_2_convolution_8cpp_source.xhtml#l00147">Convolution.cpp:147</a></div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_aebb8dcc11953d78e620bbef0b9e2183.xhtml">core</a></li><li class="navelem"><a class="el" href="dir_8c278f79c760e5c5fbd911f9870614c1.xhtml">CL</a></li><li class="navelem"><a class="el" href="dir_25885286e9dad4fa105b7b25a8031bbf.xhtml">cl_kernels</a></li><li class="navelem"><a class="el" href="winograd__input__transform_8cl.xhtml">winograd_input_transform.cl</a></li>
    <li class="footer">Generated on Wed Aug 29 2018 15:31:29 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.11 </li>
  </ul>
</div>
</body>
</html>
