<!-- HTML header for doxygen 1.8.9.1-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.11"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: BranchLayer Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
  $(window).load(resizeHeight);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { init_search(); });
</script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">Compute Library
   &#160;<span id="projectnumber">18.08</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.11 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li class="current"><a href="annotated.xhtml"><span>Data&#160;Structures</span></a></li>
      <li><a href="files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.xhtml"><span>Data&#160;Structures</span></a></li>
      <li><a href="classes.xhtml"><span>Data&#160;Structure&#160;Index</span></a></li>
      <li><a href="inherits.xhtml"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="functions.xhtml"><span>Data&#160;Fields</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('classarm__compute_1_1graph_1_1frontend_1_1_branch_layer.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a>  </div>
  <div class="headertitle">
<div class="title">BranchLayer Class Reference<span class="mlabels"><span class="mlabel">final</span></span></div>  </div>
</div><!--header-->
<div class="contents">

<p>Branch Layer.  
 <a href="classarm__compute_1_1graph_1_1frontend_1_1_branch_layer.xhtml#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="_layers_8h_source.xhtml">Layers.h</a>&gt;</code></p>
<div class="dynheader">
Collaboration diagram for BranchLayer:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="classarm__compute_1_1graph_1_1frontend_1_1_branch_layer__coll__graph.svg" width="114" height="112"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
<center><span class="legend">[<a target="top" href="graph_legend.xhtml">legend</a>]</span></center></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:ac800c8cfff2622dd1084922d2420cf8e"><td class="memTemplParams" colspan="2">template&lt;typename... Ts&gt; </td></tr>
<tr class="memitem:ac800c8cfff2622dd1084922d2420cf8e"><td class="memTemplItemLeft" align="right" valign="top">&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1graph_1_1frontend_1_1_branch_layer.xhtml#ac800c8cfff2622dd1084922d2420cf8e">BranchLayer</a> (<a class="el" href="namespacearm__compute_1_1graph_1_1frontend.xhtml#a001290b9a1953d3fb723b261667ff38e">BranchMergeMethod</a> merge_method, <a class="el" href="classarm__compute_1_1graph_1_1frontend_1_1_sub_stream.xhtml">SubStream</a> &amp;&amp;sub_stream1, <a class="el" href="classarm__compute_1_1graph_1_1frontend_1_1_sub_stream.xhtml">SubStream</a> &amp;&amp;sub_stream2, Ts &amp;&amp;...rest_sub_streams)</td></tr>
<tr class="memdesc:ac800c8cfff2622dd1084922d2420cf8e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Construct a branch layer.  <a href="#ac800c8cfff2622dd1084922d2420cf8e">More...</a><br /></td></tr>
<tr class="separator:ac800c8cfff2622dd1084922d2420cf8e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa412c659eb4b4fecfa3203331286d5d3"><td class="memTemplParams" colspan="2">template&lt;typename... Ts&gt; </td></tr>
<tr class="memitem:aa412c659eb4b4fecfa3203331286d5d3"><td class="memTemplItemLeft" align="right" valign="top">&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1graph_1_1frontend_1_1_branch_layer.xhtml#aa412c659eb4b4fecfa3203331286d5d3">BranchLayer</a> (<a class="el" href="classarm__compute_1_1graph_1_1frontend_1_1_sub_stream.xhtml">SubStream</a> &amp;&amp;sub_stream)</td></tr>
<tr class="memdesc:aa412c659eb4b4fecfa3203331286d5d3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Construct a branch layer.  <a href="#aa412c659eb4b4fecfa3203331286d5d3">More...</a><br /></td></tr>
<tr class="separator:aa412c659eb4b4fecfa3203331286d5d3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a225fb162b43cbef27d5a1dbd7a51c60d"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespacearm__compute_1_1graph.xhtml#a56952a8591a9d8481450ae707ae355e7">NodeID</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1graph_1_1frontend_1_1_branch_layer.xhtml#a225fb162b43cbef27d5a1dbd7a51c60d">create_layer</a> (<a class="el" href="classarm__compute_1_1graph_1_1frontend_1_1_i_stream.xhtml">IStream</a> &amp;s) override</td></tr>
<tr class="memdesc:a225fb162b43cbef27d5a1dbd7a51c60d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Create layer and add to the given stream.  <a href="#a225fb162b43cbef27d5a1dbd7a51c60d">More...</a><br /></td></tr>
<tr class="separator:a225fb162b43cbef27d5a1dbd7a51c60d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classarm__compute_1_1graph_1_1frontend_1_1_i_layer"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classarm__compute_1_1graph_1_1frontend_1_1_i_layer')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="classarm__compute_1_1graph_1_1frontend_1_1_i_layer.xhtml">ILayer</a></td></tr>
<tr class="memitem:a0907bb3524e5dfbe23a0f694b2a55c6a inherit pub_methods_classarm__compute_1_1graph_1_1frontend_1_1_i_layer"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1graph_1_1frontend_1_1_i_layer.xhtml#a0907bb3524e5dfbe23a0f694b2a55c6a">~ILayer</a> ()=default</td></tr>
<tr class="memdesc:a0907bb3524e5dfbe23a0f694b2a55c6a inherit pub_methods_classarm__compute_1_1graph_1_1frontend_1_1_i_layer"><td class="mdescLeft">&#160;</td><td class="mdescRight">Default destructor.  <a href="#a0907bb3524e5dfbe23a0f694b2a55c6a">More...</a><br /></td></tr>
<tr class="separator:a0907bb3524e5dfbe23a0f694b2a55c6a inherit pub_methods_classarm__compute_1_1graph_1_1frontend_1_1_i_layer"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af664a2598e05f8de28fb9f94e3902886 inherit pub_methods_classarm__compute_1_1graph_1_1frontend_1_1_i_layer"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classarm__compute_1_1graph_1_1frontend_1_1_i_layer.xhtml">ILayer</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1graph_1_1frontend_1_1_i_layer.xhtml#af664a2598e05f8de28fb9f94e3902886">set_name</a> (std::string <a class="el" href="classarm__compute_1_1graph_1_1frontend_1_1_i_layer.xhtml#a324e8c54c4c5161913681a1a52fef959">name</a>)</td></tr>
<tr class="memdesc:af664a2598e05f8de28fb9f94e3902886 inherit pub_methods_classarm__compute_1_1graph_1_1frontend_1_1_i_layer"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the name of the layer.  <a href="#af664a2598e05f8de28fb9f94e3902886">More...</a><br /></td></tr>
<tr class="separator:af664a2598e05f8de28fb9f94e3902886 inherit pub_methods_classarm__compute_1_1graph_1_1frontend_1_1_i_layer"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a324e8c54c4c5161913681a1a52fef959 inherit pub_methods_classarm__compute_1_1graph_1_1frontend_1_1_i_layer"><td class="memItemLeft" align="right" valign="top">const std::string &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classarm__compute_1_1graph_1_1frontend_1_1_i_layer.xhtml#a324e8c54c4c5161913681a1a52fef959">name</a> () const </td></tr>
<tr class="memdesc:a324e8c54c4c5161913681a1a52fef959 inherit pub_methods_classarm__compute_1_1graph_1_1frontend_1_1_i_layer"><td class="mdescLeft">&#160;</td><td class="mdescRight">Layer name accessor.  <a href="#a324e8c54c4c5161913681a1a52fef959">More...</a><br /></td></tr>
<tr class="separator:a324e8c54c4c5161913681a1a52fef959 inherit pub_methods_classarm__compute_1_1graph_1_1frontend_1_1_i_layer"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>Branch Layer. </p>

<p>Definition at line <a class="el" href="_layers_8h_source.xhtml#l00597">597</a> of file <a class="el" href="_layers_8h_source.xhtml">Layers.h</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a class="anchor" id="ac800c8cfff2622dd1084922d2420cf8e"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1graph_1_1frontend_1_1_branch_layer.xhtml">BranchLayer</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespacearm__compute_1_1graph_1_1frontend.xhtml#a001290b9a1953d3fb723b261667ff38e">BranchMergeMethod</a>&#160;</td>
          <td class="paramname"><em>merge_method</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1graph_1_1frontend_1_1_sub_stream.xhtml">SubStream</a> &amp;&amp;&#160;</td>
          <td class="paramname"><em>sub_stream1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1graph_1_1frontend_1_1_sub_stream.xhtml">SubStream</a> &amp;&amp;&#160;</td>
          <td class="paramname"><em>sub_stream2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">Ts &amp;&amp;...&#160;</td>
          <td class="paramname"><em>rest_sub_streams</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Construct a branch layer. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">merge_method</td><td>Branch merging method </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">sub_stream1</td><td>First graph branch </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">sub_stream2</td><td>Second graph branch </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">rest_sub_streams</td><td>Rest sub-graph branches </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="_layers_8h_source.xhtml#l00608">608</a> of file <a class="el" href="_layers_8h_source.xhtml">Layers.h</a>.</p>

<p>References <a class="el" href="_utility_8h_source.xhtml#l00091">arm_compute::utility::for_each()</a>.</p>
<div class="fragment"><div class="line"><a name="l00609"></a><span class="lineno">  609</span>&#160;        : _branch_merge_method(merge_method), _sub_streams()</div><div class="line"><a name="l00610"></a><span class="lineno">  610</span>&#160;    {</div><div class="line"><a name="l00611"></a><span class="lineno">  611</span>&#160;        _sub_streams.push_back(arm_compute::support::cpp14::make_unique&lt;SubStream&gt;(std::move(sub_stream1)));</div><div class="line"><a name="l00612"></a><span class="lineno">  612</span>&#160;        _sub_streams.push_back(arm_compute::support::cpp14::make_unique&lt;SubStream&gt;(std::move(sub_stream2)));</div><div class="line"><a name="l00613"></a><span class="lineno">  613</span>&#160;</div><div class="line"><a name="l00614"></a><span class="lineno">  614</span>&#160;        <a class="code" href="namespacearm__compute_1_1utility.xhtml#a067ebd28103d827b6ec17032e2344064">utility::for_each</a>([&amp;](SubStream &amp;&amp; sub_stream)</div><div class="line"><a name="l00615"></a><span class="lineno">  615</span>&#160;        {</div><div class="line"><a name="l00616"></a><span class="lineno">  616</span>&#160;            _sub_streams.push_back(arm_compute::support::cpp14::make_unique&lt;SubStream&gt;(std::move(sub_stream)));</div><div class="line"><a name="l00617"></a><span class="lineno">  617</span>&#160;        },</div><div class="line"><a name="l00618"></a><span class="lineno">  618</span>&#160;        std::move(rest_sub_streams)...);</div><div class="line"><a name="l00619"></a><span class="lineno">  619</span>&#160;    }</div><div class="ttc" id="namespacearm__compute_1_1utility_xhtml_a067ebd28103d827b6ec17032e2344064"><div class="ttname"><a href="namespacearm__compute_1_1utility.xhtml#a067ebd28103d827b6ec17032e2344064">arm_compute::utility::for_each</a></div><div class="ttdeci">void for_each(F &amp;&amp;)</div><div class="ttdoc">Base case of for_each. </div><div class="ttdef"><b>Definition:</b> <a href="_utility_8h_source.xhtml#l00091">Utility.h:91</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a class="anchor" id="aa412c659eb4b4fecfa3203331286d5d3"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classarm__compute_1_1graph_1_1frontend_1_1_branch_layer.xhtml">BranchLayer</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1graph_1_1frontend_1_1_sub_stream.xhtml">SubStream</a> &amp;&amp;&#160;</td>
          <td class="paramname"><em>sub_stream</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Construct a branch layer. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">sub_stream</td><td>Sub-stream </td></tr>
  </table>
  </dd>
</dl>

<p>Definition at line <a class="el" href="_layers_8h_source.xhtml#l00625">625</a> of file <a class="el" href="_layers_8h_source.xhtml">Layers.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00626"></a><span class="lineno">  626</span>&#160;        : _branch_merge_method(<a class="code" href="namespacearm__compute_1_1graph_1_1frontend.xhtml#a001290b9a1953d3fb723b261667ff38ea7a6a2c7579c4530e4660af1d24a1287e">BranchMergeMethod::DEPTH_CONCATENATE</a>), _sub_streams()</div><div class="line"><a name="l00627"></a><span class="lineno">  627</span>&#160;    {</div><div class="line"><a name="l00628"></a><span class="lineno">  628</span>&#160;        _sub_streams.push_back(arm_compute::support::cpp14::make_unique&lt;SubStream&gt;(std::move(sub_stream)));</div><div class="line"><a name="l00629"></a><span class="lineno">  629</span>&#160;    }</div><div class="ttc" id="namespacearm__compute_1_1graph_1_1frontend_xhtml_a001290b9a1953d3fb723b261667ff38ea7a6a2c7579c4530e4660af1d24a1287e"><div class="ttname"><a href="namespacearm__compute_1_1graph_1_1frontend.xhtml#a001290b9a1953d3fb723b261667ff38ea7a6a2c7579c4530e4660af1d24a1287e">arm_compute::graph::frontend::BranchMergeMethod::DEPTH_CONCATENATE</a></div><div class="ttdoc">Concatenate across depth. </div></div>
</div><!-- fragment -->
</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a class="anchor" id="a225fb162b43cbef27d5a1dbd7a51c60d"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespacearm__compute_1_1graph.xhtml#a56952a8591a9d8481450ae707ae355e7">NodeID</a> create_layer </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classarm__compute_1_1graph_1_1frontend_1_1_i_stream.xhtml">IStream</a> &amp;&#160;</td>
          <td class="paramname"><em>s</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Create layer and add to the given stream. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">s</td><td><a class="el" href="classarm__compute_1_1graph_1_1frontend_1_1_stream.xhtml" title="Stream frontend class to construct simple graphs in a stream fashion. ">Stream</a> to add layer to.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>ID of the created node. </dd></dl>

<p>Implements <a class="el" href="classarm__compute_1_1graph_1_1frontend_1_1_i_layer.xhtml#afd0f42ef97e62ef3b6849bcbb8a7533a">ILayer</a>.</p>

<p>Definition at line <a class="el" href="_layers_8h_source.xhtml#l00630">630</a> of file <a class="el" href="_layers_8h_source.xhtml">Layers.h</a>.</p>

<p>References <a class="el" href="namespacearm__compute_1_1graph.xhtml#aa12973876c037bddff8e9ece94aca0e4aec211f7c20af43e742bf2570c3cb84f9">arm_compute::graph::Add</a>, <a class="el" href="classarm__compute_1_1graph_1_1_graph_builder.xhtml#a13b857340205ae26f8ca1fd30a648b75">GraphBuilder::add_concatenate_node()</a>, <a class="el" href="classarm__compute_1_1graph_1_1_graph_builder.xhtml#a7d0d78c3fe7a6530cf184a8f99172214">GraphBuilder::add_elementwise_node()</a>, <a class="el" href="_error_8h_source.xhtml#l00337">ARM_COMPUTE_ERROR_ON</a>, <a class="el" href="namespacearm__compute.xhtml#a74ce3f7420453d3446218ff3b7453e02af52e9c50a060add65a035429b2a22229">arm_compute::CHANNEL</a>, <a class="el" href="namespacearm__compute_1_1graph_1_1frontend.xhtml#a001290b9a1953d3fb723b261667ff38ea7a6a2c7579c4530e4660af1d24a1287e">arm_compute::graph::frontend::DEPTH_CONCATENATE</a>, <a class="el" href="arm__compute_2graph_2_types_8h_source.xhtml#l00070">arm_compute::graph::EmptyNodeID</a>, <a class="el" href="classarm__compute_1_1graph_1_1frontend_1_1_i_stream.xhtml#a2f9edb3a23ff98069aaa52590d53bf5f">IStream::graph()</a>, <a class="el" href="_i_stream_8h_source.xhtml#l00073">IStream::hints()</a>, <a class="el" href="_i_layer_8h_source.xhtml#l00064">ILayer::name()</a>, <a class="el" href="classarm__compute_1_1graph_1_1_graph.xhtml#a62b93384d460474d7e07b8b298f22761">Graph::node()</a>, <a class="el" href="namespacearm__compute_1_1graph.xhtml#acac9cbaeea226ed297804c012dc12b16a29c2c02a361c9d7028472e5d92cd4a54">arm_compute::graph::Output</a>, and <a class="el" href="arm__compute_2graph_2frontend_2_types_8h_source.xhtml#l00068">StreamHints::target_hint</a>.</p>
<div class="fragment"><div class="line"><a name="l00631"></a><span class="lineno">  631</span>&#160;    {</div><div class="line"><a name="l00632"></a><span class="lineno">  632</span>&#160;        <a class="code" href="namespacearm__compute_1_1graph.xhtml#a56952a8591a9d8481450ae707ae355e7">NodeID</a>     nid           = <a class="code" href="namespacearm__compute_1_1graph.xhtml#aad3f5296ec88b9d552c109b04b89ad9f">EmptyNodeID</a>;</div><div class="line"><a name="l00633"></a><span class="lineno">  633</span>&#160;        NodeParams common_params = { <a class="code" href="classarm__compute_1_1graph_1_1frontend_1_1_i_layer.xhtml#a324e8c54c4c5161913681a1a52fef959">name</a>(), s.hints().target_hint };</div><div class="line"><a name="l00634"></a><span class="lineno">  634</span>&#160;        <span class="keywordflow">if</span>(_sub_streams.size() == 1 &amp;&amp; _sub_streams.at(0) != <span class="keyword">nullptr</span>)</div><div class="line"><a name="l00635"></a><span class="lineno">  635</span>&#160;        {</div><div class="line"><a name="l00636"></a><span class="lineno">  636</span>&#160;            nid = _sub_streams[0]-&gt;tail_node();</div><div class="line"><a name="l00637"></a><span class="lineno">  637</span>&#160;        }</div><div class="line"><a name="l00638"></a><span class="lineno">  638</span>&#160;        <span class="keywordflow">else</span> <span class="keywordflow">if</span>(_branch_merge_method == <a class="code" href="namespacearm__compute_1_1graph_1_1frontend.xhtml#a001290b9a1953d3fb723b261667ff38ea7a6a2c7579c4530e4660af1d24a1287e">BranchMergeMethod::DEPTH_CONCATENATE</a>)</div><div class="line"><a name="l00639"></a><span class="lineno">  639</span>&#160;        {</div><div class="line"><a name="l00640"></a><span class="lineno">  640</span>&#160;            <span class="comment">// Collect tail nodes and concatenate</span></div><div class="line"><a name="l00641"></a><span class="lineno">  641</span>&#160;            std::vector&lt;NodeIdxPair&gt; nodes;</div><div class="line"><a name="l00642"></a><span class="lineno">  642</span>&#160;            <span class="keywordflow">for</span>(<span class="keyword">auto</span> &amp;ss : _sub_streams)</div><div class="line"><a name="l00643"></a><span class="lineno">  643</span>&#160;            {</div><div class="line"><a name="l00644"></a><span class="lineno">  644</span>&#160;                <span class="keywordflow">if</span>(ss &amp;&amp; (ss-&gt;tail_node() != <a class="code" href="namespacearm__compute_1_1graph.xhtml#aad3f5296ec88b9d552c109b04b89ad9f">EmptyNodeID</a>))</div><div class="line"><a name="l00645"></a><span class="lineno">  645</span>&#160;                {</div><div class="line"><a name="l00646"></a><span class="lineno">  646</span>&#160;                    <span class="keyword">const</span> <span class="keyword">auto</span> tail_node = s.graph().node(ss-&gt;tail_node());</div><div class="line"><a name="l00647"></a><span class="lineno">  647</span>&#160;                    <span class="keywordflow">if</span>(tail_node != <span class="keyword">nullptr</span> &amp;&amp; tail_node-&gt;type() != <a class="code" href="namespacearm__compute_1_1graph.xhtml#acac9cbaeea226ed297804c012dc12b16a29c2c02a361c9d7028472e5d92cd4a54">NodeType::Output</a>)</div><div class="line"><a name="l00648"></a><span class="lineno">  648</span>&#160;                    {</div><div class="line"><a name="l00649"></a><span class="lineno">  649</span>&#160;                        nodes.push_back({ ss-&gt;tail_node(), 0 });</div><div class="line"><a name="l00650"></a><span class="lineno">  650</span>&#160;                    }</div><div class="line"><a name="l00651"></a><span class="lineno">  651</span>&#160;                }</div><div class="line"><a name="l00652"></a><span class="lineno">  652</span>&#160;            }</div><div class="line"><a name="l00653"></a><span class="lineno">  653</span>&#160;            nid = <a class="code" href="classarm__compute_1_1graph_1_1_graph_builder.xhtml#a13b857340205ae26f8ca1fd30a648b75">GraphBuilder::add_concatenate_node</a>(s.graph(), common_params, nodes, <a class="code" href="namespacearm__compute.xhtml#a74ce3f7420453d3446218ff3b7453e02af52e9c50a060add65a035429b2a22229">DataLayoutDimension::CHANNEL</a>);</div><div class="line"><a name="l00654"></a><span class="lineno">  654</span>&#160;        }</div><div class="line"><a name="l00655"></a><span class="lineno">  655</span>&#160;        <span class="keywordflow">else</span></div><div class="line"><a name="l00656"></a><span class="lineno">  656</span>&#160;        {</div><div class="line"><a name="l00657"></a><span class="lineno">  657</span>&#160;            <a class="code" href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a>(_sub_streams.size() != 2);</div><div class="line"><a name="l00658"></a><span class="lineno">  658</span>&#160;            NodeIdxPair input0 = { _sub_streams[0]-&gt;tail_node(), 0 };</div><div class="line"><a name="l00659"></a><span class="lineno">  659</span>&#160;            NodeIdxPair input1 = { _sub_streams[1]-&gt;tail_node(), 0 };</div><div class="line"><a name="l00660"></a><span class="lineno">  660</span>&#160;            nid                = <a class="code" href="classarm__compute_1_1graph_1_1_graph_builder.xhtml#a7d0d78c3fe7a6530cf184a8f99172214">GraphBuilder::add_elementwise_node</a>(s.graph(), common_params, input0, input1, <a class="code" href="namespacearm__compute_1_1graph.xhtml#aa12973876c037bddff8e9ece94aca0e4aec211f7c20af43e742bf2570c3cb84f9">EltwiseOperation::Add</a>);</div><div class="line"><a name="l00661"></a><span class="lineno">  661</span>&#160;        }</div><div class="line"><a name="l00662"></a><span class="lineno">  662</span>&#160;        <span class="keywordflow">return</span> nid;</div><div class="line"><a name="l00663"></a><span class="lineno">  663</span>&#160;    }</div><div class="ttc" id="namespacearm__compute_1_1graph_1_1frontend_xhtml_a001290b9a1953d3fb723b261667ff38ea7a6a2c7579c4530e4660af1d24a1287e"><div class="ttname"><a href="namespacearm__compute_1_1graph_1_1frontend.xhtml#a001290b9a1953d3fb723b261667ff38ea7a6a2c7579c4530e4660af1d24a1287e">arm_compute::graph::frontend::BranchMergeMethod::DEPTH_CONCATENATE</a></div><div class="ttdoc">Concatenate across depth. </div></div>
<div class="ttc" id="_error_8h_xhtml_a54a6080c9f4df1f908e57a9bbb46f5da"><div class="ttname"><a href="_error_8h.xhtml#a54a6080c9f4df1f908e57a9bbb46f5da">ARM_COMPUTE_ERROR_ON</a></div><div class="ttdeci">#define ARM_COMPUTE_ERROR_ON(cond)</div><div class="ttdoc">If the condition is true then an error message is printed and an exception thrown. </div><div class="ttdef"><b>Definition:</b> <a href="_error_8h_source.xhtml#l00337">Error.h:337</a></div></div>
<div class="ttc" id="classarm__compute_1_1graph_1_1frontend_1_1_i_layer_xhtml_a324e8c54c4c5161913681a1a52fef959"><div class="ttname"><a href="classarm__compute_1_1graph_1_1frontend_1_1_i_layer.xhtml#a324e8c54c4c5161913681a1a52fef959">arm_compute::graph::frontend::ILayer::name</a></div><div class="ttdeci">const std::string &amp; name() const </div><div class="ttdoc">Layer name accessor. </div><div class="ttdef"><b>Definition:</b> <a href="_i_layer_8h_source.xhtml#l00064">ILayer.h:64</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1graph_xhtml_aa12973876c037bddff8e9ece94aca0e4aec211f7c20af43e742bf2570c3cb84f9"><div class="ttname"><a href="namespacearm__compute_1_1graph.xhtml#aa12973876c037bddff8e9ece94aca0e4aec211f7c20af43e742bf2570c3cb84f9">arm_compute::graph::EltwiseOperation::Add</a></div><div class="ttdoc">Arithmetic addition. </div></div>
<div class="ttc" id="namespacearm__compute_xhtml_a74ce3f7420453d3446218ff3b7453e02af52e9c50a060add65a035429b2a22229"><div class="ttname"><a href="namespacearm__compute.xhtml#a74ce3f7420453d3446218ff3b7453e02af52e9c50a060add65a035429b2a22229">arm_compute::DataLayoutDimension::CHANNEL</a></div><div class="ttdoc">channel </div></div>
<div class="ttc" id="classarm__compute_1_1graph_1_1_graph_builder_xhtml_a7d0d78c3fe7a6530cf184a8f99172214"><div class="ttname"><a href="classarm__compute_1_1graph_1_1_graph_builder.xhtml#a7d0d78c3fe7a6530cf184a8f99172214">arm_compute::graph::GraphBuilder::add_elementwise_node</a></div><div class="ttdeci">static NodeID add_elementwise_node(Graph &amp;g, NodeParams params, NodeIdxPair input0, NodeIdxPair input1, EltwiseOperation operation)</div><div class="ttdoc">Adds an element-wise layer node to the graph. </div></div>
<div class="ttc" id="namespacearm__compute_1_1graph_xhtml_a56952a8591a9d8481450ae707ae355e7"><div class="ttname"><a href="namespacearm__compute_1_1graph.xhtml#a56952a8591a9d8481450ae707ae355e7">arm_compute::graph::NodeID</a></div><div class="ttdeci">unsigned int NodeID</div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2graph_2_types_8h_source.xhtml#l00060">Types.h:60</a></div></div>
<div class="ttc" id="classarm__compute_1_1graph_1_1_graph_builder_xhtml_a13b857340205ae26f8ca1fd30a648b75"><div class="ttname"><a href="classarm__compute_1_1graph_1_1_graph_builder.xhtml#a13b857340205ae26f8ca1fd30a648b75">arm_compute::graph::GraphBuilder::add_concatenate_node</a></div><div class="ttdeci">static NodeID add_concatenate_node(Graph &amp;g, NodeParams params, std::vector&lt; NodeIdxPair &gt; inputs, DataLayoutDimension axis)</div><div class="ttdoc">Adds a depth concatenate node to the graph. </div></div>
<div class="ttc" id="namespacearm__compute_1_1graph_xhtml_aad3f5296ec88b9d552c109b04b89ad9f"><div class="ttname"><a href="namespacearm__compute_1_1graph.xhtml#aad3f5296ec88b9d552c109b04b89ad9f">arm_compute::graph::EmptyNodeID</a></div><div class="ttdeci">constexpr NodeID EmptyNodeID</div><div class="ttdoc">Constant EdgeID specifying an equivalent of null edge. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2graph_2_types_8h_source.xhtml#l00070">Types.h:70</a></div></div>
<div class="ttc" id="namespacearm__compute_1_1graph_xhtml_acac9cbaeea226ed297804c012dc12b16a29c2c02a361c9d7028472e5d92cd4a54"><div class="ttname"><a href="namespacearm__compute_1_1graph.xhtml#acac9cbaeea226ed297804c012dc12b16a29c2c02a361c9d7028472e5d92cd4a54">arm_compute::graph::NodeType::Output</a></div></div>
</div><!-- fragment -->
</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li>arm_compute/graph/frontend/<a class="el" href="_layers_8h_source.xhtml">Layers.h</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespacearm__compute.xhtml">arm_compute</a></li><li class="navelem"><a class="el" href="namespacearm__compute_1_1graph.xhtml">graph</a></li><li class="navelem"><a class="el" href="namespacearm__compute_1_1graph_1_1frontend.xhtml">frontend</a></li><li class="navelem"><a class="el" href="classarm__compute_1_1graph_1_1frontend_1_1_branch_layer.xhtml">BranchLayer</a></li>
    <li class="footer">Generated on Wed Aug 29 2018 15:31:51 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.11 </li>
  </ul>
</div>
</body>
</html>
