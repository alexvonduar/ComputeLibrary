<!-- HTML header for doxygen 1.8.9.1-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>Compute Library: src/core/NEON/kernels/arm_gemm/gemm_native.hpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">Compute Library
   &#160;<span id="projectnumber">18.11</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('gemm__native_8hpp_source.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">gemm_native.hpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="gemm__native_8hpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/*</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> * Copyright (c) 2017-2018 ARM Limited.</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> * SPDX-License-Identifier: MIT</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> * Permission is hereby granted, free of charge, to any person obtaining a copy</span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"> * of this software and associated documentation files (the &quot;Software&quot;), to</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"> * deal in the Software without restriction, including without limitation the</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"> * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or</span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment"> * sell copies of the Software, and to permit persons to whom the Software is</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"> * furnished to do so, subject to the following conditions:</span></div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"> * The above copyright notice and this permission notice shall be included in all</span></div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment"> * copies or substantial portions of the Software.</span></div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment"> * THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR</span></div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment"> * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,</span></div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment"> * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE</span></div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment"> * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER</span></div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment"> * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,</span></div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment"> * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE</span></div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment"> * SOFTWARE.</span></div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment"> */</span></div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="preprocessor">#pragma once</span></div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;</div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="preprocessor">#include &lt;stdio.h&gt;</span></div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;</div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="preprocessor">#include &quot;arm_gemm.hpp&quot;</span></div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;</div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="mergeresults_8hpp.xhtml">mergeresults.hpp</a>&quot;</span></div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="transform_8hpp.xhtml">transform.hpp</a>&quot;</span></div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;</div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="preprocessor">#ifdef CYCLE_PROFILING</span></div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="profiler_8hpp.xhtml">profiler.hpp</a>&quot;</span></div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespacearm__gemm.xhtml">arm_gemm</a> {</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;<span class="comment">// Implementation of the GemmCommon abstract class.</span></div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;<span class="comment">//</span></div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;<span class="comment">// This is implementation is for native GEMM with no transposition.</span></div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;<span class="comment">//</span></div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;<span class="comment">// By default the source data is used in-place, but if type conversion is</span></div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;<span class="comment">// needed we need to allocate working space (CURRENTLY NOT IMPLEMENTED).</span></div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;<span class="keyword">template</span>&lt;<span class="keyword">typename</span> strategy, <span class="keyword">typename</span> To, <span class="keyword">typename</span> Tr&gt;</div><div class="line"><a name="l00047"></a><span class="lineno"><a class="line" href="classarm__gemm_1_1_gemm_native.xhtml">   47</a></span>&#160;<span class="keyword">class </span><a class="code" href="classarm__gemm_1_1_gemm_native.xhtml">GemmNative</a> : <span class="keyword">public</span> GemmCommon&lt;To, Tr&gt; {</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;    <span class="keyword">typedef</span> <span class="keyword">typename</span> strategy::operand_type Toi;</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;    <span class="keyword">typedef</span> <span class="keyword">typename</span> strategy::result_type Tri;</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> _Msize;</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> _Nsize;</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> _Ksize;</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> _nbatches;</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> _nmultis;</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;    Tr _beta;</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;    <span class="keyword">const</span> CPUInfo * <span class="keyword">const</span> _ci;</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> k_block=0;</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> n_block=0;</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> window_per_batch()<span class="keyword"> const </span>{</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="utils_8hpp.xhtml#a684c8067c15bcb74b9d79a822aa8098f">iceildiv</a>(_Msize, strategy::out_height());</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;    }</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> window_per_multi()<span class="keyword"> const </span>{</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;        <span class="keywordflow">return</span> window_per_batch() * _nbatches;</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;    }</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;<span class="keyword">public</span>:</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;    <a class="code" href="classarm__gemm_1_1_gemm_native.xhtml#a0cb6cb7fbb8f763ccf8410b01c57d762">GemmNative</a>(<a class="code" href="classarm__gemm_1_1_gemm_native.xhtml">GemmNative</a> &amp;) = <span class="keyword">delete</span>;</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;    <a class="code" href="classarm__gemm_1_1_gemm_native.xhtml">GemmNative</a> &amp; <a class="code" href="classarm__gemm_1_1_gemm_native.xhtml#a27d1c82132d0cae0a2d04fb3c5c4b6d3">operator= </a>(<a class="code" href="classarm__gemm_1_1_gemm_native.xhtml">GemmNative</a> &amp;) = <span class="keyword">delete</span>;</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;</div><div class="line"><a name="l00077"></a><span class="lineno"><a class="line" href="classarm__gemm_1_1_gemm_native.xhtml#ad9f30861e60cb3963a8a68ff4a80815b">   77</a></span>&#160;    <a class="code" href="classarm__gemm_1_1_gemm_native.xhtml#ad9f30861e60cb3963a8a68ff4a80815b">GemmNative</a>(<span class="keyword">const</span> CPUInfo *ci, <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> M, <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> N, <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> K, <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> nbatches, <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> nmultis, <span class="keyword">const</span> Tr <a class="code" href="namespacearm__compute_1_1test_1_1validation.xhtml#ab146b9cbab6e73e7588b240dc709fe01">beta</a>) :</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;        _Msize(M), _Nsize(N), _Ksize(K), _nbatches(nbatches), _nmultis(nmultis), _beta(beta), _ci(ci) {</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;        <span class="comment">/* For now don&#39;t do any blocking. TODO: figure out if we should. */</span></div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;        k_block = K;</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;        n_block = N;</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;    }</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;    <span class="comment">// Window is amount per multi multiplied by total number of multis.</span></div><div class="line"><a name="l00085"></a><span class="lineno"><a class="line" href="classarm__gemm_1_1_gemm_native.xhtml#a9fe814165d032363ea4f9cfdd36dd5e2">   85</a></span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="classarm__gemm_1_1_gemm_native.xhtml#a9fe814165d032363ea4f9cfdd36dd5e2">get_window_size</a>()<span class="keyword"> const override </span>{</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;        <span class="keywordflow">return</span> window_per_multi() * _nmultis;</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;    }</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;    <span class="comment">// Actually execute the GEMM.</span></div><div class="line"><a name="l00090"></a><span class="lineno"><a class="line" href="classarm__gemm_1_1_gemm_native.xhtml#a514bdec015ee0ca587b6444e9defc190">   90</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarm__gemm_1_1_gemm_native.xhtml#a514bdec015ee0ca587b6444e9defc190">execute</a>(<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> start, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> end, <span class="keywordtype">int</span>)<span class="keyword"> override </span>{</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;<span class="preprocessor">#ifdef CYCLE_PROFILING</span></div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;        profiler prof;</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;        strategy strat(_ci);</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;        static_assert(std::is_same&lt;To, Toi&gt;::value, <span class="stringliteral">&quot;gemm_native: Operand types must be the same.&quot;</span>);</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;        static_assert(std::is_same&lt;Tr, Tri&gt;::value, <span class="stringliteral">&quot;gemm_native: Result types must be the same.&quot;</span>);</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;        <span class="comment">/* Compute starting point based on &#39;start&#39; */</span></div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;        <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> multi     = start / window_per_multi();</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;        <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> multi_pos = start % window_per_multi();</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;        <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> batch     = multi_pos / window_per_batch();</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;        <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> batch_pos = multi_pos % window_per_batch();</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;        <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> y0        = batch_pos * strategy::out_height();</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;        <span class="keywordflow">for</span> (<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> pos=start; pos&lt;end; pos++) {</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;            <span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> ymax = std::min(y0 + strategy::out_height(), _Msize);</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;<span class="preprocessor">#ifdef CYCLE_PROFILING</span></div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;            <span class="keyword">auto</span> p = prof.ScopedProfiler(<a class="code" href="profiler_8hpp.xhtml#a97f4e398174b5e094f5262e5d785ac20">PROFILE_KERNEL</a>, (ymax-y0) * _Nsize * _Ksize);</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;            strat.kernel(this-&gt;_Aptr + (multi * this-&gt;_A_multi_stride) + (batch * this-&gt;_A_batch_stride) + (y0 * this-&gt;_lda), this-&gt;_lda,</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;                         this-&gt;_Bptr + (multi * this-&gt;_B_multi_stride), this-&gt;_ldb,</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;                         this-&gt;_Cptr + (multi * this-&gt;_C_multi_stride) + (batch * this-&gt;_C_batch_stride) + (y0 * this-&gt;_ldc), this-&gt;_ldc,</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;                         _beta, (ymax-y0), _Nsize, _Ksize);</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;            <span class="comment">/* Advance to next item */</span></div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;            y0 += strategy::out_height();</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;            <span class="comment">/* Check for batch/multi overflow */</span></div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;            <span class="keywordflow">if</span> (y0 &gt;= _Msize) {</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;                y0=0;</div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;                batch++;</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;                <span class="keywordflow">if</span> (batch == _nbatches) {</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;                    batch=0;</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;                    multi++;</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;                }</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;            }</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;        }</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;    }</div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;};</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;</div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;} <span class="comment">// namespace arm_gemm</span></div><div class="ttc" id="namespacearm__compute_1_1test_1_1validation_xhtml_ab146b9cbab6e73e7588b240dc709fe01"><div class="ttname"><a href="namespacearm__compute_1_1test_1_1validation.xhtml#ab146b9cbab6e73e7588b240dc709fe01">arm_compute::test::validation::beta</a></div><div class="ttdeci">beta</div><div class="ttdef"><b>Definition:</b> <a href="validation_2_c_l_2_g_e_m_m_8cpp_source.xhtml#l00087">GEMM.cpp:87</a></div></div>
<div class="ttc" id="mergeresults_8hpp_xhtml"><div class="ttname"><a href="mergeresults_8hpp.xhtml">mergeresults.hpp</a></div></div>
<div class="ttc" id="namespacearm__gemm_xhtml"><div class="ttname"><a href="namespacearm__gemm.xhtml">arm_gemm</a></div><div class="ttdef"><b>Definition:</b> <a href="buffer__manager_8hpp_source.xhtml#l00041">buffer_manager.hpp:41</a></div></div>
<div class="ttc" id="profiler_8hpp_xhtml"><div class="ttname"><a href="profiler_8hpp.xhtml">profiler.hpp</a></div></div>
<div class="ttc" id="classarm__gemm_1_1_gemm_native_xhtml_a0cb6cb7fbb8f763ccf8410b01c57d762"><div class="ttname"><a href="classarm__gemm_1_1_gemm_native.xhtml#a0cb6cb7fbb8f763ccf8410b01c57d762">arm_gemm::GemmNative::GemmNative</a></div><div class="ttdeci">GemmNative(GemmNative &amp;)=delete</div></div>
<div class="ttc" id="classarm__gemm_1_1_gemm_native_xhtml_ad9f30861e60cb3963a8a68ff4a80815b"><div class="ttname"><a href="classarm__gemm_1_1_gemm_native.xhtml#ad9f30861e60cb3963a8a68ff4a80815b">arm_gemm::GemmNative::GemmNative</a></div><div class="ttdeci">GemmNative(const CPUInfo *ci, const unsigned int M, const unsigned int N, const unsigned int K, const unsigned int nbatches, const unsigned int nmultis, const Tr beta)</div><div class="ttdef"><b>Definition:</b> <a href="gemm__native_8hpp_source.xhtml#l00077">gemm_native.hpp:77</a></div></div>
<div class="ttc" id="classarm__gemm_1_1_gemm_native_xhtml_a514bdec015ee0ca587b6444e9defc190"><div class="ttname"><a href="classarm__gemm_1_1_gemm_native.xhtml#a514bdec015ee0ca587b6444e9defc190">arm_gemm::GemmNative::execute</a></div><div class="ttdeci">void execute(unsigned int start, unsigned int end, int) override</div><div class="ttdef"><b>Definition:</b> <a href="gemm__native_8hpp_source.xhtml#l00090">gemm_native.hpp:90</a></div></div>
<div class="ttc" id="classarm__gemm_1_1_gemm_native_xhtml_a27d1c82132d0cae0a2d04fb3c5c4b6d3"><div class="ttname"><a href="classarm__gemm_1_1_gemm_native.xhtml#a27d1c82132d0cae0a2d04fb3c5c4b6d3">arm_gemm::GemmNative::operator=</a></div><div class="ttdeci">GemmNative &amp; operator=(GemmNative &amp;)=delete</div></div>
<div class="ttc" id="transform_8hpp_xhtml"><div class="ttname"><a href="transform_8hpp.xhtml">transform.hpp</a></div></div>
<div class="ttc" id="classarm__gemm_1_1_gemm_native_xhtml"><div class="ttname"><a href="classarm__gemm_1_1_gemm_native.xhtml">arm_gemm::GemmNative</a></div><div class="ttdef"><b>Definition:</b> <a href="gemm__native_8hpp_source.xhtml#l00047">gemm_native.hpp:47</a></div></div>
<div class="ttc" id="profiler_8hpp_xhtml_a97f4e398174b5e094f5262e5d785ac20"><div class="ttname"><a href="profiler_8hpp.xhtml#a97f4e398174b5e094f5262e5d785ac20">PROFILE_KERNEL</a></div><div class="ttdeci">#define PROFILE_KERNEL</div><div class="ttdef"><b>Definition:</b> <a href="profiler_8hpp_source.xhtml#l00136">profiler.hpp:136</a></div></div>
<div class="ttc" id="classarm__gemm_1_1_gemm_native_xhtml_a9fe814165d032363ea4f9cfdd36dd5e2"><div class="ttname"><a href="classarm__gemm_1_1_gemm_native.xhtml#a9fe814165d032363ea4f9cfdd36dd5e2">arm_gemm::GemmNative::get_window_size</a></div><div class="ttdeci">unsigned int get_window_size() const override</div><div class="ttdef"><b>Definition:</b> <a href="gemm__native_8hpp_source.xhtml#l00085">gemm_native.hpp:85</a></div></div>
<div class="ttc" id="utils_8hpp_xhtml_a684c8067c15bcb74b9d79a822aa8098f"><div class="ttname"><a href="utils_8hpp.xhtml#a684c8067c15bcb74b9d79a822aa8098f">iceildiv</a></div><div class="ttdeci">int iceildiv(const int a, const int b)</div><div class="ttdef"><b>Definition:</b> <a href="utils_8hpp_source.xhtml#l00037">utils.hpp:37</a></div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_aebb8dcc11953d78e620bbef0b9e2183.xhtml">core</a></li><li class="navelem"><a class="el" href="dir_d91e1966cc57df4f49d1e07be7697713.xhtml">NEON</a></li><li class="navelem"><a class="el" href="dir_1ce938f580a6f304b99685e2c1dd19db.xhtml">kernels</a></li><li class="navelem"><a class="el" href="dir_9847dd9cb7a28e46201717fa7336cf62.xhtml">arm_gemm</a></li><li class="navelem"><a class="el" href="gemm__native_8hpp.xhtml">gemm_native.hpp</a></li>
    <li class="footer">Generated on Thu Nov 22 2018 11:57:39 for Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
